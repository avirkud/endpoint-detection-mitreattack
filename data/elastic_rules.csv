rule_index,metadata.creation_date,metadata.maturity,metadata.min_stack_comments,metadata.min_stack_version,metadata.updated_date,rule.author,rule.description,rule.false_positives,rule.index,rule.language,rule.license,rule.name,rule.references,rule.risk_score,rule.rule_id,rule.severity,rule.tags,rule.timestamp_override,rule.type,rule.query,rule.from,rule.max_signals,rule.note,rule.threat,rule.threshold,rule.timeline_id,rule.timeline_title,rule.interval,rule.threat_index,rule.threat_indicator_path,rule.threat_language,rule.threat_query,rule.threat_filters,rule.threat_mapping,rule.anomaly_threshold,rule.machine_learning_job_id,rule.rule_name_override,rule.risk_score_mapping,rule.severity_mapping,metadata.query_schema_validation,metadata.deprecation_date,rule.filters,metadata.integration
0,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A POST request to a web application returned a 403 response, which indicates the web application declined to process the
request because the action requested was not allowed.
","['    Security scans and tests may result in these errors. Misconfigured or buggy applications may produce large numbers\n    of these errors. If the source is unexpected, the user unauthorized, or the request unusual, these may indicate\n    suspicious or malicious activity.\n    ']","['apm-*-transaction*', 'traces-apm*']",kuery,Elastic License v2,Web Application Suspicious Activity: POST Request Declined,['https://en.wikipedia.org/wiki/HTTP_403'],47,a87a4e42-1d82-44bd-b0bf-d9b7f91fb89e,medium,"['Elastic', 'APM']",event.ingested,query,"http.response.status_code:403 and http.request.method:post
",,,,,,,,,,,,,,,,,,,,,,,
1,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A request to a web application returned a 405 response, which indicates the web application declined to process the
request because the HTTP method is not allowed for the resource.
","['    Security scans and tests may result in these errors. Misconfigured or buggy applications may produce large numbers\n    of these errors. If the source is unexpected, the user unauthorized, or the request unusual, these may indicate\n    suspicious or malicious activity.\n    ']","['apm-*-transaction*', 'traces-apm*']",kuery,Elastic License v2,Web Application Suspicious Activity: Unauthorized Method,['https://en.wikipedia.org/wiki/HTTP_405'],47,75ee75d8-c180-481c-ba88-ee50129a6aef,medium,"['Elastic', 'APM']",event.ingested,query,"http.response.status_code:405
",,,,,,,,,,,,,,,,,,,,,,,
2,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This is an example of how to detect an unwanted web client user agent. This search matches the user agent for sqlmap
1.3.11, which is a popular FOSS tool for testing web applications for SQL injection vulnerabilities.
","['    This rule does not indicate that a SQL injection attack occurred, only that the `sqlmap` tool was used. Security\n    scans and tests may result in these errors. If the source is not an authorized security tester, this is generally\n    suspicious or malicious activity.\n    ']","['apm-*-transaction*', 'traces-apm*']",kuery,Elastic License v2,Web Application Suspicious Activity: sqlmap User Agent,['http://sqlmap.org/'],47,d49cc73f-7a16-4def-89ce-9fc7127d7820,medium,"['Elastic', 'APM']",event.ingested,query,"user_agent.original:""sqlmap/1.3.11#stable (http://sqlmap.org)""
",,,,,,,,,,,,,,,,,,,,,,,
3,2020/12/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a Chromium based browser with the debugging process argument, which may indicate an attempt
to steal authentication cookies. An adversary may steal web application or service session cookies and use them to gain
access web applications or Internet services as an authenticated user without needing credentials.
",['Developers performing browsers plugin or extension debugging.'],"['auditbeat-*', 'winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Cookies Theft via Browser Debugging,"['https://github.com/defaultnamehere/cookie_crimes', 'https://embracethered.com/blog/posts/2020/cookie-crimes-on-mirosoft-edge/', 'https://github.com/rapid7/metasploit-framework/blob/master/documentation/modules/post/multi/gather/chrome_cookies.md', 'https://posts.specterops.io/hands-in-the-cookie-jar-dumping-cookies-with-chromiums-remote-debugger-port-34c4f468844e']",47,027ff9ea-85e7-42e3-99d2-bbb7069e02eb,medium,"['Elastic', 'Host', 'Linux', 'Windows', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type in (""start"", ""process_started"", ""info"") and
  process.name in (
             ""Microsoft Edge"",
             ""chrome.exe"",
             ""Google Chrome"",
             ""google-chrome-stable"",
             ""google-chrome-beta"",
             ""google-chrome"",
             ""msedge.exe"") and
   process.args : (""--remote-debugging-port=*"",
                   ""--remote-debugging-targets=*"",
                   ""--remote-debugging-pipe=*"") and
   process.args : ""--user-data-dir=*"" and not process.args:""--remote-debugging-port=0""
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1539', 'name': 'Steal Web Session Cookie', 'reference': 'https://attack.mitre.org/techniques/T1539/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
4,2021/07/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects events that have a mismatch on the expected event agent ID. The status ""agent_id_mismatch""
occurs when the expected agent ID associated with the API key does not match the actual agent ID in an event. This could
indicate attempts to spoof events in order to masquerade actual activity to evade detection.
","['    This is meant to run only on datasources using Elastic Agent 7.14+ since versions prior to that will be missing the\n    necessary field, resulting in false positives.\n    ']","['logs-*', 'metrics-*', 'traces-*']",kuery,Elastic License v2,Agent Spoofing - Mismatched Agent ID,,73,3115bd2c-0baa-4df0-80ea-45e474b5ef93,high,"['Elastic', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.agent_id_status:agent_id_mismatch
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
5,2021/07/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects when multiple hosts are using the same agent ID. This could occur in the event of an agent
being taken over and used to inject illegitimate documents into an instance as an attempt to spoof events in order to
masquerade actual activity to evade detection.
","['    This is meant to run only on datasources using Elastic Agent 7.14+ since versions prior to that will be missing the\n    necessary field, resulting in false positives.\n    ']","['logs-*', 'metrics-*', 'traces-*']",kuery,Elastic License v2,Agent Spoofing - Multiple Hosts Using Same Agent,,73,493834ca-f861-414c-8602-150d5505b777,high,"['Elastic', 'Threat Detection', 'Defense Evasion']",event.ingested,threshold,"event.agent_id_status:*
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]","{'field': ['agent.id'], 'value': 2, 'cardinality': [{'field': 'host.id', 'value': 2}]}",,,,,,,,,,,,,,,,,,
6,2020/11/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the deletion of WebServer access logs. This may indicate an attempt to evade detection or destroy forensic
evidence on a system.
",,"['auditbeat-*', 'winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,WebServer Access Logs Deleted,,47,665e7a4f-c58e-4fc6-bc83-87a7572670ac,medium,"['Elastic', 'Host', 'Linux', 'Windows', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"file where event.type == ""deletion"" and
  file.path : (""C:\\inetpub\\logs\\LogFiles\\*.log"",
               ""/var/log/apache*/access.log"",
               ""/etc/httpd/logs/access_log"",
               ""/var/log/httpd/access_log"",
               ""/var/www/*/logs/access.log"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
7,2020/05/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may attempt to clear or disable the Bash command-line history in an attempt to evade detection or forensic
investigations.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Tampering of Bash Command-Line History,,47,7bcbb3ac-e533-41ad-a612-d6c3bf666aba,medium,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
 (
  ((process.args : (""rm"", ""echo"") or
    (process.args : ""ln"" and process.args : ""-sf"" and process.args : ""/dev/null"") or
    (process.args : ""truncate"" and process.args : ""-s0""))
    and process.args : ("".bash_history"", ""/root/.bash_history"", ""/home/*/.bash_history"",""/Users/.bash_history"", ""/Users/*/.bash_history"",
                        "".zsh_history"", ""/root/.zsh_history"", ""/home/*/.zsh_history"", ""/Users/.zsh_history"", ""/Users/*/.zsh_history"")) or
  (process.name : ""history"" and process.args : ""-c"") or
  (process.args : ""export"" and process.args : (""HISTFILE=/dev/null"", ""HISTFILESIZE=0"")) or
  (process.args : ""unset"" and process.args : ""HISTFILE"") or
  (process.args : ""set"" and process.args : ""history"" and process.args : ""+o"")
 )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.003', 'name': 'Clear Command History', 'reference': 'https://attack.mitre.org/techniques/T1070/003/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
8,2022/05/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the Elastic endpoint agent has stopped and is no longer running on the host. Adversaries may attempt to
disable security monitoring tools in an attempt to evade detection or prevention capabilities during an intrusion. This
may also indicate an issue with the agent itself and should be addressed to ensure defensive measures are back in a
stable state.
",,['logs-*'],eql,Elastic License v2,Elastic Agent Service Terminated,,47,b627cd12-dac4-11ec-9582-f661ea17fbcd,medium,"['Elastic', 'Host', 'Linux', 'Windows', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where
/* net, sc or wmic stopping or deleting Elastic Agent on Windows */
(event.type == ""start"" and
  process.name : (""net.exe"", ""sc.exe"", ""wmic.exe"",""powershell.exe"",""taskkill.exe"",""PsKill.exe"",""ProcessHacker.exe"") and
  process.args : (""stopservice"",""uninstall"", ""stop"", ""disabled"",""Stop-Process"",""terminate"",""suspend"") and
  process.args : (""elasticendpoint"", ""Elastic Agent"",""elastic-agent"",""elastic-endpoint""))
or
/* service or systemctl used to stop Elastic Agent on Linux */
(event.type == ""end"" and
  (process.name : (""systemctl"", ""service"") and
    process.args : ""elastic-agent"" and
    process.args : ""stop"")
  or
  /* Unload Elastic Agent extension on MacOS */
  (process.name : ""kextunload"" and
    process.args : ""com.apple.iokit.EndpointSecurity"" and
    event.action : ""end""))
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
9,2020/11/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Timestomping is an anti-forensics technique which is used to modify the timestamps of a file, often to mimic files that
are in the same folder.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Timestomping using Touch Command,,47,b0046934-486e-462f-9487-0d4cf9e429c6,medium,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 process.name : ""touch"" and user.id != ""0"" and
 process.args : (""-r"", ""-t"", ""-a*"",""-m*"") and
 not process.args : (""/usr/lib/go-*/bin/go"", ""/usr/lib/dracut/dracut-functions.sh"", ""/tmp/KSInstallAction.*/m/.patch/*"")
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.006', 'name': 'Timestomp', 'reference': 'https://attack.mitre.org/techniques/T1070/006/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
10,2020/12/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the use of the grep command to discover known third-party macOS and Linux security tools, such as Antivirus
or Host Firewall details.
","['Endpoint Security installers, updaters and post installation verification scripts.']","['logs-endpoint.events.*', 'auditbeat-*']",eql,Elastic License v2,Security Software Discovery via Grep,,47,870aecc0-cea4-4110-af3f-e02e9b373655,medium,"['Elastic', 'Host', 'macOS', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,eql,"process where event.type == ""start"" and
process.name : ""grep"" and user.id != ""0"" and
 not process.parent.executable : ""/Library/Application Support/*"" and
   process.args :
         (""Little Snitch*"",
          ""Avast*"",
          ""Avira*"",
          ""ESET*"",
          ""BlockBlock*"",
          ""360Sec*"",
          ""LuLu*"",
          ""KnockKnock*"",
          ""kav"",
          ""KIS"",
          ""RTProtectionDaemon*"",
          ""Malware*"",
          ""VShieldScanner*"",
          ""WebProtection*"",
          ""webinspectord*"",
          ""McAfee*"",
          ""isecespd*"",
          ""macmnsvc*"",
          ""masvc*"",
          ""kesl*"",
          ""avscan*"",
          ""guard*"",
          ""rtvscand*"",
          ""symcfgd*"",
          ""scmdaemon*"",
          ""symantec*"",
          ""sophos*"",
          ""osquery*"",
          ""elastic-endpoint*""
          ) and
   not (process.args : ""Avast"" and process.args : ""Passwords"")
",now-9m,,"## Triage and analysis

### Investigating Security Software Discovery via Grep

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `grep` utility with arguments compatible to the enumeration of the security
software installed on the host. Attackers can use this information to decide whether or not to infect a system, disable
protections, use bypasses, etc.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence and whether they are located in expected locations.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Investigate any abnormal behavior by the subject process such as network connections, file modifications, and any
spawned child processes.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection via the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1518', 'name': 'Software Discovery', 'reference': 'https://attack.mitre.org/techniques/T1518/', 'subtechnique': [{'id': 'T1518.001', 'name': 'Security Software Discovery', 'reference': 'https://attack.mitre.org/techniques/T1518/001/'}]}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
11,2021/09/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An adversary may attempt to get detailed information about the operating system and hardware. This rule identifies
common locations used to discover virtual machine hardware by a non-root user. This technique has been used by the Pupy
RAT and other malware.
",['    Certain tools or automated software may enumerate hardware information. These tools can be exempted via user name or\n    process arguments to eliminate potential noise.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Virtual Machine Fingerprinting via Grep,['https://objective-see.com/blog/blog_0x4F.html'],47,c85eb82c-d2c8-485c-a36f-534f914b7663,medium,"['Elastic', 'Host', 'macOS', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,eql,"process where event.type == ""start"" and
 process.name in (""grep"", ""egrep"") and user.id != ""0"" and
 process.args : (""parallels*"", ""vmware*"", ""virtualbox*"") and process.args : ""Manufacturer*"" and
 not process.parent.executable in (""/Applications/Docker.app/Contents/MacOS/Docker"", ""/usr/libexec/kcare/virt-what"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1082', 'name': 'System Information Discovery', 'reference': 'https://attack.mitre.org/techniques/T1082/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
12,2021/01/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Identifies the execution of and EggShell Backdoor. EggShell is a known post exploitation tool for macOS and Linux.,,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,EggShell Backdoor Execution,['https://github.com/neoneggplant/EggShell'],73,41824afb-d68c-4d0e-bfee-474dac1fa56e,high,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:espl and process.args:eyJkZWJ1ZyI6*
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'id': 'T1059', 'subtechnique': [{'id': 'T1059.006', 'name': 'Python', 'reference': 'https://attack.mitre.org/techniques/T1059/006/'}]}], 'tactic': {'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'id': 'TA0002'}}]",,,,,,,,,,,,,,,,,,,
13,2021/01/13,development,,,2022/08/24,['Elastic'],"Identifies when a Python script is executed using command line input and imports the sys module. Attackers often use
this method to execute malicious scripts and avoiding writing it to disk.
",['Legitimate Python scripting activity.'],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Python Script Execution via Command Line,,47,ee9f08dc-cf80-4124-94ae-08c405f059ae,medium,"['Elastic', 'Host', 'Linux', 'macOS', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
 process.name : ""python*"" and process.args : ""-c"" and process.args : ""*import*sys*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.006', 'name': 'Python', 'reference': 'https://attack.mitre.org/techniques/T1059/006/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
14,2020/01/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Identifies the execution of a shell process with suspicious arguments which may be indicative of reverse shell activity.,,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential Reverse Shell Activity via Terminal,"['https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md', 'https://github.com/WangYihang/Reverse-Shell-Manager', 'https://www.netsparker.com/blog/web-security/understanding-reverse-shells/']",73,a1a0375f-22c2-48c0-81a4-7c2d11cc6856,high,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.name in (""sh"", ""bash"", ""zsh"", ""dash"", ""zmodload"") and
  process.args : (""*/dev/tcp/*"", ""*/dev/udp/*"", ""*zsh/net/tcp*"", ""*zsh/net/udp*"") and

  /* noisy FPs */
  not (process.parent.name : ""timeout"" and process.executable : ""/var/lib/docker/overlay*"") and
  not process.command_line : (""*/dev/tcp/sirh_db/*"", ""*/dev/tcp/remoteiot.com/*"", ""*dev/tcp/elk.stag.one/*"", ""*dev/tcp/kafka/*"", ""*/dev/tcp/$0/$1*"", ""*/dev/tcp/127.*"", ""*/dev/udp/127.*"", ""*/dev/tcp/localhost/*"") and
  not process.parent.command_line : ""runc init""
",now-9m,,"## Triage and analysis

### Investigating Potential Reverse Shell Activity via Terminal

A reverse shell is a mechanism that's abused to connect back to an attacker-controlled system. It effectively redirects
the system's input and output and delivers a fully functional remote shell to the attacker. Even private systems are
vulnerable since the connection is outgoing. This activity is typically the result of vulnerability exploitation,
malware infection, or penetration testing.

This rule identifies commands that are potentially related to reverse shell activities using shell applications.

#### Possible investigation steps

- Examine the command line and extract the target domain or IP address information.
  - Check if the domain is newly registered or unexpected.
  - Check the reputation of the domain or IP address.
  - Scope other potentially compromised hosts in your environment by mapping hosts that also communicated with the
  domain or IP address.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Investigate any abnormal behavior by the subject process such as network connections, file modifications, and any
spawned child processes.

### False positive analysis

- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently
malicious must be monitored by the security team.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Take actions to terminate processes and connections used by the attacker.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
15,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious child processes of the Java interpreter process. This may indicate an attempt to execute a
malicious JAR file or an exploitation attempt via a JAVA specific vulnerability.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Suspicious JAVA Child Process,"['https://www.lunasec.io/docs/blog/log4j-zero-day/', 'https://github.com/christophetd/log4shell-vulnerable-app', 'https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf']",47,8acb7614-1d92-4359-bfcf-478b6d9de150,medium,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.parent.name : ""java"" and
  process.name : (""sh"", ""bash"", ""dash"", ""ksh"", ""tcsh"", ""zsh"", ""curl"", ""wget"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious Java Child Process

This rule identifies a suspicious child process of the Java interpreter process. It may indicate an attempt to execute
a malicious JAR file or an exploitation attempt via a Java specific vulnerability.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence and whether they are located in expected locations.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Investigate any abnormal behavior by the subject process such as network connections, file modifications, and any
spawned child processes.
- Examine the command line to determine if the command executed is potentially harmful or malicious.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.

### False positive analysis

- If this activity is expected and noisy in your environment, consider adding exceptions — preferably with a combination
of process and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.007', 'name': 'JavaScript', 'reference': 'https://attack.mitre.org/techniques/T1059/007/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
16,2021/12/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies an outbound network connection by JAVA to LDAP, RMI or DNS standard ports followed by a suspicious JAVA child
processes. This may indicate an attempt to exploit a JAVA/NDI (Java Naming and Directory Interface) injection vulnerability.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential JAVA/JNDI Exploitation Attempt,"['https://www.lunasec.io/docs/blog/log4j-zero-day/', 'https://github.com/christophetd/log4shell-vulnerable-app', 'https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf']",73,c3f5e1d8-910e-43b4-8d44-d748e498ca86,high,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Execution']",,eql,"sequence by host.id with maxspan=1m
 [network where event.action == ""connection_attempted"" and
  process.name : ""java"" and
  /*
     outbound connection attempt to
     LDAP, RMI or DNS standard ports
     by JAVA process
   */
  destination.port in (1389, 389, 1099, 53, 5353)] by process.pid
 [process where event.type == ""start"" and

  /* Suspicious JAVA child process */
  process.parent.name : ""java"" and
   process.name : (""sh"",
                   ""bash"",
                   ""dash"",
                   ""ksh"",
                   ""tcsh"",
                   ""zsh"",
                   ""curl"",
                   ""perl*"",
                   ""python*"",
                   ""ruby*"",
                   ""php*"",
                   ""wget"")] by process.parent.pid
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.007', 'name': 'JavaScript', 'reference': 'https://attack.mitre.org/techniques/T1059/007/'}]}, {'id': 'T1203', 'name': 'Exploitation for Client Execution', 'reference': 'https://attack.mitre.org/techniques/T1203/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
17,2020/07/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"The hosts file on endpoints is used to control manual IP address to hostname resolutions. The hosts file is the first
point of lookup for DNS hostname resolution so if adversaries can modify the endpoint hosts file, they can route traffic
to malicious infrastructure. This rule detects modifications to the hosts file on Microsoft Windows, Linux (Ubuntu or
RHEL) and macOS systems.
",,"['auditbeat-*', 'winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Hosts File Modified,['https://www.elastic.co/guide/en/beats/auditbeat/current/auditbeat-reference-yml.html'],47,9c260313-c811-4ec8-ab89-8f6530e0246c,medium,"['Elastic', 'Host', 'Linux', 'Windows', 'macOS', 'Threat Detection', 'Impact']",event.ingested,eql,"any where

  /* file events for creation; file change events are not captured by some of the included sources for linux and so may
     miss this, which is the purpose of the process + command line args logic below */
  (
   event.category == ""file"" and event.type in (""change"", ""creation"") and
     file.path : (""/private/etc/hosts"", ""/etc/hosts"", ""?:\\Windows\\System32\\drivers\\etc\\hosts"")
  )
  or

  /* process events for change targeting linux only */
  (
   event.category == ""process"" and event.type in (""start"") and
     process.name in (""nano"", ""vim"", ""vi"", ""emacs"", ""echo"", ""sed"") and
     process.args : (""/etc/hosts"")
  )
",now-9m,,"## Triage and analysis

### Investigating Hosts File Modified

Operating systems use the hosts file to map a connection between an IP address and domain names before going to domain
name servers. Attackers can abuse this mechanism to route traffic to malicious infrastructure or disrupt security that
depends on server communications. For example, Russian threat actors modified this file on a domain controller to
redirect Duo MFA calls to localhost instead of the Duo server, which prevented the MFA service from contacting its
server to validate MFA login. This effectively disabled MFA for active domain accounts because the default policy of Duo
for Windows is to ""Fail open"" if the MFA server is unreachable. This can happen in any MFA implementation and is not
exclusive to Duo. Find more details in this [CISA Alert](https://www.cisa.gov/uscert/ncas/alerts/aa22-074a).

This rule identifies modifications in the hosts file across multiple operating systems using process creation events for
Linux and file events in Windows and macOS.

#### Possible investigation steps

- Identify the specifics of the involved assets, such as role, criticality, and associated users.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Examine the changes to the hosts file by comparing it against file backups, volume shadow copies, and other restoration
mechanisms.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity
and the configuration was justified.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Consider isolating the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Review the privileges of the administrator account that performed the action.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

For Windows systems using Auditbeat, this rule requires adding `C:/Windows/System32/drivers/etc` as an additional path in the 'file_integrity' module of auditbeat.yml.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1565', 'reference': 'https://attack.mitre.org/techniques/T1565/', 'name': 'Data Manipulation', 'subtechnique': [{'id': 'T1565.001', 'reference': 'https://attack.mitre.org/techniques/T1565/001/', 'name': 'Stored Data Manipulation'}]}], 'tactic': {'id': 'TA0040', 'reference': 'https://attack.mitre.org/tactics/TA0040/', 'name': 'Impact'}}]",,4d4c0b59-ea83-483f-b8c1-8c360ee53c5c,Comprehensive File Timeline,,,,,,,,,,,,,,,,
18,2020/09/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule identifies Zoom meetings that are created without a passcode. Meetings without a passcode are susceptible to
Zoombombing. Zoombombing is carried out by taking advantage of Zoom sessions that are not protected with a passcode.
Zoombombing refers to the unwanted, disruptive intrusion, generally by Internet trolls and hackers, into a video
conference call. In a typical Zoombombing incident, a teleconferencing session is hijacked by the insertion of material
that is lewd, obscene, racist, or antisemitic in nature, typically resulting of the shutdown of the session.
",,['filebeat-*'],kuery,Elastic License v2,Zoom Meeting with no Passcode,"['https://blog.zoom.us/a-message-to-our-users/', 'https://www.fbi.gov/contact-us/field-offices/boston/news/press-releases/fbi-warns-of-teleconferencing-and-online-classroom-hijacking-during-covid-19-pandemic']",47,58ac2aa5-6718-427c-a845-5f3ac5af00ba,medium,"['Elastic', 'Application', 'Communication', 'Zoom', 'Continuous Monitoring', 'SecOps', 'Configuration Audit']",event.ingested,query,"event.type:creation and event.module:zoom and event.dataset:zoom.webhook and
  event.action:meeting.created and not zoom.meeting.password:*
",,,"## Setup

The Zoom Filebeat module or similarly structured data is required to be compatible with this rule.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
19,2020/12/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may modify the standard authentication module for persistence via patching the normal authorization process
or modifying the login configuration to allow unauthorized access or elevate privileges.
",['Trusted system module updates or allowed Pluggable Authentication Module (PAM) daemon configuration changes.'],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Modification of Standard Authentication Module or Configuration,"['https://github.com/zephrax/linux-pam-backdoor', 'https://github.com/eurialo/pambd', 'http://0x90909090.blogspot.com/2016/06/creating-backdoor-in-pam-in-5-line-of.html', 'https://www.trendmicro.com/en_us/research/19/i/skidmap-linux-malware-uses-rootkit-capabilities-to-hide-cryptocurrency-mining-payload.html']",47,93f47b6f-5728-4004-ba00-625083b3dcb0,medium,"['Elastic', 'Host', 'macOS', 'Linux', 'Threat Detection', 'Credential Access', 'Persistence']",event.ingested,query,"event.category:file and event.type:change and
  (file.name:pam_*.so or file.path:(/etc/pam.d/* or /private/etc/pam.d/*)) and
  process.executable:
    (* and
      not
      (
        /bin/yum or
        ""/usr/sbin/pam-auth-update"" or
        /usr/libexec/packagekitd or
        /usr/bin/dpkg or
        /usr/bin/vim or
        /usr/libexec/xpcproxy or
        /usr/bin/bsdtar or
        /usr/local/bin/brew or
        /usr/bin/rsync or
        /usr/bin/yum or
        /var/lib/docker/*/bin/yum or
        /var/lib/docker/*/bin/dpkg or
        ./merged/var/lib/docker/*/bin/dpkg or
        ""/System/Library/PrivateFrameworks/PackageKit.framework/Versions/A/XPCServices/package_script_service.xpc/Contents/MacOS/package_script_service""
      )
    ) and
  not file.path:
         (
           /tmp/snap.rootfs_*/pam_*.so or
           /tmp/newroot/lib/*/pam_*.so or
           /private/var/folders/*/T/com.apple.fileprovider.ArchiveService/TemporaryItems/*/lib/security/pam_*.so or
           /tmp/newroot/usr/lib64/security/pam_*.so
         )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1556', 'name': 'Modify Authentication Process', 'reference': 'https://attack.mitre.org/techniques/T1556/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
20,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Both ~/.bash_profile and ~/.bashrc are files containing shell commands that are run when Bash is invoked. These files
are executed in a user's context, either interactively or non-interactively, when a user logs in so that their
environment is set correctly. Adversaries may abuse this to establish persistence by executing malicious content
triggered by a user’s shell.
","['Changes to the Shell Profile tend to be noisy, a tuning per your environment will be required.']","['logs-endpoint.events.*', 'auditbeat-*']",kuery,Elastic License v2,Bash Shell Profile Modification,['https://www.anomali.com/blog/pulling-linux-rabbit-rabbot-malware-out-of-a-hat'],47,e6c1a552-7776-44ad-ae0f-8746cc07773c,medium,"['Elastic', 'Host', 'macOS', 'Linux', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:file and event.type:change and
  process.name:(* and not (sudo or
                           vim or
                           zsh or
                           env or
                           nano or
                           bash or
                           Terminal or
                           xpcproxy or
                           login or
                           cat or
                           cp or
                           launchctl or
                           java)) and
  not process.executable:(/Applications/* or /private/var/folders/* or /usr/local/*) and
  file.path:(/private/etc/rc.local or
             /etc/rc.local or
             /home/*/.profile or
             /home/*/.profile1 or
             /home/*/.bash_profile or
             /home/*/.bash_profile1 or
             /home/*/.bashrc or
             /Users/*/.bash_profile or
             /Users/*/.zshenv)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.004', 'name': 'Unix Shell Configuration Modification', 'reference': 'https://attack.mitre.org/techniques/T1546/004/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
21,2020/12/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"The Secure Shell (SSH) authorized_keys file specifies which users are allowed to log into a server using public key
authentication. Adversaries may modify it to maintain persistence on a victim host by adding their own public key(s).
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SSH Authorized Keys File Modification,,47,2215b8bd-1759-4ffa-8ab8-55c8e6b32e7f,medium,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:file and event.type:(change or creation) and
 file.name:(""authorized_keys"" or ""authorized_keys2"") and
 not process.executable:
             (/Library/Developer/CommandLineTools/usr/bin/git or
              /usr/local/Cellar/maven/*/libexec/bin/mvn or
              /Library/Java/JavaVirtualMachines/jdk*.jdk/Contents/Home/bin/java or
              /usr/bin/vim or
              /usr/local/Cellar/coreutils/*/bin/gcat or
              /usr/bin/bsdtar or
              /usr/bin/nautilus or
              /usr/bin/scp or
              /usr/bin/touch or
              /var/lib/docker/* or
              /usr/bin/google_guest_agent)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'name': 'Account Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1098/', 'subtechnique': [{'id': 'T1098.004', 'name': 'SSH Authorized Keys', 'reference': 'https://attack.mitre.org/techniques/T1098/004/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
22,2021/01/26,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A sudoers file specifies the commands users or groups can run and from which terminals. Adversaries can take advantage
of these configurations to execute commands as other users or spawn processes with higher privileges.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Privilege Escalation via Sudoers File Modification,,73,76152ca1-71d0-4003-9e37-0983e12832da,high,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:process and event.type:start and process.args:(echo and *NOPASSWD*ALL*)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.003', 'name': 'Sudo and Sudo Caching', 'reference': 'https://attack.mitre.org/techniques/T1548/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
23,2020/04/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An adversary may add the setuid or setgid bit to a file or directory in order to run a file with the privileges of the
owning user or group. An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in
an application with the setuid or setgid bit to get code running in a different user’s context. Additionally,
adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the
future.
",,"['auditbeat-*', 'logs-endpoint.events.*']",lucene,Elastic License v2,Setuid / Setgid Bit Set via chmod,,21,8a1b0278-0f9a-487d-96bd-d4833298e87a,low,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:process AND event.type:(start OR process_started) AND
 process.name:chmod AND process.args:(""+s"" OR ""u+s"" OR /4[0-9]{3}/ OR g+s OR /2[0-9]{3}/) AND
 NOT process.args:
           (
             /.*\/Applications\/VirtualBox.app\/.+/ OR
             /\/usr\/local\/lib\/python.+/ OR
             /\/var\/folders\/.+\/FP.*nstallHelper/ OR
             /\/Library\/Filesystems\/.+/ OR
             /\/usr\/lib\/virtualbox\/.+/ OR
             /\/Library\/Application.*/ OR
             ""/run/postgresql"" OR
             ""/var/crash"" OR
             ""/var/run/postgresql"" OR
             /\/usr\/bin\/.+/ OR /\/usr\/local\/share\/.+/ OR
             /\/Applications\/.+/ OR /\/usr\/libexec\/.+/ OR
             ""/var/metrics"" OR /\/var\/lib\/dpkg\/.+/ OR
             /\/run\/log\/journal\/.*/ OR
             \/Users\/*\/.minikube\/bin\/docker-machine-driver-hyperkit
           ) AND
 NOT process.parent.executable:
           (
             /\/var\/lib\/docker\/.+/ OR
             ""/System/Library/PrivateFrameworks/PackageKit.framework/Versions/A/XPCServices/package_script_service.xpc/Contents/MacOS/package_script_service"" OR
             ""/var/lib/dpkg/info/whoopsie.postinst""
           )
",now-9m,33.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.001', 'name': 'Setuid and Setgid', 'reference': 'https://attack.mitre.org/techniques/T1548/001/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
24,2020/04/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A sudoers file specifies the commands that users or groups can run and from which terminals. Adversaries can take
advantage of these configurations to execute commands as other users or spawn processes with higher privileges.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Sudoers File Modification,,47,931e25a5-0f5e-4ae0-ba0d-9e94eff7e3a4,medium,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:file and event.type:change and file.path:(/etc/sudoers* or /private/etc/sudoers*)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.003', 'name': 'Sudo and Sudo Caching', 'reference': 'https://attack.mitre.org/techniques/T1548/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
25,2021/02/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the attempted use of a heap-based buffer overflow vulnerability for the Sudo binary in Unix-like systems
(CVE-2021-3156). Successful exploitation allows an unprivileged user to escalate to the root user.
","['    This rule could generate false positives if the process arguments leveraged by the exploit are shared by custom\n    scripts using the Sudo or Sudoedit binaries. Only Sudo versions 1.8.2 through 1.8.31p2 and 1.9.0 through 1.9.5p1 are\n    affected; if those versions are not present on the endpoint, this could be a false positive.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Sudo Heap-Based Buffer Overflow Attempt,"['https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-3156', 'https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit', 'https://www.bleepingcomputer.com/news/security/latest-macos-big-sur-also-has-sudo-root-privilege-escalation-flaw', 'https://www.sudo.ws/alerts/unescape_overflow.html']",73,f37f3054-d40b-49ac-aa9b-a786c74c58b8,high,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Privilege Escalation']",,threshold,"event.category:process and event.type:start and
  process.name:(sudo or sudoedit) and
  process.args:(*\\ and (""-i"" or ""-s""))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]","{'field': ['host.hostname'], 'value': 100}",,,,,,,,,,,,,,,,,,
26,2021/11/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule is triggered when indicators from the Threat Intel Filebeat module (v8.x) has a match against local file or network observations.
",,"['auditbeat-*', 'endgame-*', 'filebeat-*', 'logs-*', 'packetbeat-*', 'winlogbeat-*']",kuery,Elastic License v2,Threat Intel Filebeat Module (v8.x) Indicator Match,['https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html'],99,699e9fdb-b77c-4c01-995c-1c15019b9c43,critical,"['Elastic', 'Windows', 'Elastic Endgame', 'Network', 'Continuous Monitoring', 'SecOps', 'Monitoring', 'has_guide']",,threat_match,"file.hash.*:* or file.pe.imphash:* or source.ip:* or destination.ip:* or url.full:* or registry.path:*
",now-65m,,"## Triage and Analysis

### Investigating Threat Intel Indicator Matches

Threat Intel indicator match rules allow matching from a local observation such as an endpoint event that records a file
hash with an entry of a file hash stored within the Threat Intel integrations. Matches can also occur on
an IP address, registry path, URL, or imphash.

The matches will be based on the incoming last 30 days feed data so it's important to validate the data and review the results by
investigating the associated activity to determine if it requires further investigation.

If an indicator matches a local observation, the following enriched fields will be generated to identify the indicator, field, and type matched.

- `threat.indicator.matched.atomic` - this identifies the atomic indicator that matched the local observation
- `threat.indicator.matched.field` - this identifies the indicator field that matched the local observation
- `threat.indicator.matched.type` - this identifies the indicator type that matched the local observation

#### Possible investigation steps:
- Investigation should be validated and reviewed based on the data (file hash, registry path, URL, imphash) that was matched
and by viewing the source of that activity.
- Consider the history of the indicator that was matched. Has it happened before? Is it happening on multiple machines?
These kinds of questions can help understand if the activity is related to legitimate behavior.
- Consider the user and their role within the company: is this something related to their job or work function?

### False Positive Analysis
- For any matches found, it's important to consider the initial release date of that indicator. Threat intelligence can
be a great tool for augmenting existing security processes, while at the same time it should be understood that threat
intelligence can represent a specific set of activity observed at a point in time. For example, an IP address
may have hosted malware observed in a Dridex campaign months ago, but it's possible that IP has been remediated and
no longer represents any threat.
- Adversaries often use legitimate tools as network administrators such as `PsExec` or `AdFind`; these tools often find their
way into indicator lists creating the potential for false positives.
- It's possible after large and publicly written campaigns, curious employees might end up going directly to attacker infrastructure and triggering these rules.

### Response and Remediation
- If suspicious or malicious behavior is observed, take immediate action to isolate activity to prevent further
post-compromise behavior.
- One example of a response if a machine matched a command and control IP address would be to add an entry to a network
device such as a firewall or proxy appliance to prevent any outbound activity from leaving that machine.
- Another example of a response with a malicious file hash match would involve validating if the file was properly quarantined,
reviewing current running processes for any abnormal activity, and investigating for any other follow-up actions such as persistence or lateral movement.
",,,495ad7a7-316e-4544-8a0f-9c098daee76e,Generic Threat Match Timeline,1h,['filebeat-8*'],threat.indicator,kuery,"@timestamp >= ""now-30d/d"" and event.module:threatintel and
  (threat.indicator.file.hash.*:* or threat.indicator.file.pe.imphash:* or threat.indicator.ip:* or
     threat.indicator.registry.path:* or threat.indicator.url.full:*)
","[{'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.module', 'params': {'query': 'threatintel'}}, 'query': {'match_phrase': {'event.module': 'threatintel'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.category', 'params': {'query': 'threat'}}, 'query': {'match_phrase': {'event.category': 'threat'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.kind', 'params': {'query': 'enrichment'}}, 'query': {'match_phrase': {'event.kind': 'enrichment'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.type', 'params': {'query': 'indicator'}}, 'query': {'match_phrase': {'event.type': 'indicator'}}}]","[{'entries': [{'field': 'file.hash.md5', 'type': 'mapping', 'value': 'threat.indicator.file.hash.md5'}]}, {'entries': [{'field': 'file.hash.sha1', 'type': 'mapping', 'value': 'threat.indicator.file.hash.sha1'}]}, {'entries': [{'field': 'file.hash.sha256', 'type': 'mapping', 'value': 'threat.indicator.file.hash.sha256'}]}, {'entries': [{'field': 'file.pe.imphash', 'type': 'mapping', 'value': 'threat.indicator.file.pe.imphash'}]}, {'entries': [{'field': 'source.ip', 'type': 'mapping', 'value': 'threat.indicator.ip'}]}, {'entries': [{'field': 'destination.ip', 'type': 'mapping', 'value': 'threat.indicator.ip'}]}, {'entries': [{'field': 'url.full', 'type': 'mapping', 'value': 'threat.indicator.url.full'}]}, {'entries': [{'field': 'registry.path', 'type': 'mapping', 'value': 'threat.indicator.registry.path'}]}]",,,,,,,,,
27,2021/04/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule is triggered when indicators from the Threat Intel integrations have a match against local file or network observations.
",,"['auditbeat-*', 'endgame-*', 'filebeat-*', 'logs-*', 'packetbeat-*', 'winlogbeat-*']",kuery,Elastic License v2,Threat Intel Indicator Match,['https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html'],99,0c9a14d9-d65d-486f-9b5b-91e4e6b22bd0,critical,"['Elastic', 'Windows', 'Elastic Endgame', 'Network', 'Continuous Monitoring', 'SecOps', 'Monitoring', 'has_guide']",,threat_match,"file.hash.*:* or file.pe.imphash:* or source.ip:* or destination.ip:* or url.full:* or registry.path:*
",now-65m,,"## Triage and Analysis

### Investigating Threat Intel Indicator Matches

Threat Intel indicator match rules allow matching from a local observation such as an endpoint event that records a file
hash with an entry of a file hash stored within the Threat Intel integrations. Matches can also occur on
an IP address, registry path, URL, or imphash.

The matches will be based on the incoming last 30 days feed data so it's important to validate the data and review the results by
investigating the associated activity to determine if it requires further investigation.

If an indicator matches a local observation, the following enriched fields will be generated to identify the indicator, field, and type matched.

- `threat.indicator.matched.atomic` - this identifies the atomic indicator that matched the local observation
- `threat.indicator.matched.field` - this identifies the indicator field that matched the local observation
- `threat.indicator.matched.type` - this identifies the indicator type that matched the local observation

#### Possible investigation steps:
- Investigation should be validated and reviewed based on the data (file hash, registry path, URL, imphash) that was matched
and by viewing the source of that activity.
- Consider the history of the indicator that was matched. Has it happened before? Is it happening on multiple machines?
These kinds of questions can help understand if the activity is related to legitimate behavior.
- Consider the user and their role within the company: is this something related to their job or work function?

### False Positive Analysis
- For any matches found, it's important to consider the initial release date of that indicator. Threat intelligence can
be a great tool for augmenting existing security processes, while at the same time it should be understood that threat
intelligence can represent a specific set of activity observed at a point in time. For example, an IP address
may have hosted malware observed in a Dridex campaign months ago, but it's possible that IP has been remediated and
no longer represents any threat.
- Adversaries often use legitimate tools as network administrators such as `PsExec` or `AdFind`; these tools often find their
way into indicator lists creating the potential for false positives.
- It's possible after large and publicly written campaigns, curious employees might end up going directly to attacker infrastructure and triggering these rules.

### Response and Remediation
- If suspicious or malicious behavior is observed, take immediate action to isolate activity to prevent further
post-compromise behavior.
- One example of a response if a machine matched a command and control IP address would be to add an entry to a network
device such as a firewall or proxy appliance to prevent any outbound activity from leaving that machine.
- Another example of a response with a malicious file hash match would involve validating if the file was properly quarantined,
reviewing current running processes for any abnormal activity, and investigating for any other follow-up actions such as persistence or lateral movement.
",,,495ad7a7-316e-4544-8a0f-9c098daee76e,Generic Threat Match Timeline,1h,['logs-ti_*'],threat.indicator,kuery,"@timestamp >= ""now-30d/d"" and event.dataset:ti_* and
  (threat.indicator.file.hash.*:* or threat.indicator.file.pe.imphash:* or threat.indicator.ip:* or
     threat.indicator.registry.path:* or threat.indicator.url.full:*)
","[{'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.dataset', 'params': {'query': 'ti_*'}}, 'query': {'match_phrase': {'event.dataset': 'ti_*'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.category', 'params': {'query': 'threat'}}, 'query': {'match_phrase': {'event.category': 'threat'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.kind', 'params': {'query': 'enrichment'}}, 'query': {'match_phrase': {'event.kind': 'enrichment'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.type', 'params': {'query': 'indicator'}}, 'query': {'match_phrase': {'event.type': 'indicator'}}}]","[{'entries': [{'field': 'file.hash.md5', 'type': 'mapping', 'value': 'threat.indicator.file.hash.md5'}]}, {'entries': [{'field': 'file.hash.sha1', 'type': 'mapping', 'value': 'threat.indicator.file.hash.sha1'}]}, {'entries': [{'field': 'file.hash.sha256', 'type': 'mapping', 'value': 'threat.indicator.file.hash.sha256'}]}, {'entries': [{'field': 'file.pe.imphash', 'type': 'mapping', 'value': 'threat.indicator.file.pe.imphash'}]}, {'entries': [{'field': 'source.ip', 'type': 'mapping', 'value': 'threat.indicator.ip'}]}, {'entries': [{'field': 'destination.ip', 'type': 'mapping', 'value': 'threat.indicator.ip'}]}, {'entries': [{'field': 'url.full', 'type': 'mapping', 'value': 'threat.indicator.url.full'}]}, {'entries': [{'field': 'registry.path', 'type': 'mapping', 'value': 'threat.indicator.registry.path'}]}]",,,,,,,,,
28,2022/05/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies an outbound network connection attempt followed by a session id change as the root user by the same process
entity. This particular instantiation of a network connection is abnormal and should be investigated as it may indicate
a potential reverse shell activity via a privileged process.
","[""    False-Positives (FP) can appear if another remote terminal service is being used to connect to it's listener but\n    typically SSH is used in these scenarios.\n    ""]",['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious Network Connection Attempt by Root,"['https://www.sandflysecurity.com/blog/linux-file-masquerading-and-malicious-pids-sandfly-1-2-6-update/', 'https://twitter.com/GossiTheDog/status/1522964028284411907', 'https://exatrack.com/public/Tricephalic_Hellkeeper.pdf']",47,eb6a3790-d52d-11ec-8ce9-f661ea17fbce,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Command and Control']",,eql,"sequence by process.entity_id with maxspan=1m
[network where event.type == ""start"" and event.action == ""connection_attempted"" and user.id == ""0"" and
    not process.executable : (""/bin/ssh"", ""/sbin/ssh"", ""/usr/lib/systemd/systemd"", ""/usr/sbin/sshd"")]
[process where event.action == ""session_id_change"" and user.id == ""0"" and
    not process.executable : (""/bin/ssh"", ""/sbin/ssh"", ""/usr/lib/systemd/systemd"", ""/usr/sbin/sshd"")]
",now-9m,,"## Triage and analysis
### Investigating Connection Attempt by Non-SSH Root Session
Detection alerts from this rule indicate a strange or abnormal outbound connection attempt by a privileged process.  Here are some possible avenues of investigation:
- Examine unusual and active sessions using commands such as 'last -a', 'netstat -a', and 'w -a'.
- Analyze processes and command line arguments to detect anomalous process execution that may be acting as a listener.
- Analyze anomalies in the use of files that do not normally initiate connections.
- Examine processes utilizing the network that do not normally have network communication.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1095', 'name': 'Non-Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1095/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.003', 'name': 'Sudo and Sudo Caching', 'reference': 'https://attack.mitre.org/techniques/T1548/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
29,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Iodine is a tool for tunneling Internet protocol version 4 (IPV4) traffic over the DNS protocol to circumvent firewalls,
network security groups, and network access lists while evading detection.
",['    Normal use of Iodine is uncommon apart from security testing and research. Use by non-security engineers is very\n    uncommon.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential DNS Tunneling via Iodine,['https://code.kryo.se/iodine/'],73,041d4d41-9589-43e2-ba13-5680af75ebc2,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:(iodine or iodined)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1572', 'name': 'Protocol Tunneling', 'reference': 'https://attack.mitre.org/techniques/T1572/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
30,2021/04/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of the EarthWorm tunneler. Adversaries may tunnel network communications to and from a victim
system within a separate protocol to avoid detection and network filtering, or to enable access to otherwise unreachable
systems.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential Protocol Tunneling via EarthWorm,"['http://rootkiter.com/EarthWorm/', 'https://decoded.avast.io/luigicamastra/apt-group-targeting-governmental-agencies-in-east-asia/']",47,9f1c4ca3-44b5-481d-ba42-32dc215a2769,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Command and Control']",event.ingested,eql,"process where event.type == ""start"" and
 process.args : ""-s"" and process.args : ""-d"" and process.args : ""rssocks""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1572', 'name': 'Protocol Tunneling', 'reference': 'https://attack.mitre.org/techniques/T1572/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
31,2022/09/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/23,['Elastic'],"Identifies multiple SSH login failures followed by a successful one from the same source address. Adversaries can attempt
to login into multiple users with a common or known password to gain access to accounts.
",,"['auditbeat-*', 'logs-system.auth-*']",eql,Elastic License v2,Potential SSH Password Guessing,,47,8cb84371-d053-4f4f-bce0-c74990e28f28,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, source.ip, user.name with maxspan=3s
  [authentication where event.action  in (""ssh_login"", ""user_login"") and
   event.outcome == ""failure"" and source.ip != null and source.ip != ""0.0.0.0"" and source.ip != ""::"" ] with runs=2

  [authentication where event.action  in (""ssh_login"", ""user_login"") and
   event.outcome == ""success"" and source.ip != null and source.ip != ""0.0.0.0"" and source.ip != ""::"" ]
",now-9m,,"## Triage and analysis

### Investigating Potential SSH Password Guessing Attack

The rule identifies consecutive SSH login failures followed by a successful login from the same source IP address to the
same target host indicating a successful attempt of brute force password guessing.

#### Possible investigation steps

- Investigate the login failure user name(s).
- Investigate the source IP address of the failed ssh login attempt(s).
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the source and the target computer and their roles in the IT environment.

### False positive analysis

- Authentication misconfiguration or obsolete credentials.
- Service account password expired.
- Infrastructure or availability issue.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Ensure active session(s) on the host(s) are terminated as the attacker could have gained initial
access to the system(s).
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified.
- Reset passwords for these accounts and other potentially compromised credentials.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/', 'subtechnique': [{'id': 'T1110.001', 'name': 'Password Guessing', 'reference': 'https://attack.mitre.org/techniques/T1110/001/'}, {'id': 'T1110.003', 'name': 'Password Spraying', 'reference': 'https://attack.mitre.org/techniques/T1110/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
32,2020/12/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the use of a compression utility to collect known files containing sensitive information, such as credentials
and system configurations.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Sensitive Files Compression,['https://www.trendmicro.com/en_ca/research/20/l/teamtnt-now-deploying-ddos-capable-irc-bot-tntbotinger.html'],47,6b84d470-9036-4cc0-a27c-6d90bbfe81ab,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Collection', 'Credential Access']",event.ingested,query,"event.category:process and event.type:start and
  process.name:(zip or tar or gzip or hdiutil or 7z) and
  process.args:
    (
      /root/.ssh/id_rsa or
      /root/.ssh/id_rsa.pub or
      /root/.ssh/id_ed25519 or
      /root/.ssh/id_ed25519.pub or
      /root/.ssh/authorized_keys or
      /root/.ssh/authorized_keys2 or
      /root/.ssh/known_hosts or
      /root/.bash_history or
      /etc/hosts or
      /home/*/.ssh/id_rsa or
      /home/*/.ssh/id_rsa.pub or
      /home/*/.ssh/id_ed25519 or
      /home/*/.ssh/id_ed25519.pub or
      /home/*/.ssh/authorized_keys or
      /home/*/.ssh/authorized_keys2 or
      /home/*/.ssh/known_hosts or
      /home/*/.bash_history or
      /root/.aws/credentials or
      /root/.aws/config or
      /home/*/.aws/credentials or
      /home/*/.aws/config or
      /root/.docker/config.json or
      /home/*/.docker/config.json or
      /etc/group or
      /etc/passwd or
      /etc/shadow or
      /etc/gshadow
    )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1552', 'name': 'Unsecured Credentials', 'reference': 'https://attack.mitre.org/techniques/T1552/', 'subtechnique': [{'id': 'T1552.001', 'name': 'Credentials In Files', 'reference': 'https://attack.mitre.org/techniques/T1552/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1560', 'name': 'Archive Collected Data', 'reference': 'https://attack.mitre.org/techniques/T1560/', 'subtechnique': [{'id': 'T1560.001', 'name': 'Archive via Utility', 'reference': 'https://attack.mitre.org/techniques/T1560/001/'}]}], 'tactic': {'id': 'TA0009', 'name': 'Collection', 'reference': 'https://attack.mitre.org/tactics/TA0009/'}}]",,,,,,,,,,,,,,,,,,,
33,2022/09/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/23,['Elastic'],"Identifies multiple consecutive login failures targeting an user account from the same source address and within a
short time interval. Adversaries will often brute force login attempts across multiple users with a common or known
password, in an attempt to gain access to accounts.
",,"['auditbeat-*', 'logs-system.auth-*']",eql,Elastic License v2,Potential Linux SSH Brute Force Detected,,47,1c27fa22-7727-4dd3-81c0-de6da5555feb,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, source.ip, user.name with maxspan=10s
  [authentication where event.action  in (""ssh_login"", ""user_login"") and
   event.outcome == ""failure"" and source.ip != null and source.ip != ""0.0.0.0"" and source.ip != ""::"" ] with runs=10
",now-9m,,"## Triage and analysis

### Investigating Potential SSH Brute Force Attack

The rule identifies consecutive SSH login failures targeting a user account from the same source IP address to the
same target host indicating brute force login attempts.

#### Possible investigation steps

- Investigate the login failure user name(s).
- Investigate the source IP address of the failed ssh login attempt(s).
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the source and the target computer and their roles in the IT environment.

### False positive analysis

- Authentication misconfiguration or obsolete credentials.
- Service account password expired.
- Infrastructure or availability issue.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified.
- Reset passwords for these accounts and other potentially compromised credentials.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/', 'subtechnique': [{'id': 'T1110.001', 'name': 'Password Guessing', 'reference': 'https://attack.mitre.org/techniques/T1110/001/'}, {'id': 'T1110.003', 'name': 'Password Spraying', 'reference': 'https://attack.mitre.org/techniques/T1110/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
34,2022/09/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/23,['Elastic'],"Identifies multiple consecutive login failures targeting a root user account from the same source address and within a
short time interval. Adversaries will often brute force login attempts on privileged accounts with a common or known
password, in an attempt to gain privileged access to systems.
",,"['auditbeat-*', 'logs-system.auth-*']",eql,Elastic License v2,Potential SSH Brute Force Detected on Privileged Account,,73,a5f0d057-d540-44f5-924d-c6a2ae92f045,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, source.ip with maxspan=10s
  [authentication where event.action  in (""ssh_login"", ""user_login"") and
   event.outcome == ""failure"" and source.ip != null and source.ip != ""0.0.0.0"" and
   source.ip != ""::"" and  user.name in (""*root*"" , ""*admin*"")] with runs=3
",now-9m,,"## Triage and analysis

### Investigating Potential SSH Brute Force Attack on Privileged Account

The rule identifies consecutive SSH login failures targeting a privileged (root) account from the same source IP
address to the same target host indicating brute force login attempts.

#### Possible investigation steps

- Investigate the login failure on privileged account(s).
- Investigate the source IP address of the failed ssh login attempt(s).
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the source and the target computer and their roles in the IT environment.

### False positive analysis
- Authentication misconfiguration or obsolete credentials.
- Service account password expired.
- Infrastructure or availability issue.

### Response and remediation
- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified.
- Reset passwords for these accounts and other potentially compromised credentials.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/', 'subtechnique': [{'id': 'T1110.001', 'name': 'Password Guessing', 'reference': 'https://attack.mitre.org/techniques/T1110/001/'}, {'id': 'T1110.003', 'name': 'Password Spraying', 'reference': 'https://attack.mitre.org/techniques/T1110/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
35,2020/12/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a Secure Shell (SSH) client or server process creating or writing to a known SSH backdoor log file.
Adversaries may modify SSH related binaries for persistence or credential access via patching sensitive functions to
enable unauthorized access or to log SSH credentials for exfiltration.
",['Updates to approved and trusted SSH executables can trigger this rule.'],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential OpenSSH Backdoor Logging Activity,"['https://github.com/eset/malware-ioc/tree/master/sshdoor', 'https://www.welivesecurity.com/wp-content/uploads/2021/01/ESET_Kobalos.pdf']",73,f28e2be4-6eca-4349-bdd9-381573730c22,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence', 'Credential Access']",event.ingested,eql,"file where event.type == ""change"" and process.executable : (""/usr/sbin/sshd"", ""/usr/bin/ssh"") and
  (
    (file.name : ("".*"", ""~*"", ""*~"") and not file.name : ("".cache"", "".viminfo"", "".bash_history"")) or
    file.extension : (""in"", ""out"", ""ini"", ""h"", ""gz"", ""so"", ""sock"", ""sync"", ""0"", ""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"") or
    file.path :
    (
      ""/private/etc/*--"",
      ""/usr/share/*"",
      ""/usr/include/*"",
      ""/usr/local/include/*"",
      ""/private/tmp/*"",
      ""/private/var/tmp/*"",
      ""/usr/tmp/*"",
      ""/usr/share/man/*"",
      ""/usr/local/share/*"",
      ""/usr/lib/*.so.*"",
      ""/private/etc/ssh/.sshd_auth"",
      ""/usr/bin/ssd"",
      ""/private/var/opt/power"",
      ""/private/etc/ssh/ssh_known_hosts"",
      ""/private/var/html/lol"",
      ""/private/var/log/utmp"",
      ""/private/var/lib"",
      ""/var/run/sshd/sshd.pid"",
      ""/var/run/nscd/ns.pid"",
      ""/var/run/udev/ud.pid"",
      ""/var/run/udevd.pid""
    )
  )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1556', 'name': 'Modify Authentication Process', 'reference': 'https://attack.mitre.org/techniques/T1556/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1554', 'name': 'Compromise Client Software Binary', 'reference': 'https://attack.mitre.org/techniques/T1554/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
36,2020/04/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may attempt to disable the syslog service in an attempt to an attempt to disrupt event logging and evade
detection by security controls.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Attempt to Disable Syslog Service,,47,2f8a1226-5720-437d-9c20-e0029deb6194,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  ((process.name:service and process.args:stop) or
     (process.name:chkconfig and process.args:off) or
     (process.name:systemctl and process.args:(disable or stop or kill)))
  and process.args:(syslog or rsyslog or ""syslog-ng"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
37,2020/04/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Adversaries may encode/decode data in an attempt to evade detection by host- or network-based security controls.,['    Automated tools such as Jenkins may encode or decode files as part of their normal behavior. These events can be\n    filtered by the process executable or username values.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Base16 or Base32 Encoding/Decoding Activity,,21,debff20a-46bc-4a4d-bae5-5cdd14222795,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:(base16 or base32 or base32plain or base32hex)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1140', 'name': 'Deobfuscate/Decode Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1140/'}, {'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
38,2022/07/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects a file being made immutable using the chattr binary. Making a file immutable means it cannot be deleted or renamed, no link can be created to this file, most of the file's metadata can not be modified, and the file can not be opened in write mode. Threat actors will commonly utilize this to prevent tampering or modification of their malicious files or any system files they have modified for purposes of persistence (e.g .ssh, /etc/passwd, etc.).
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,File made Immutable by Chattr,,47,968ccab9-da51-4a87-9ce2-d3c9782fd759,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and user.name == ""root"" and process.executable : ""/usr/bin/chattr"" and process.args : (""-*i*"", ""+*i*"") and not process.parent.executable: ""/lib/systemd/systemd""
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1222', 'name': 'File and Directory Permissions Modification', 'reference': 'https://attack.mitre.org/techniques/T1222/', 'subtechnique': [{'id': 'T1222.002', 'name': 'Linux and Mac File and Directory Permissions Modification', 'reference': 'https://attack.mitre.org/techniques/T1222/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
39,2020/04/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies potential attempts to disable Security-Enhanced Linux (SELinux), which is a Linux kernel security feature to
support access control policies. Adversaries may disable security tools to avoid possible detection of their tools and
activities.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Disabling of SELinux,,47,eb9eb8ba-a983-41d9-9c93-a1c05112ca5e,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:setenforce and process.args:0
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
40,2020/04/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Malware or other files dropped or created on a system by an adversary may leave traces behind as to what was done within
a network and how. Adversaries may remove these files over the course of an intrusion to keep their footprint low or
remove them at the end as part of the post-intrusion cleanup process.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,File Deletion via Shred,,21,a1329140-8de3-4445-9f87-908fb6d824f4,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:shred and
  process.args:(""-u"" or ""--remove"" or ""-z"" or ""--zero"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.004', 'name': 'File Deletion', 'reference': 'https://attack.mitre.org/techniques/T1070/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
41,2020/04/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies file permission modifications in common writable directories by a non-root user. Adversaries often drop files
or payloads into a writable directory and change permissions prior to execution.
",['    Certain programs or applications may modify files or change ownership in writable directories. These can be exempted\n    by username.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,File Permission Modification in Writable Directory,,21,9f9a2a82-93a8-4b1a-8778-1780895626d4,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:(chmod or chown or chattr or chgrp) and
  process.working_directory:(/tmp or /var/tmp or /dev/shm) and
  not user.name:root
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1222', 'name': 'File and Directory Permissions Modification', 'reference': 'https://attack.mitre.org/techniques/T1222/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
42,2020/04/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Users can mark specific files as hidden simply by putting a ""."" as the first character in the file or folder name.
Adversaries can use this to their advantage to hide files and folders on the system for persistence and defense evasion.
This rule looks for hidden files or folders in common writable directories.
","['    Certain tools may create hidden temporary files or directories upon installation or as part of their normal\n    behavior. These events can be filtered by the process arguments, username, or process name values.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Creation of Hidden Files and Directories via CommandLine,,47,b9666521-4742-49ce-9ddc-b8e84c35acae,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.working_directory in (""/tmp"", ""/var/tmp"", ""/dev/shm"") and
  process.args regex~ """"""\.[a-z0-9_\-][a-z0-9_\-\.]{1,254}"""""" and
  not process.name in (""ls"", ""find"", ""grep"")
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.001', 'name': 'Hidden Files and Directories', 'reference': 'https://attack.mitre.org/techniques/T1564/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
43,2022/07/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of a hidden shared object (.so) file. Users can mark specific files as hidden simply by putting a ""."" as the first character in the file or folder name.
Adversaries can use this to their advantage to hide files and folders on the system for persistence and defense evasion.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Creation of Hidden Shared Object File,,47,766d3f91-3f12-448c-b65f-20123e9e9e8c,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"file where event.action : ""creation"" and file.extension == ""so"" and file.name : "".*.so""
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.001', 'name': 'Hidden Files and Directories', 'reference': 'https://attack.mitre.org/techniques/T1564/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
44,2020/04/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Kernel modules are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the
functionality of the kernel without the need to reboot the system. This rule identifies attempts to remove a kernel
module.
","['    There is usually no reason to remove modules, but some buggy modules require it. These can be exempted by username.\n    Note that some Linux distributions are not built to support the removal of modules at all.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Kernel Module Removal,['http://man7.org/linux/man-pages/man8/modprobe.8.html'],73,cd66a5af-e34b-4bb0-8931-57d0a043f2ef,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.args:((rmmod and sudo) or (modprobe and sudo and (""--remove"" or ""-r"")))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.006', 'name': 'Kernel Modules and Extensions', 'reference': 'https://attack.mitre.org/techniques/T1547/006/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
45,2020/11/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the deletion of sensitive Linux system logs. This may indicate an attempt to evade detection or destroy
forensic evidence on a system.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,System Log File Deletion,['https://www.fireeye.com/blog/threat-research/2020/11/live-off-the-land-an-overview-of-unc1945.html'],47,aa895aea-b69c-4411-b110-8d7599634b30,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"file where event.type == ""deletion"" and
  file.path :
    (
    ""/var/run/utmp"",
    ""/var/log/wtmp"",
    ""/var/log/btmp"",
    ""/var/log/lastlog"",
    ""/var/log/faillog"",
    ""/var/log/syslog"",
    ""/var/log/messages"",
    ""/var/log/secure"",
    ""/var/log/auth.log""
    ) and
    not process.name : (""gzip"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
46,2020/04/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They
extend the functionality of the kernel without the need to reboot the system. This identifies attempts to enumerate
information about a kernel module.
",['    Security tools and device drivers may run these programs in order to enumerate kernel modules. Use of these programs\n    by ordinary users is uncommon. These can be exempted by process name or username.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Enumeration of Kernel Modules,,47,2d8043ed-5bda-4caf-801c-c1feb7410504,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.args:(kmod and list and sudo or sudo and (depmod or lsmod or modinfo))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1082', 'name': 'System Information Discovery', 'reference': 'https://attack.mitre.org/techniques/T1082/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
47,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Hping ran on a Linux host. Hping is a FOSS command-line packet analyzer and has the ability to construct network packets
for a wide variety of network security testing applications, including scanning and firewall auditing.
",['    Normal use of hping is uncommon apart from security testing and research. Use by non-security engineers is very\n    uncommon.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Hping Process Activity,['https://en.wikipedia.org/wiki/Hping'],73,90169566-2260-4824-b8e4-8615c3b4ed52,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:(hping or hping2 or hping3)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1082', 'name': 'System Information Discovery', 'reference': 'https://attack.mitre.org/techniques/T1082/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
48,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Nping ran on a Linux host. Nping is part of the Nmap tool suite and has the ability to construct raw packets for a wide
variety of security testing applications, including denial of service testing.
","['    Some normal use of this command may originate from security engineers and network or server administrators, but this\n    is usually not routine or unannounced. Use of `Nping` by non-engineers or ordinary users is uncommon.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Nping Process Activity,['https://en.wikipedia.org/wiki/Nmap'],47,0d69150b-96f8-467c-a86d-a67a3378ce77,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:nping
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1046', 'name': 'Network Service Discovery', 'reference': 'https://attack.mitre.org/techniques/T1046/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
49,2020/04/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An adversary may attempt to get detailed information about the operating system and hardware. This rule identifies
common locations used to discover virtual machine hardware by a non-root user. This technique has been used by the Pupy
RAT and other malware.
",['    Certain tools or automated software may enumerate hardware information. These tools can be exempted via user name or\n    process arguments to eliminate potential noise.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Virtual Machine Fingerprinting,,73,5b03c9fb-9945-4d2f-9568-fd690fee3fba,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.args:(""/sys/class/dmi/id/bios_version"" or
                ""/sys/class/dmi/id/product_name"" or
                ""/sys/class/dmi/id/chassis_vendor"" or
                ""/proc/scsi/scsi"" or
                ""/proc/ide/hd0/model"") and
  not user.name:root
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1082', 'name': 'System Information Discovery', 'reference': 'https://attack.mitre.org/techniques/T1082/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
50,2022/05/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the creation of a Process ID (PID), lock or reboot file created in temporary file storage paradigm (tmpfs)
directory /var/run. On Linux, the PID files typically hold the process ID to track previous copies running and manage
other tasks. Certain Linux malware use the /var/run directory for holding data, executables and other tasks, disguising
itself or these files as legitimate PID files.
","['    False-Positives (FP) can appear if the PID file is legitimate and holding a process ID as intended. To\n    differentiate, if the PID file is an executable or larger than 10 bytes, it should be ruled suspicious.\n    ']",['logs-endpoint.events.*'],eql,Elastic License v2,Abnormal Process ID or Lock File Created,"['https://www.sandflysecurity.com/blog/linux-file-masquerading-and-malicious-pids-sandfly-1-2-6-update/', 'https://twitter.com/GossiTheDog/status/1522964028284411907', 'https://exatrack.com/public/Tricephalic_Hellkeeper.pdf']",47,cac91072-d165-11ec-a764-f661ea17fbce,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'BPFDoor']",event.ingested,eql,"/* add file size filters when data is available */
file where event.type == ""creation"" and user.id == ""0"" and
    file.path regex~ """"""/var/run/\w+\.(pid|lock|reboot)"""""" and file.extension in (""pid"",""lock"",""reboot"") and

    /* handle common legitimate files */

    not file.name in (
    ""auditd.pid"",
    ""python*"",
    ""apport.pid"",
    ""apport.lock"",
    ""kworker*"",
    ""gdm3.pid"",
    ""sshd.pid"",
    ""acpid.pid"",
    ""unattended-upgrades.lock"",
    ""unattended-upgrades.pid"",
    ""cmd.pid"",
    ""cron*.pid"",
    ""yum.pid"",
    ""netconfig.pid"",
    ""docker.pid"",
    ""atd.pid"",
    ""lfd.pid"",
    ""atop.pid"",
    ""nginx.pid"",
    ""dhclient.pid"",
    ""smtpd.pid"",
    ""stunnel.pid""
    )
",now-9m,,"## Triage and analysis

### Investigating Abnormal Process ID or Lock File Created

Linux applications may need to save their process identification number (PID) for various purposes: from signaling that
a program is running to serving as a signal that a previous instance of an application didn't exit successfully. PID
files contain its creator process PID in an integer value.

Linux lock files are used to coordinate operations in files so that conflicts and race conditions are prevented.

This rule identifies the creation of PID, lock, or reboot files in the /var/run/ directory. Attackers can masquerade
malware, payloads, staged data for exfiltration, and more as legitimate PID files.

#### Possible investigation steps

- Retrieve the file and determine if it is malicious:
    - Check the contents of the PID files. They should only contain integer strings.
    - Check the file type of the lock and PID files to determine if they are executables. This is only observed in
    malicious files.
    - Check the size of the subject file. Legitimate PID files should be under 10 bytes.
    - Check if the lock or PID file has high entropy. This typically indicates an encrypted payload.
        - Analysts can use tools like `ent` to measure entropy.
    - Examine the reputation of the SHA-256 hash in the PID file. Use a database like VirusTotal to identify additional
    pivots and artifacts for investigation.
- Trace the file's creation to ensure it came from a legitimate or authorized process.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Investigate any abnormal behavior by the subject process such as network connections, file modifications, and any
spawned child processes.

### False positive analysis

- False positives can appear if the PID file is legitimate and holding a process ID as intended. If the PID file is
an executable or has a file size that's larger than 10 bytes, it should be ruled suspicious.
- If this activity is expected and noisy in your environment, consider adding exceptions — preferably with a combination
of file name and process executable conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Block the identified indicators of compromise (IoCs).
- Take actions to terminate processes and connections used by the attacker.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1106', 'name': 'Native API', 'reference': 'https://attack.mitre.org/techniques/T1106/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
51,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"A netcat process is engaging in network activity on a Linux host. Netcat is often used as a persistence mechanism by
exporting a reverse shell or by serving a shell on a listening port. Netcat is also sometimes used for data
exfiltration.
","['    Netcat is a dual-use tool that can be used for benign or malicious activity. Netcat is included in some Linux\n    distributions so its presence is not necessarily suspicious. Some normal use of this program, while uncommon, may\n    originate from scripts, automation tools, and frameworks.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Netcat Network Activity,"['http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet', 'https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf', 'https://en.wikipedia.org/wiki/Netcat']",47,adb961e0-cb74-42a0-af9e-29fc41f88f5f,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution']",,eql,"sequence by process.entity_id
  [process where (process.name == ""nc"" or process.name == ""ncat"" or process.name == ""netcat"" or
                  process.name == ""netcat.openbsd"" or process.name == ""netcat.traditional"") and
     event.type == ""start""]
  [network where (process.name == ""nc"" or process.name == ""ncat"" or process.name == ""netcat"" or
                  process.name == ""netcat.openbsd"" or process.name == ""netcat.traditional"")]
",now-9m,,"## Triage and analysis

### Investigating Netcat Network Activity

Netcat is a dual-use command line tool that can be used for various purposes, such as port scanning, file transfers, and
connection tests. Attackers can abuse its functionality for malicious purposes such creating bind shells or reverse
shells to gain access to the target system.

A reverse shell is a mechanism that's abused to connect back to an attacker-controlled system. It effectively redirects
the system's input and output and delivers a fully functional remote shell to the attacker. Even private systems are
vulnerable since the connection is outgoing.

A bind shell is a type of backdoor that attackers set up on the target host and binds to a specific port to listen for
an incoming connection from the attacker.

This rule identifies potential reverse shell or bind shell activity using Netcat by checking for the execution of Netcat
followed by a network connection.

#### Possible investigation steps

- Examine the command line to identify if the command is suspicious.
- Extract and examine the target domain or IP address.
  - Check if the domain is newly registered or unexpected.
  - Check the reputation of the domain or IP address.
  - Scope other potentially compromised hosts in your environment by mapping hosts that also communicated with the
  domain or IP address.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Investigate any abnormal behavior by the subject process such as network connections, file modifications, and any
spawned child processes.

### False positive analysis

- Netcat is a dual-use tool that can be used for benign or malicious activity. It is included in some Linux
distributions, so its presence is not necessarily suspicious. Some normal use of this program, while uncommon, may
originate from scripts, automation tools, and frameworks.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Block the identified indicators of compromise (IoCs).
- Take actions to terminate processes and connections used by the attacker.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
52,2020/04/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies when a terminal (tty) is spawned via Perl. Attackers may upgrade a simple reverse shell to a fully
interactive tty after obtaining initial access to a host.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Interactive Terminal Spawned via Perl,,73,05e5a668-7b51-4a67-93ab-e9af405c9ef3,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:perl and
  process.args:(""exec \""/bin/sh\"";"" or ""exec \""/bin/dash\"";"" or ""exec \""/bin/bash\"";"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
53,2022/05/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a new process starting from a process ID (PID), lock or reboot file within the temporary file storage
paradigm (tmpfs) directory /var/run directory. On Linux, the PID files typically hold the process ID to track previous
copies running and manage other tasks. Certain Linux malware use the /var/run directory for holding data, executables
and other tasks, disguising itself or these files as legitimate PID files.
","['    False-Positives (FP) should be at a minimum with this detection as PID files are meant to hold process IDs, not\n    inherently be executables that spawn processes.\n    ']",['logs-endpoint.events.*'],eql,Elastic License v2,Process Started from Process ID (PID) File,"['https://www.sandflysecurity.com/blog/linux-file-masquerading-and-malicious-pids-sandfly-1-2-6-update/', 'https://twitter.com/GossiTheDog/status/1522964028284411907', 'https://exatrack.com/public/Tricephalic_Hellkeeper.pdf']",73,3688577a-d196-11ec-90b0-f661ea17fbce,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'BPFDoor']",event.ingested,eql,"process where event.type == ""start"" and user.id == ""0"" and process.executable regex~ """"""/var/run/\w+\.(pid|lock|reboot)""""""
",now-9m,,"## Triage and analysis

### Investigating Process Started from Process ID (PID) File
Detection alerts from this rule indicate a process spawned from an executable masqueraded as a legitimate PID file which is very unusual and should not occur. Here are some possible avenues of investigation:
- Examine parent and child process relationships of the new process to determine if other processes are running.
- Examine the /var/run directory using Osquery to determine other potential PID files with unsually large file sizes, indicative of it being an executable: ""SELECT f.size, f.uid, f.type, f.path from file f WHERE path like '/var/run/%%';""
- Examine the reputation of the SHA256 hash from the PID file in a database like VirusTotal to identify additional pivots and artifacts for investigation.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
54,2022/05/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a binary by root in Linux shared memory directories: (/dev/shm/, /run/shm/, /var/run/,
/var/lock/). This activity is to be considered highly abnormal and should be investigated. Threat actors have placed
executables used for persistence on high-uptime servers in these directories as system backdoors.
","['    Directories /dev/shm and /run/shm are temporary file storage directories in Linux. They are intended to appear as a\n    mounted file system, but uses virtual memory instead of a persistent storage device and thus are used for mounting\n    file systems in legitimate purposes.\n    ']",['logs-endpoint.events.*'],eql,Elastic License v2,Binary Executed from Shared Memory Directory,"['https://linuxsecurity.com/features/fileless-malware-on-linux', 'https://twitter.com/GossiTheDog/status/1522964028284411907']",73,3f3f9fe2-d095-11ec-95dc-f661ea17fbce,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'BPFDoor']",event.ingested,eql,"process where event.type == ""start"" and
    event.action == ""exec"" and user.name == ""root"" and
    process.executable : (
        ""/dev/shm/*"",
        ""/run/shm/*"",
        ""/var/run/*"",
        ""/var/lock/*""
    ) and
    not process.executable : ( ""/var/run/docker/*"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
55,2020/04/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies when a terminal (tty) is spawned via Python. Attackers may upgrade a simple reverse shell to a fully
interactive tty after obtaining initial access to a host.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Interactive Terminal Spawned via Python,,73,d76b02ef-fc95-4001-9297-01cb7412232f,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:python* and
  process.args:(""import pty; pty.spawn(\""/bin/sh\"")"" or
                ""import pty; pty.spawn(\""/bin/dash\"")"" or
                ""import pty; pty.spawn(\""/bin/bash\"")"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,e70679c2-6cde-4510-9764-4823df18f7db,Comprehensive Process Timeline,,,,,,,,,,,,,,,,
56,2022/05/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies Linux binary(s) abuse to breakout of restricted shells or environments by spawning an interactive system
shell. The linux utility(s) activity of spawning shell is not a standard use of the binary for a user or system
administrator. It may indicates an attempt to improve the capabilities or stability of an adversary access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via  Linux Binary(s),"['https://gtfobins.github.io/gtfobins/apt/', 'https://gtfobins.github.io/gtfobins/apt-get/', 'https://gtfobins.github.io/gtfobins/nawk/', 'https://gtfobins.github.io/gtfobins/mawk/', 'https://gtfobins.github.io/gtfobins/awk/', 'https://gtfobins.github.io/gtfobins/gawk/', 'https://gtfobins.github.io/gtfobins/busybox/', 'https://gtfobins.github.io/gtfobins/c89/', 'https://gtfobins.github.io/gtfobins/c99/', 'https://gtfobins.github.io/gtfobins/cpulimit/', 'https://gtfobins.github.io/gtfobins/crash/', 'https://gtfobins.github.io/gtfobins/env/', 'https://gtfobins.github.io/gtfobins/expect/', 'https://gtfobins.github.io/gtfobins/find/', 'https://gtfobins.github.io/gtfobins/flock/', 'https://gtfobins.github.io/gtfobins/gcc/', 'https://gtfobins.github.io/gtfobins/mysql/', 'https://gtfobins.github.io/gtfobins/nice/', 'https://gtfobins.github.io/gtfobins/ssh/', 'https://gtfobins.github.io/gtfobins/vi/', 'https://gtfobins.github.io/gtfobins/vim/', 'https://gtfobins.github.io/gtfobins/capsh/', 'https://gtfobins.github.io/gtfobins/byebug/', 'https://gtfobins.github.io/gtfobins/git/', 'https://gtfobins.github.io/gtfobins/ftp/']",47,52376a86-ee86-4967-97ae-1a05f55816f0,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and

    /* launch shells from unusual process */
    (process.name == ""capsh"" and process.args == ""--"") or

    /* launching shells from unusual parents or parent+arg combos */
    (process.name in (""bash"", ""sh"", ""dash"",""ash"") and
        (process.parent.name in (""byebug"",""git"",""ftp"",""strace"")) or

        /* shells specified in parent args */
        /* nice rule is broken in 8.2 */
        (process.parent.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""/bin/ash"", ""sh"", ""bash"", ""dash"", ""ash"") and
            (
             (process.parent.name == ""nice"") or
             (process.parent.name == ""cpulimit"" and process.parent.args == ""-f"") or
             (process.parent.name == ""find"" and process.parent.args == ""-exec"" and process.parent.args == "";"") or
             (process.parent.name == ""flock"" and process.parent.args == ""-u"" and process.parent.args == ""/"")
            )
        ) or

         /* shells specified in args */
         (process.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""/bin/ash"", ""sh"", ""bash"", ""dash"", ""ash"") and
            (process.parent.name == ""crash"" and process.parent.args == ""-h"") or
            (process.name == ""sensible-pager"" and process.parent.name in (""apt"", ""apt-get"") and process.parent.args == ""changelog"")
            /* scope to include more sensible-pager invoked shells with different parent process to reduce noise and remove false positives */
          )
    ) or
    (process.name == ""busybox"" and process.args_count == 2 and process.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""/bin/ash"", ""sh"", ""bash"", ""dash"", ""ash"") )or
    (process.name == ""env"" and process.args_count == 2 and process.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""/bin/ash"", ""sh"", ""bash"", ""dash"", ""ash"")) or
    (process.parent.name in (""vi"", ""vim"") and process.parent.args == ""-c"" and process.parent.args in ("":!/bin/bash"", "":!/bin/sh"", "":!bash"", "":!sh"")) or
    (process.parent.name in (""c89"",""c99"", ""gcc"") and process.parent.args in (""sh,-s"", ""bash,-s"", ""dash,-s"", ""ash,-s"", ""/bin/sh,-s"", ""/bin/bash,-s"", ""/bin/dash,-s"", ""/bin/ash,-s"") and process.parent.args == ""-wrapper"") or
    (process.parent.name == ""expect"" and process.parent.args == ""-c"" and process.parent.args in (""spawn /bin/sh;interact"", ""spawn /bin/bash;interact"", ""spawn /bin/dash;interact"", ""spawn sh;interact"", ""spawn bash;interact"", ""spawn dash;interact"")) or
    (process.parent.name == ""mysql"" and process.parent.args == ""-e"" and process.parent.args in (""\\!*sh"", ""\\!*bash"", ""\\!*dash"", ""\\!*/bin/sh"", ""\\!*/bin/bash"", ""\\!*/bin/dash"")) or
    (process.parent.name == ""ssh"" and process.parent.args == ""-o"" and process.parent.args in (""ProxyCommand=;sh 0<&2 1>&2"", ""ProxyCommand=;bash 0<&2 1>&2"", ""ProxyCommand=;dash 0<&2 1>&2"", ""ProxyCommand=;/bin/sh 0<&2 1>&2"", ""ProxyCommand=;/bin/bash 0<&2 1>&2"", ""ProxyCommand=;/bin/dash 0<&2 1>&2"")) or
    (process.parent.name in (""nawk"", ""mawk"", ""awk"", ""gawk"") and process.parent.args : ""BEGIN {system(*)}"")
",now-9m,,"## Triage and analysis

### Investigating Shell Evasion via Linux Utilities
Detection alerts from this rule indicate that a Linux utility has been abused to breakout of restricted shells or
environments by spawning an interactive system shell.
Here are some possible avenues of investigation:
- Examine the entry point to the host and user in action via the Analyse View.
  - Identify the session entry leader and session user
- Examine the contents of session leading to the abuse via the Session View.
  - Examine the command execution pattern in the session, which may lead to suspricous activities
- Examine the execution of commands in the spawned shell.
  - Identify imment threat to the system from the executed commands
  - Take necessary incident response actions to contain any malicious behviour caused via this execution.

### Related rules

- A malicious spawned shell can execute any of the possible MITTRE ATT&CK vectors mainly to impair defences.
- Hence its adviced to enable defence evasion and privilige escalation rules accordingly in your environment

### Response and remediation

Initiate the incident response process based on the outcome of the triage.

- If the triage releaved suspicious netwrok activity from the malicious spawned shell,
  - Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware execution via the maliciously spawned shell,
  - Search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- If the triage revelaed defence evasion for imparing defenses
  - Isolate the involved host to prevent further post-compromise behavior.
  - Identified the disabled security guard components on the host and take necessary steps in renebaling the same.
  - If any tools have been disbaled / uninstalled or config tampered work towards reenabling the same.
- If the triage revelaed addition of persistence mechanism exploit like auto start scripts
  - Isolate further login to the systems that can initae auto start scripts.
  - Identify the auto start scripts and disable and remove the same from the systems
- If the triage revealed data crawling or data export via remote copy
  - Investigate credential exposure on systems compromised / used / decoded by the attacker during the data crawling
  - Intiate compromised credential deactivation and credential rotation process for all exposed crednetials.
  - Investiagte if any IPR data was accessed during the data crawling and take appropriate actions.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The session view analysis for the command alerted is avalible in versions 8.2 and above.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
57,2022/07/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects when the tc (transmission control) binary is utilized to set a BPF (Berkeley Packet Filter) on a network interface. Tc is used to configure Traffic Control in the Linux kernel. It can shape, schedule, police and drop traffic. A threat actor can utilize tc to set a bpf filter on an interface for the purpose of manipulating the incoming traffic. This technique is not at all common and should indicate abnormal, suspicious or malicious activity.
",,['logs-*'],eql,Elastic License v2,BPF filter applied using TC,"['https://github.com/h3xduck/TripleCross/blob/master/src/helpers/deployer.sh', 'https://man7.org/linux/man-pages/man8/tc.8.html']",73,ef04a476-07ec-48fc-8f3d-5e1742de76d3,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'TripleCross']",event.ingested,eql,"process where event.type != ""end"" and process.executable : ""/usr/sbin/tc"" and process.args : ""filter"" and process.args : ""add"" and process.args : ""bpf"" and not process.parent.executable: ""/usr/sbin/libvirtd""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
58,2022/07/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule identifies a high number (10) of process terminations via pkill from the same host within a
short time period.
",,['logs-endpoint.events.*'],kuery,Elastic License v2,High Number of Process Terminations,,47,67f8443a-4ff3-4a70-916d-3cfa3ae9f02b,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Impact', 'has_guide']",,threshold,"event.category:process and event.type:start and process.name:""pkill"" and process.args:""-f""
",now-9m,,"## Triage and analysis

### Investigating High Number of Process Terminations

Attackers can kill processes for a variety of purposes. For example, they can kill process associated
with business applications and databases to release the lock on files used by these applications so they may be
encrypted,or stop security and backup solutions, etc.

This rule identifies a high number (10) of process terminations via pkill from the same
host within a short time period.

#### Possible investigation steps

Detection alerts from this rule indicate High Number of Process Terminations from the same host
Here are some possible avenues of investigation:
- Examine the entry point to the host and user in action via the Analyse View.
  - Identify the session entry leader and session user
- Examine the contents of session leading to the process termination(s) via the Session View.
  - Examine the command execution pattern in the session, which may lead to suspricous activities
- Examine the process killed during the malicious execution
  - Identify imment threat to the system from the process killed
  - Take necessary incident response actions to respawn necessary process

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further destructive behavior, which is commonly associated with this activity.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reimage the host operating system or restore it to the operational state.
- If any other destructive action was identified on the host, it is recommended to prioritize the investigation and look
for ransomware preparation and execution activities.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1489', 'name': 'Service Stop', 'reference': 'https://attack.mitre.org/techniques/T1489/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]","{'field': ['host.id'], 'value': 10}",,,,,,,,,,,,,,,,,,
59,2020/04/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Telnet provides a command line interface for communication with a remote device or server. This rule identifies Telnet
network connections to publicly routable IP addresses.
","['    Telnet can be used for both benign or malicious purposes. Telnet is included by default in some Linux distributions,\n    so its presence is not inherently suspicious. The use of Telnet to manage devices remotely has declined in recent\n    years in favor of more secure protocols such as SSH. Telnet usage by non-automated tools or frameworks may be\n    suspicious.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Connection to External Network via Telnet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],47,e19e64ee-130e-4c07-961f-8a339f0b8362,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by process.entity_id
  [process where process.name == ""telnet"" and event.type == ""start""]
  [network where process.name == ""telnet"" and
    not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
                                  ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"",
                                  ""192.0.0.171/32"", ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"",
                                  ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"", ""192.175.48.0/24"",
                                  ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
                                  ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
60,2020/04/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Telnet provides a command line interface for communication with a remote device or server. This rule identifies Telnet
network connections to non-publicly routable IP addresses.
","['    Telnet can be used for both benign or malicious purposes. Telnet is included by default in some Linux distributions,\n    so its presence is not inherently suspicious. The use of Telnet to manage devices remotely has declined in recent\n    years in favor of more secure protocols such as SSH. Telnet usage by non-automated tools or frameworks may be\n    suspicious.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Connection to Internal Network via Telnet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],47,1b21abcc-4d9f-4b08-a7f5-316f5f94b973,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by process.entity_id
  [process where process.name == ""telnet"" and event.type == ""start""]
  [network where process.name == ""telnet"" and
    cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
                              ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"",
                              ""192.0.0.171/32"", ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"",
                              ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"", ""192.175.48.0/24"",
                              ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
                              ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
61,2022/07/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects the use of the chkconfig binary to manually add a service for management by chkconfig. Threat actors may utilize this technique to maintain persistence on a system. When a new service is added, chkconfig ensures that the service has either a start or a kill entry in every runlevel and when the system is rebooted the service file added will run providing long-term persistence.
",,['logs-*'],eql,Elastic License v2,Chkconfig Service Add,['https://www.intezer.com/blog/research/lightning-framework-new-linux-threat/'],47,b910f25a-2d44-47f2-a873-aabdc0d355e6,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence', 'Lightning Framework']",event.ingested,eql,"process where event.type == ""start"" and
   (process.executable : ""/usr/sbin/chkconfig"" and process.args : ""--add"") or
   (process.args : ""*chkconfig"" and process.args : ""--add"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1037', 'name': 'Boot or Logon Initialization Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/', 'subtechnique': [{'id': 'T1037.004', 'name': 'RC Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/004/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
62,2020/12/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may modify SSH related binaries for persistence or credential access by patching sensitive functions to
enable unauthorized access or by logging SSH credentials for exfiltration.
","[""Trusted OpenSSH executable updates. It's recommended to verify the integrity of OpenSSH binary changes.""]","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Modification of OpenSSH Binaries,['https://blog.angelalonso.es/2016/09/anatomy-of-real-linux-intrusion-part-ii.html'],47,0415f22a-2336-45fa-ba07-618a5942e22c,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Credential Access', 'Persistence']",event.ingested,query,"event.category:file and event.type:change and
 process.name:* and
 (file.path:(/usr/sbin/sshd or /usr/bin/ssh or /usr/bin/sftp or /usr/bin/scp) or file.name:libkeyutils.so) and
 not process.name:(""dpkg"" or ""yum"" or ""dnf"" or ""dnf-automatic"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1556', 'name': 'Modify Authentication Process', 'reference': 'https://attack.mitre.org/techniques/T1556/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
63,2022/07/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects the copying of the Linux dynamic loader binary and subsequent file creation for the purpose of creating a backup copy. This technique was seen recently being utilized by Linux malware prior to patching the dynamic loader in order to inject and preload a malicious shared object file. This activity should never occur and if it does then it should be considered highly suspicious or malicious.
",,['logs-*'],eql,Elastic License v2,Dynamic Linker Copy,['https://www.intezer.com/blog/incident-response/orbit-new-undetected-linux-threat/'],73,df6f62d9-caab-4b88-affa-044f4395a1e0,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence', 'Orbit']",,eql,"sequence by process.entity_id with maxspan=1m
[process where event.type == ""start"" and process.name : (""cp"", ""rsync"") and process.args : (""/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2"", ""/etc/ld.so.preload"")]
[file where event.action == ""creation"" and file.extension == ""so""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.006', 'name': 'Dynamic Linker Hijacking', 'reference': 'https://attack.mitre.org/techniques/T1574/006/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
64,2022/07/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects the manual creation of files in specific etc directories, via user root, used by Linux malware to persist and elevate privileges on compromised systems. File creation in these directories should not be entirely common and could indicate a malicious binary or script installing persistence for long term access.
",,['logs-*'],eql,Elastic License v2,Suspicious File Creation in /etc for Persistence,"['https://www.intezer.com/blog/incident-response/orbit-new-undetected-linux-threat/', 'https://www.intezer.com/blog/research/lightning-framework-new-linux-threat/']",47,1c84dd64-7e6c-4bad-ac73-a5014ee37042,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence', 'Orbit', 'Lightning Framework']",event.ingested,eql,"file where event.action == ""creation"" and user.name == ""root"" and file.path : (""/etc/ld.so.conf.d/*"", ""/etc/cron.d/*"", ""/etc/sudoers.d/*"", ""/etc/rc.d/init.d/*"", ""/etc/systemd/system/*"") and not process.executable : (""*/dpkg"", ""*/yum"", ""*/apt"", ""*/dnf"", ""*/systemd"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}, 'technique': [{'id': 'T1037', 'name': 'Boot or Logon Initialization Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/', 'subtechnique': [{'id': 'T1037.004', 'name': 'RC Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/004/'}]}, {'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.006', 'name': 'Dynamic Linker Hijacking', 'reference': 'https://attack.mitre.org/techniques/T1574/006/'}]}, {'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.002', 'name': 'Systemd Service', 'reference': 'https://attack.mitre.org/techniques/T1543/002/'}]}]}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}, 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.003', 'name': 'Cron', 'reference': 'https://attack.mitre.org/techniques/T1053/003/'}]}]}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}, 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.003', 'name': 'Sudo and Sudo Caching', 'reference': 'https://attack.mitre.org/techniques/T1548/003/'}]}]}]",,,,,,,,,,,,,,,,,,,
65,2022/07/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects the use of the insmod binary to load a Linux kernel object file. Threat actors can use this binary, given they have root privileges, to load a rootkit on a system providing them with complete control and the ability to hide from security products. Manually loading a kernel module in this manner should not be at all common and can indicate suspcious or malicious behavior.
",,['logs-*'],eql,Elastic License v2,Kernel module load via insmod,['https://decoded.avast.io/davidalvarez/linux-threat-hunting-syslogk-a-kernel-rootkit-found-under-development-in-the-wild/'],47,2339f03c-f53f-40fa-834b-40c5983fc41f,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence', 'Rootkit']",event.ingested,eql,"process where event.type == ""start"" and process.executable : ""/usr/sbin/insmod"" and process.args : ""*.ko""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.006', 'name': 'Kernel Modules and Extensions', 'reference': 'https://attack.mitre.org/techniques/T1547/006/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
66,2021/01/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation or modification of a K Desktop Environment (KDE) AutoStart script or desktop file that will
execute upon each user logon. Adversaries may abuse this method for persistence.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Persistence via KDE AutoStart Script or Desktop File Modification,"['https://userbase.kde.org/System_Settings/Autostart', 'https://www.amnesty.org/en/latest/research/2020/09/german-made-finspy-spyware-found-in-egypt-and-mac-and-linux-versions-revealed/', 'https://www.intezer.com/blog/research/operation-electrorat-attacker-creates-fake-companies-to-drain-your-crypto-wallets/']",47,e3e904b3-0a8e-4e68-86a8-977a163e21d3,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
  file.extension in (""sh"", ""desktop"") and
  file.path :
    (
      ""/home/*/.config/autostart/*"", ""/root/.config/autostart/*"",
      ""/home/*/.kde/Autostart/*"", ""/root/.kde/Autostart/*"",
      ""/home/*/.kde4/Autostart/*"", ""/root/.kde4/Autostart/*"",
      ""/home/*/.kde/share/autostart/*"", ""/root/.kde/share/autostart/*"",
      ""/home/*/.kde4/share/autostart/*"", ""/root/.kde4/share/autostart/*"",
      ""/home/*/.local/share/autostart/*"", ""/root/.local/share/autostart/*"",
      ""/home/*/.config/autostart-scripts/*"", ""/root/.config/autostart-scripts/*"",
      ""/etc/xdg/autostart/*"", ""/usr/share/autostart/*""
    ) and
    not process.name in (""yum"", ""dpkg"", ""install"", ""dnf"", ""teams"", ""yum-cron"", ""dnf-automatic"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
67,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious commands executed via a web server, which may suggest a vulnerability and remote shell access.",['    Network monitoring or management products may have a web server component that runs shell commands as part of normal\n    behavior.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Shell via Web Server,['https://pentestlab.blog/tag/web-shell/'],47,231876e7-4d1f-4d63-a47c-47dd1acdc1cb,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
process.name:(bash or dash or ash or zsh or ""python*"" or ""perl*"" or ""php*"") and
process.parent.name:(""apache"" or ""nginx"" or ""www"" or ""apache2"" or ""httpd"" or ""www-data"")
",now-9m,,"## Triage and analysis

### Investigating Potential Shell via Web Server

Adversaries may backdoor web servers with web shells to establish persistent access to systems. A web shell is a web
script that is placed on an openly accessible web server to allow an adversary to use the web server as a gateway into a
network. A web shell may provide a set of functions to execute or a command line interface on the system that hosts the
web server.

This rule detects a web server process spawning script and command line interface programs, potentially indicating
attackers executing commands using the web shell.

#### Possible investigation steps

- Investigate abnormal behaviors observed by the subject process such as network connections, file modifications, and
any other spawned child processes.
- Examine the command line to determine which commands or scripts were executed.
- Investigate other alerts associated with the user/host during the past 48 hours.
- If scripts or executables were dropped, retrieve the files and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
        - Check if the domain is newly registered or unexpected.
        - Check the reputation of the domain or IP address.
      - File access, modification, and creation activities.
      - Cron jobs, services and other persistence mechanisms.

### False positive analysis

- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently
malicious must be monitored by the security team.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1505', 'name': 'Server Software Component', 'reference': 'https://attack.mitre.org/techniques/T1505/', 'subtechnique': [{'id': 'T1505.003', 'name': 'Web Shell', 'reference': 'https://attack.mitre.org/techniques/T1505/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
68,2021/01/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies modification of the dynamic linker preload shared object (ld.so.preload). Adversaries may execute malicious
payloads by hijacking the dynamic linker used to load libraries.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Modification of Dynamic Linker Preload Shared Object,['https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang'],47,717f82c2-7741-4f9b-85b8-d06aeb853f4f,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:file and not event.type:deletion and file.path:/etc/ld.so.preload
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.006', 'name': 'Dynamic Linker Hijacking', 'reference': 'https://attack.mitre.org/techniques/T1574/006/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
69,2022/01/26,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies an attempt to exploit a local privilege escalation in polkit pkexec (CVE-2021-4034) via unsecure environment
variable injection. Successful exploitation allows an unprivileged user to escalate to the root user.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Potential Privilege Escalation via PKEXEC,"['https://seclists.org/oss-sec/2022/q1/80', 'https://haxx.in/files/blasty-vs-pkexec.c']",73,8da41fc9-7735-4b24-9cc6-c78dfc9fc9c9,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"file where file.path : ""/*GCONV_PATH*""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/', 'id': 'T1068'}], 'tactic': {'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/', 'id': 'TA0004'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'id': 'T1574', 'subtechnique': [{'name': 'Path Interception by PATH Environment Variable', 'reference': 'https://attack.mitre.org/techniques/T1574/007/', 'id': 'T1574.007'}]}], 'tactic': {'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/', 'id': 'TA0005'}}]",,,,,,,,,,,,,,,,,,,
70,2022/09/01,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/01,['Elastic'],"Identifies the manual reading of the /etc/shadow file via the commandline using standard system utilities.
Threat actors will attempt to read this file, after elevating their privileges to root,
in order to gain valid credentials they can utilize to move laterally undetected and access additional resources.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Shadow File Read via Command Line Utilities,,47,9a3a3689-8ed1-4cdb-83fb-9506db54c61f,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and event.action == ""exec"" and user.name == ""root"" and
process.args : ""/etc/shadow"" and
not process.executable: (""/usr/bin/find"", ""/usr/bin/cmp"", ""/bin/ls"", ""/usr/sbin/restorecon"", ""/usr/bin/uniq"") and
not process.parent.executable: ""/bin/dracut""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
71,2022/08/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/30,['Elastic'],"Identifies  suspicious usage of unshare to manipulate system namespaces. Unshare can be utilized to escalate privileges
or escape container security boundaries. Threat actors have utilized this binary to allow themselves to escape to the
host and access other resources or escalate privileges.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Namespace Manipulation Using Unshare,"['https://man7.org/linux/man-pages/man1/unshare.1.html', 'https://www.crowdstrike.com/blog/cve-2022-0185-kubernetes-container-escape-using-linux-kernel-exploit/']",47,d00f33e7-b57d-4023-9952-2db91b1767c4,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and event.action == ""exec"" and
process.executable: ""/usr/bin/unshare"" and
not process.parent.executable: (""/usr/bin/udevadm"", ""*/lib/systemd/systemd-udevd"", ""/usr/bin/unshare"") and
not process.args : ""/usr/bin/snap""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
72,2020/01/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a process with arguments pointing to known browser files that store passwords and cookies.
Adversaries may acquire credentials from web browsers by reading files specific to the target browser.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Access of Stored Browser Credentials,['https://securelist.com/calisto-trojan-for-macos/86543/'],73,20457e4f-d1de-4b92-ae69-142e27a4342a,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.args :
    (
      ""/Users/*/Library/Application Support/Google/Chrome/Default/Login Data"",
      ""/Users/*/Library/Application Support/Google/Chrome/Default/Cookies"",
      ""/Users/*/Library/Application Support/Google/Chrome/Profile*/Cookies"",
      ""/Users/*/Library/Cookies*"",
      ""/Users/*/Library/Application Support/Firefox/Profiles/*.default/cookies.sqlite"",
      ""/Users/*/Library/Application Support/Firefox/Profiles/*.default/key*.db"",
      ""/Users/*/Library/Application Support/Firefox/Profiles/*.default/logins.json"",
      ""Login Data"",
      ""Cookies.binarycookies"",
      ""key4.db"",
      ""key3.db"",
      ""logins.json"",
      ""cookies.sqlite""
    )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1539', 'name': 'Steal Web Session Cookie', 'reference': 'https://attack.mitre.org/techniques/T1539/'}, {'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.003', 'name': 'Credentials from Web Browsers', 'reference': 'https://attack.mitre.org/techniques/T1555/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
73,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way
for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords,
websites, secure notes and certificates.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Access to Keychain Credentials Directories,"['https://objective-see.com/blog/blog_0x25.html', 'https://securelist.com/calisto-trojan-for-macos/86543/']",73,96e90768-c3b7-4df6-b5d9-6237f8bc36a8,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.args :
    (
      ""/Users/*/Library/Keychains/*"",
      ""/Library/Keychains/*"",
      ""/Network/Library/Keychains/*"",
      ""System.keychain"",
      ""login.keychain-db"",
      ""login.keychain""
    ) and
    not process.args : (""find-certificate"",
                      ""add-trusted-cert"",
                      ""set-keychain-settings"",
                      ""delete-certificate"",
                      ""/Users/*/Library/Keychains/openvpn.keychain-db"",
                      ""show-keychain-info"",
                      ""lock-keychain"",
                      ""set-key-partition-list"",
                      ""import"",
                      ""find-identity"") and
    not process.parent.executable :
      (
        ""/Applications/OpenVPN Connect/OpenVPN Connect.app/Contents/MacOS/OpenVPN Connect"",
        ""/Applications/Microsoft Defender.app/Contents/MacOS/wdavdaemon_enterprise.app/Contents/MacOS/wdavdaemon_enterprise"",
        ""/opt/jc/bin/jumpcloud-agent""
      ) and
    not process.executable : ""/opt/jc/bin/jumpcloud-agent""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.001', 'name': 'Keychain', 'reference': 'https://attack.mitre.org/techniques/T1555/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
74,2021/01/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of macOS built-in commands used to dump user account hashes. Adversaries may attempt to dump
credentials to obtain account login information in the form of a hash. These hashes can be cracked or leveraged for
lateral movement.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Dumping Account Hashes via Built-In Commands,"['https://apple.stackexchange.com/questions/186893/os-x-10-9-where-are-password-hashes-stored', 'https://www.unix.com/man-page/osx/8/mkpassdb/']",73,02ea4563-ec10-4974-b7de-12e65aa4f9b3,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,query,"event.category:process and event.type:start and
 process.name:(defaults or mkpassdb) and process.args:(ShadowHashData or ""-dump"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
75,2021/01/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may dump the content of the keychain storage data from a system to acquire credentials. Keychains are the
built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi
and website passwords, secure notes, certificates, and Kerberos.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Dumping of Keychain Content via Security Command,['https://ss64.com/osx/security.html'],73,565d6ca5-75ba-4c82-9b13-add25353471c,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and process.args : ""dump-keychain"" and process.args : ""-d""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.001', 'name': 'Keychain', 'reference': 'https://attack.mitre.org/techniques/T1555/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
76,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the use of the Kerberos credential cache (kcc) utility to dump locally cached Kerberos tickets. Adversaries
may attempt to dump credential material in the form of tickets that can be leveraged for lateral movement.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Kerberos Cached Credentials Dumping,"['https://github.com/EmpireProject/EmPyre/blob/master/lib/modules/collection/osx/kerberosdump.py', 'https://opensource.apple.com/source/Heimdal/Heimdal-323.12/kuser/kcc-commands.in.auto.html']",73,ad88231f-e2ab-491c-8fc6-64746da26cfe,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:kcc and
  process.args:copy_cred_cache
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}, {'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/', 'subtechnique': [{'name': 'Kerberoasting', 'id': 'T1558.003', 'reference': 'https://attack.mitre.org/techniques/T1558/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
77,2020/01/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may collect keychain storage data from a system to in order to acquire credentials. Keychains are the
built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi
and website passwords, secure notes, certificates, and Kerberos.
",['Applications for password management.'],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Keychain Password Retrieval via Command Line,"['https://www.netmeister.org/blog/keychain-passwords.html', 'https://github.com/priyankchheda/chrome_password_grabber/blob/master/chrome.py', 'https://ss64.com/osx/security.html', 'https://www.intezer.com/blog/research/operation-electrorat-attacker-creates-fake-companies-to-drain-your-crypto-wallets/']",73,9092cd6c-650f-4fa3-8a8a-28256c7489c9,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type == ""start"" and
 process.name : ""security"" and process.args : ""-wa"" and process.args : (""find-generic-password"", ""find-internet-password"") and
 process.args : (""Chrome*"", ""Chromium"", ""Opera"", ""Safari*"", ""Brave"", ""Microsoft Edge"", ""Edge"", ""Firefox*"") and
 not process.parent.executable : ""/Applications/Keeper Password Manager.app/Contents/Frameworks/Keeper Password Manager Helper*/Contents/MacOS/Keeper Password Manager Helper*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.001', 'name': 'Keychain', 'reference': 'https://attack.mitre.org/techniques/T1555/001/'}]}, {'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.003', 'name': 'Credentials from Web Browsers', 'reference': 'https://attack.mitre.org/techniques/T1555/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
78,2021/01/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the use of the built-in networksetup command to configure webproxy settings. This may indicate an attempt to
hijack web browser traffic for credential access via traffic sniffing or redirection.
",['Legitimate WebProxy Settings Modification'],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,WebProxy Settings Modification,"['https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/', 'https://objectivebythesea.com/v2/talks/OBTS_v2_Zohar.pdf']",47,10a500bb-a28f-418e-ba29-ca4c8d1a9f2f,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,query,"event.category : process and event.type : start and
 process.name : networksetup and process.args : ((""-setwebproxy"" or ""-setsecurewebproxy"" or ""-setautoproxyurl"") and not (Bluetooth or off)) and
 not process.parent.executable : (""/Library/PrivilegedHelperTools/com.80pct.FreedomHelper"" or
                                  ""/Applications/Fiddler Everywhere.app/Contents/Resources/app/out/WebServer/Fiddler.WebUi"" or
                                  ""/usr/libexec/xpcproxy"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1539', 'name': 'Steal Web Session Cookie', 'reference': 'https://attack.mitre.org/techniques/T1539/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
79,2020/11/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/21,['Elastic'],"Identifies a high number (20) of macOS SSH KeyGen process executions from the same host. An adversary may attempt a
brute force attack to obtain unauthorized access to user accounts.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential macOS SSH Brute Force Detected,['https://themittenmac.com/detecting-ssh-activity-via-process-monitoring/'],47,ace1e989-a541-44df-93a8-a8b0591b63c0,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",,threshold,"event.category:process and event.type:start and process.name:""sshd-keygen-wrapper"" and process.parent.name:launchd
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]","{'field': ['host.id'], 'value': 20}",,,,,,,,,,,,,,,,,,
80,2020/11/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the use of osascript to execute scripts via standard input that may prompt a user with a rogue dialog for
credentials.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Prompt for Credentials with OSASCRIPT,"['https://github.com/EmpireProject/EmPyre/blob/master/lib/modules/collection/osx/prompt.py', 'https://ss64.com/osx/osascript.html']",73,38948d29-3d5d-42e3-8aec-be832aaaf8eb,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and process.name : ""osascript"" and
 process.command_line : ""osascript*display dialog*password*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1056', 'name': 'Input Capture', 'reference': 'https://attack.mitre.org/techniques/T1056/', 'subtechnique': [{'id': 'T1056.002', 'name': 'GUI Input Capture', 'reference': 'https://attack.mitre.org/techniques/T1056/002/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
81,2020/01/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and
features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. Adversaries may collect the
keychain storage data from a system to acquire credentials.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SystemKey Access via Command Line,['https://github.com/AlessandroZ/LaZagne/blob/master/Mac/lazagne/softwares/system/chainbreaker.py'],73,d75991f2-b989-419d-b797-ac1e54ec2d61,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.args:(""/private/var/db/SystemKey"" or ""/var/db/SystemKey"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.001', 'name': 'Keychain', 'reference': 'https://attack.mitre.org/techniques/T1555/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
82,2021/01/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies changes to the SoftwareUpdate preferences using the built-in defaults command. Adversaries may abuse this in
an attempt to disable security updates.
",['Authorized SoftwareUpdate Settings Changes'],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SoftwareUpdate Preferences Modification,['https://blog.checkpoint.com/2017/07/13/osxdok-refuses-go-away-money/'],47,f683dcdf-a018-4801-b066-193d4ae6c8e5,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:defaults and
 process.args:(write and ""-bool"" and (com.apple.SoftwareUpdate or /Library/Preferences/com.apple.SoftwareUpdate.plist) and not (TRUE or true))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
83,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a potential Gatekeeper bypass. In macOS, when applications or programs are downloaded from the internet,
there is a quarantine flag set on the file. This attribute is read by Apple's Gatekeeper defense program at execution
time. An adversary may disable this attribute to evade defenses.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Attempt to Remove File Quarantine Attribute,"['https://www.trendmicro.com/en_us/research/20/k/new-macos-backdoor-connected-to-oceanlotus-surfaces.html', 'https://ss64.com/osx/xattr.html']",47,f0b48bbc-549e-4bcf-8ee0-a7a72586c6a7,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.name : ""xattr"" and
  (
    (process.args : ""com.apple.quarantine"" and process.args : (""-d"", ""-w"")) or
    (process.args : ""-c"") or
    (process.command_line : (""/bin/bash -c xattr -c *"", ""/bin/zsh -c xattr -c *"", ""/bin/sh -c xattr -c *""))
  ) and not process.args_count > 12
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
84,2021/01/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects attempts to disable Gatekeeper on macOS. Gatekeeper is a security feature that's designed to ensure that only
trusted software is run. Adversaries may attempt to disable Gatekeeper before executing malicious code.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Attempt to Disable Gatekeeper,"['https://support.apple.com/en-us/HT202491', 'https://community.carbonblack.com/t5/Threat-Advisories-Documents/TAU-TIN-Shlayer-OSX/ta-p/68397']",47,4da13d6e-904f-4636-81d8-6ab14b4e6ae9,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.args:(spctl and ""--master-disable"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1553', 'name': 'Subvert Trust Controls', 'reference': 'https://attack.mitre.org/techniques/T1553/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
85,2021/01/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to their command
and control servers. Root certificates are used in public key cryptography to identify a root certificate authority
(CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of
trust that have been signed by the root certificate.
",['Certain applications may install root certificates for the purpose of inspecting SSL traffic.'],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Attempt to Install Root Certificate,['https://ss64.com/osx/security-cert.html'],47,bc1eeacf-2972-434f-b782-3a532b100d67,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:security and process.args:""add-trusted-cert"" and
  not process.parent.executable:(""/Library/Bitdefender/AVP/product/bin/BDCoreIssues"" or ""/Applications/Bitdefender/SecurityNetworkInstallerApp.app/Contents/MacOS/SecurityNetworkInstallerApp""
)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1553', 'name': 'Subvert Trust Controls', 'reference': 'https://attack.mitre.org/techniques/T1553/', 'subtechnique': [{'id': 'T1553.004', 'name': 'Install Root Certificate', 'reference': 'https://attack.mitre.org/techniques/T1553/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
86,2021/01/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies modifications to an environment variable using the built-in launchctl command. Adversaries may execute their
own malicious payloads by hijacking certain environment variables to load arbitrary libraries or bypass certain
restrictions.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Modification of Environment Variable via Launchctl,['https://github.com/rapid7/metasploit-framework/blob/master//modules/post/osx/escalate/tccbypass.rb'],47,7453e19e-3dbf-4e4e-9ae0-33d6c6ed15e1,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:start and
  process.name:launchctl and
  process.args:(setenv and not (JAVA*_HOME or
                                RUNTIME_JAVA_HOME or
                                DBUS_LAUNCHD_SESSION_BUS_SOCKET or
                                ANT_HOME or
                                LG_WEBOS_TV_SDK_HOME or
                                WEBOS_CLI_TV or
                                EDEN_ENV)
                ) and
  not process.parent.executable:(""/Applications/NoMachine.app/Contents/Frameworks/bin/nxserver.bin"" or
                                 ""/usr/local/bin/kr"" or
                                 ""/Applications/NoMachine.app/Contents/Frameworks/bin/nxserver.bin"" or
                                 ""/Applications/IntelliJ IDEA CE.app/Contents/jbr/Contents/Home/lib/jspawnhelper"") and
  not process.args : ""*.vmoptions""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.007', 'name': 'Path Interception by PATH Environment Variable', 'reference': 'https://attack.mitre.org/techniques/T1574/007/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
87,2020/12/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the use of sqlite3 to directly modify the Transparency, Consent, and Control (TCC) SQLite database. This may
indicate an attempt to bypass macOS privacy controls, including access to sensitive resources like the system camera,
microphone, address book, and calendar.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential Privacy Control Bypass via TCCDB Modification,"['https://applehelpwriter.com/2016/08/29/discovering-how-dropbox-hacks-your-mac/', 'https://github.com/bp88/JSS-Scripts/blob/master/TCC.db%20Modifier.sh', 'https://medium.com/@mattshockl/cve-2020-9934-bypassing-the-os-x-transparency-consent-and-control-tcc-framework-for-4e14806f1de8']",47,eea82229-b002-470e-a9e1-00be38b14d32,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and process.name : ""sqlite*"" and
 process.args : ""/*/Application Support/com.apple.TCC/TCC.db"" and
 not process.parent.executable : ""/Library/Bitdefender/AVP/product/bin/*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
88,2020/01/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies use of the Secure Copy Protocol (SCP) to copy files locally by abusing the auto addition of the Secure Shell
Daemon (sshd) to the authorized application list for Full Disk Access. This may indicate attempts to bypass macOS
privacy controls to access sensitive files.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential Privacy Control Bypass via Localhost Secure Copy,['https://www.trendmicro.com/en_us/research/20/h/xcsset-mac-malware--infects-xcode-projects--uses-0-days.html'],73,c02c8b9f-5e1d-463c-a1b0-04edcdfe1a3d,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Privilege Escalation', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
 process.name:""scp"" and
 process.args:""StrictHostKeyChecking=no"" and
 process.command_line:(""scp *localhost:/*"", ""scp *127.0.0.1:/*"") and
 not process.args:""vagrant@*127.0.0.1*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
89,2021/01/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies changes to the Safari configuration using the built-in defaults command. Adversaries may attempt to enable or
disable certain Safari settings, such as enabling JavaScript from Apple Events to ease in the hijacking of the users
browser.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Modification of Safari Settings via Defaults Command,['https://objectivebythesea.com/v2/talks/OBTS_v2_Zohar.pdf'],47,6482255d-f468-45ea-a5b3-d3a7de1331ae,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:start and
  process.name:defaults and process.args:
    (com.apple.Safari and write and not
      (
      UniversalSearchEnabled or
      SuppressSearchSuggestions or
      WebKitTabToLinksPreferenceKey or
      ShowFullURLInSmartSearchField or
      com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks
      )
    )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
90,2021/01/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of a suspicious zip file prepended with special characters. Sandboxed Microsoft Office
applications on macOS are allowed to write files that start with special characters, which can be combined with an
AutoStart location to achieve sandbox evasion.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Microsoft Office Sandbox Evasion,"['https://i.blackhat.com/USA-20/Wednesday/us-20-Wardle-Office-Drama-On-macOS.pdf', 'https://www.mdsec.co.uk/2018/08/escaping-the-sandbox-microsoft-office-on-macos/', 'https://desi-jarvis.medium.com/office365-macos-sandbox-escape-fcce4fa4123c']",73,d22a85c6-d2ad-4cc4-bf7b-54787473669a,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:file and not event.type:deletion and file.name:~$*.zip and host.os.type:macos
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1497', 'name': 'Virtualization/Sandbox Evasion', 'reference': 'https://attack.mitre.org/techniques/T1497/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
91,2020/01/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the use of the mount_apfs command to mount the entire file system through Apple File System (APFS) snapshots
as read-only and with the noowners flag set. This action enables the adversary to access almost any file in the file
system, including all user data and files protected by Apple’s privacy framework (TCC).
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,TCC Bypass via Mounted APFS Snapshot Access,['https://theevilbit.github.io/posts/cve_2020_9771/'],73,b00bcd89-000c-4425-b94c-716ef67762f6,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion', 'CVE_2020_9771']",event.ingested,query,"event.category : process and event.type : (start or process_started) and process.name : mount_apfs and
  process.args : (/System/Volumes/Data and noowners)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1006', 'name': 'Direct Volume Access', 'reference': 'https://attack.mitre.org/techniques/T1006/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
92,2020/01/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Identifies attempts to unload the Elastic Endpoint Security kernel extension via the kextunload command.,,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Attempt to Unload Elastic Endpoint Security Kernel Extension,,73,70fa1af4-27fd-4f26-bd03-50b6af6b9e24,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:kextunload and process.args:(""/System/Library/Extensions/EndpointSecurity.kext"" or ""EndpointSecurity.kext"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.006', 'name': 'Kernel Modules and Extensions', 'reference': 'https://attack.mitre.org/techniques/T1547/006/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
93,2021/01/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of macOS built-in commands related to account or group enumeration. Adversaries may use
account and group information to orient themselves before deciding how to act.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Enumeration of Users or Groups via Built-in Commands,,21,6e9b351e-a531-4bdc-b73e-7034d6eed7ff,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Discovery']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  (
    process.name : (""ldapsearch"", ""dsmemberutil"") or
    (process.name : ""dscl"" and
      process.args : (""read"", ""-read"", ""list"", ""-list"", ""ls"", ""search"", ""-search"") and
      process.args : (""/Active Directory/*"", ""/Users*"", ""/Groups*""))
	) and
  not process.parent.executable : (""/Applications/NoMAD.app/Contents/MacOS/NoMAD"",
     ""/Applications/ZoomPresence.app/Contents/MacOS/ZoomPresence"",
     ""/Applications/Sourcetree.app/Contents/MacOS/Sourcetree"",
     ""/Library/Application Support/JAMF/Jamf.app/Contents/MacOS/JamfDaemon.app/Contents/MacOS/JamfDaemon"",
     ""/Applications/Jamf Connect.app/Contents/MacOS/Jamf Connect"",
     ""/usr/local/jamf/bin/jamf"",
     ""/Library/Application Support/AirWatch/hubd"",
     ""/opt/jc/bin/jumpcloud-agent"",
     ""/Applications/ESET Endpoint Antivirus.app/Contents/MacOS/esets_daemon"",
     ""/Applications/ESET Endpoint Security.app/Contents/MacOS/esets_daemon"",
     ""/Library/PrivilegedHelperTools/com.fortinet.forticlient.uninstall_helper""
    )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1069', 'name': 'Permission Groups Discovery', 'reference': 'https://attack.mitre.org/techniques/T1069/'}, {'id': 'T1087', 'name': 'Account Discovery', 'reference': 'https://attack.mitre.org/techniques/T1087/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
94,2020/01/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to execute a child process from within the context of an Electron application using the
child_process Node.js module. Adversaries may abuse this technique to inherit permissions from parent processes.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Execution via Electron Child Process Node.js Module,"['https://www.matthewslipper.com/2019/09/22/everything-you-wanted-electron-child-process.html', 'https://www.trustedsec.com/blog/macos-injection-via-third-party-frameworks/', 'https://nodejs.org/api/child_process.html']",47,35330ba2-c859-4c98-8b7f-c19159ea0e58,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Defense Evasion', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.args:(""-e"" and const*require*child_process*)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
95,2020/12/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a suspicious browser child process. Adversaries may gain access to a system through a user
visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted
for exploitation.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious Browser Child Process,"['https://objective-see.com/blog/blog_0x43.html', 'https://fr.slideshare.net/codeblue_jp/cb19-recent-apt-attack-on-crypto-exchange-employees-by-heungsoo-kang']",73,080bc66a-5d56-4d1f-8071-817671716db9,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Initial Access', 'Execution']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.parent.name : (""Google Chrome"", ""Google Chrome Helper*"", ""firefox"", ""Opera"", ""Safari"", ""com.apple.WebKit.WebContent"", ""Microsoft Edge"") and
  process.name : (""sh"", ""bash"", ""dash"", ""ksh"", ""tcsh"", ""zsh"", ""curl"", ""wget"", ""python*"", ""perl*"", ""php*"", ""osascript"", ""pwsh"") and
  process.command_line != null and
  not process.command_line : ""*/Library/Application Support/Microsoft/MAU*/Microsoft AutoUpdate.app/Contents/MacOS/msupdate*"" and
  not process.args :
    (
      ""hw.model"",
      ""IOPlatformExpertDevice"",
      ""/Volumes/Google Chrome/Google Chrome.app/Contents/Frameworks/*/Resources/install.sh"",
      ""--defaults-torrc"",
      ""*Chrome.app"",
      ""Framework.framework/Versions/*/Resources/keystone_promote_preflight.sh"",
      ""/Users/*/Library/Application Support/Google/Chrome/recovery/*/ChromeRecovery"",
      ""$DISPLAY"",
      ""*GIO_LAUNCHED_DESKTOP_FILE_PID=$$*"",
      ""/opt/homebrew/*"",
      ""/usr/local/*brew*""
    )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1203', 'name': 'Exploitation for Client Execution', 'reference': 'https://attack.mitre.org/techniques/T1203/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1189', 'name': 'Drive-by Compromise', 'reference': 'https://attack.mitre.org/techniques/T1189/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
96,2021/02/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects the execution of a MacOS installer package with an abnormal child process (e.g bash) followed immediately by a network connection via a suspicious process (e.g curl).
Threat actors will build and distribute malicious MacOS installer packages, which have a .pkg extension, many times imitating valid software in order to persuade and infect their victims often using the package files (e.g pre/post install scripts etc.) to download additional tools or malicious software.
If this rule fires it should indicate the installation of a malicious or suspicious package.
","['    Custom organization-specific macOS packages that use .pkg files to run cURL could trigger this rule. If known\n    behavior is causing false positives, it can be excluded from the rule.\n    ']",['logs-endpoint.events.*'],eql,Elastic License v2,MacOS Installer Package Spawns Network Event,"['https://redcanary.com/blog/clipping-silver-sparrows-wings', 'https://posts.specterops.io/introducing-mystikal-4fbd2f7ae520', 'https://github.com/D00MFist/Mystikal']",47,99239e7d-b0d4-46e3-8609-acafcf99f68c,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Execution', 'Command and Control']",,eql,"sequence by host.id, user.id with maxspan=30s
[process where event.type == ""start"" and event.action == ""exec"" and process.parent.name : (""installer"", ""package_script_service"") and process.name : (""bash"", ""sh"", ""zsh"", ""python"", ""osascript"", ""tclsh*"")]
[network where event.type == ""start"" and process.name : (""curl"", ""osascript"", ""wget"", ""python"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.007', 'name': 'JavaScript', 'reference': 'https://attack.mitre.org/techniques/T1059/007/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'subtechnique': [{'id': 'T1071.001', 'name': 'Web Protocols', 'reference': 'https://attack.mitre.org/techniques/T1071/001/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
97,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects execution via the Apple script interpreter (osascript) followed by a network connection from the same process
within a short time period. Adversaries may use malicious scripts for execution and command and control.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Apple Script Execution followed by Network Connection,"['https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/index.html', 'https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml']",47,47f76567-d58a-4fed-b32b-21f571e28910,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Command and Control', 'Execution']",,eql,"sequence by host.id, process.entity_id with maxspan=30s
 [process where event.type == ""start"" and process.name == ""osascript""]
 [network where event.type != ""end"" and process.name == ""osascript"" and destination.ip != ""::1"" and
  not cidrmatch(destination.ip,
    ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"", ""192.0.0.0/29"", ""192.0.0.8/32"",
    ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"", ""192.0.2.0/24"", ""192.31.196.0/24"",
    ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"", ""192.175.48.0/24"",
    ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"", ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.002', 'name': 'AppleScript', 'reference': 'https://attack.mitre.org/techniques/T1059/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
98,2020/12/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of the Automator Workflows process followed by a network connection from it's XPC service.
Adversaries may drop a custom workflow template that hosts malicious JavaScript for Automation (JXA) code as an
alternative to using osascript.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Suspicious Automator Workflows Execution,['https://posts.specterops.io/persistent-jxa-66e1c3cd1cf5'],47,5d9f8cfc-0d03-443e-a167-2b0597ce0965,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Execution']",,eql,"sequence by host.id with maxspan=30s
 [process where event.type in (""start"", ""process_started"") and process.name == ""automator""]
 [network where process.name:""com.apple.automator.runner""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
99,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of the shell process (sh) via scripting (JXA or AppleScript). Adversaries may use the
doShellScript functionality in JXA or do shell script in AppleScript to execute system commands.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Shell Execution via Apple Scripting,"['https://developer.apple.com/library/archive/technotes/tn2065/_index.html', 'https://objectivebythesea.com/v2/talks/OBTS_v2_Thomas.pdf']",47,d461fac0-43e8-49e2-85ea-3a58fe120b4f,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Execution']",,eql,"sequence by host.id with maxspan=5s
 [process where event.type in (""start"", ""process_started"", ""info"") and process.name == ""osascript""] by process.pid
 [process where event.type in (""start"", ""process_started"") and process.name == ""sh"" and process.args == ""-c""] by process.parent.pid
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
100,2021/01/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, and
Excel). These child processes are often launched during exploitation of Office applications or by documents with
malicious macros.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious macOS MS Office Child Process,['https://blog.malwarebytes.com/cybercrime/2017/02/microsoft-office-macro-malware-targets-macs/'],47,66da12b1-ac83-40eb-814c-07ed1d82b7b9,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Initial Access']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
 process.parent.name:(""Microsoft Word"", ""Microsoft PowerPoint"", ""Microsoft Excel"") and
 process.name:
 (
   ""bash"",
   ""dash"",
   ""sh"",
   ""tcsh"",
   ""csh"",
   ""zsh"",
   ""ksh"",
   ""fish"",
   ""python*"",
   ""perl*"",
   ""php*"",
   ""osascript"",
   ""pwsh"",
   ""curl"",
   ""wget"",
   ""cp"",
   ""mv"",
   ""base64"",
   ""launchctl""
  ) and
  /* noisy false positives related to product version discovery and office errors reporting */
  not process.args:
    (
      ""ProductVersion"",
      ""hw.model"",
      ""ioreg"",
      ""ProductName"",
      ""ProductUserVisibleVersion"",
      ""ProductBuildVersion"",
      ""/Library/Application Support/Microsoft/MERP*/Microsoft Error Reporting.app/Contents/MacOS/Microsoft Error Reporting""
    )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
101,2020/01/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies use of Bifrost, a known macOS Kerberos pentesting tool, which can be used to dump cached Kerberos tickets or
attempt unauthorized authentication techniques such as pass-the-ticket/hash and kerberoasting.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Kerberos Attack via Bifrost,['https://github.com/its-a-feature/bifrost'],73,16904215-2c95-4ac8-bf5c-12354e047192,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Credential Access', 'Lateral Movement']",event.ingested,query,"event.category:process and event.type:start and
 process.args:(""-action"" and (""-kerberoast"" or askhash or asktgs or asktgt or s4u or (""-ticket"" and ptt) or (dump and (tickets or keytab))))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1550', 'name': 'Use Alternate Authentication Material', 'reference': 'https://attack.mitre.org/techniques/T1550/', 'subtechnique': [{'id': 'T1550.003', 'name': 'Pass the Ticket', 'reference': 'https://attack.mitre.org/techniques/T1550/003/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/', 'subtechnique': [{'name': 'Kerberoasting', 'id': 'T1558.003', 'reference': 'https://attack.mitre.org/techniques/T1558/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
102,2021/01/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of macOS built-in commands to mount a Server Message Block (SMB) network share. Adversaries may
use valid accounts to interact with a remote network share using SMB.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Attempt to Mount SMB Share via Command Line,"['https://www.freebsd.org/cgi/man.cgi?mount_smbfs', 'https://ss64.com/osx/mount.html']",21,661545b4-1a90-4f45-85ce-2ebd7c6a15d0,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  (
    process.name : ""mount_smbfs"" or
    (process.name : ""open"" and process.args : ""smb://*"") or
    (process.name : ""mount"" and process.args : ""smbfs"") or
    (process.name : ""osascript"" and process.command_line : ""osascript*mount volume*smb://*"")
  ) and
  not process.parent.executable : ""/Applications/Google Drive.app/Contents/MacOS/Google Drive""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
103,2020/08/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Detects use of the systemsetup command to enable remote SSH Login.,,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Remote SSH Login Enabled via systemsetup Command,"['https://documents.trendmicro.com/assets/pdf/XCSSET_Technical_Brief.pdf', 'https://ss64.com/osx/systemsetup.html', 'https://support.apple.com/guide/remote-desktop/about-systemsetup-apd95406b8d/mac']",47,5ae4e6f8-d1bf-40fa-96ba-e29645e1e4dc,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Lateral Movement']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:systemsetup and
 process.args:(""-setremotelogin"" and on) and
 not process.parent.executable : /usr/local/jamf/bin/jamf
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.004', 'name': 'SSH', 'reference': 'https://attack.mitre.org/techniques/T1021/004/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
104,2020/01/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of macOS built-in commands to connect to an existing Virtual Private Network (VPN).
Adversaries may use VPN connections to laterally move and control remote systems on a network.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Virtual Private Network Connection Attempt,"['https://github.com/rapid7/metasploit-framework/blob/master/modules/post/osx/manage/vpn.rb', 'https://www.unix.com/man-page/osx/8/networksetup/', 'https://superuser.com/questions/358513/start-configured-vpn-from-command-line-osx']",21,15dacaa0-5b90-466b-acab-63435a59701a,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  (
    (process.name : ""networksetup"" and process.args : ""-connectpppoeservice"") or
    (process.name : ""scutil"" and process.args : ""--nc"" and process.args : ""start"") or
    (process.name : ""osascript"" and process.command_line : ""osascript*set VPN to service*"")
  )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
105,2020/01/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to create a local account that will be hidden from the macOS logon window. This may indicate an
attempt to evade user attention while maintaining persistence using a separate local account.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Hidden Local User Account Creation,['https://support.apple.com/en-us/HT203998'],47,41b638a1-8ab6-4f8e-86d9-466317ef2db5,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:dscl and process.args:(IsHidden and create and (true or 1 or yes))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/', 'subtechnique': [{'id': 'T1078.003', 'name': 'Local Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
106,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An adversary can establish persistence by installing a new launch agent that executes at login by using launchd or
launchctl to load a plist into the appropriate directories.
",['Trusted applications persisting via LaunchAgent'],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Launch Agent Creation or Modification and Immediate Loading,['https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html'],21,082e3f8c-6f80-485c-91eb-5b112cb79b28,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",,eql,"sequence by host.id with maxspan=1m
 [file where event.type != ""deletion"" and
  file.path : (""/System/Library/LaunchAgents/*"", ""/Library/LaunchAgents/*"", ""/Users/*/Library/LaunchAgents/*"")
 ]
 [process where event.type in (""start"", ""process_started"") and process.name == ""launchctl"" and process.args == ""load""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.001', 'name': 'Launch Agent', 'reference': 'https://attack.mitre.org/techniques/T1543/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
107,2020/01/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of osascript to create a hidden login item. This may indicate an attempt to persist a malicious
program while concealing its presence.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Creation of Hidden Login Item via Apple Script,,47,f24bcae1-8980-4b30-b5dd-f851b055c9e7,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence', 'Execution']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and process.name : ""osascript"" and
 process.command_line : ""osascript*login item*hidden:true*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.011', 'name': 'Plist Modification', 'reference': 'https://attack.mitre.org/techniques/T1547/011/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.002', 'name': 'AppleScript', 'reference': 'https://attack.mitre.org/techniques/T1059/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
108,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Indicates the creation or modification of a launch daemon, which adversaries may use to repeatedly execute malicious
payloads as part of persistence.
",['Trusted applications persisting via LaunchDaemons'],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,LaunchDaemon Creation or Modification and Immediate Loading,['https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html'],21,9d19ece6-c20e-481a-90c5-ccca596537de,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",,eql,"sequence by host.id with maxspan=1m
 [file where event.type != ""deletion"" and file.path : (""/System/Library/LaunchDaemons/*"", ""/Library/LaunchDaemons/*"")]
 [process where event.type in (""start"", ""process_started"") and process.name == ""launchctl"" and process.args == ""load""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
109,2021/01/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Authorization plugins are used to extend the authorization services API and implement mechanisms that are not natively
supported by the OS, such as multi-factor authentication with third party software. Adversaries may abuse this feature
to persist and/or collect clear text credentials as they traverse the registered plugins during user logon.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Authorization Plugin Modification,"['https://developer.apple.com/documentation/security/authorization_plug-ins', 'https://www.xorrior.com/persistent-credential-theft/']",47,e6c98d38-633d-4b3e-9387-42112cd5ac10,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:file and not event.type:deletion and
  file.path:(/Library/Security/SecurityAgentPlugins/* and
  not /Library/Security/SecurityAgentPlugins/TeamViewerAuthPlugin.bundle/*) and
  not process.name:shove and process.code_signature.trusted:true
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.002', 'name': 'Authentication Package', 'reference': 'https://attack.mitre.org/techniques/T1547/002/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
110,2022/04/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to create or modify a crontab via a process that is not crontab (i.e python, osascript, etc.). This
activity should not be highly prevalent and could indicate the use of cron as a persistence mechanism by a threat actor.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious CronTab Creation or Modification,"['https://taomm.org/PDFs/vol1/CH%200x02%20Persistence.pdf', 'https://theevilbit.github.io/beyond/beyond_0004/']",47,530178da-92ea-43ce-94c2-8877a826783d,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and process.name != null and
  file.path : ""/private/var/at/tabs/*"" and not process.executable == ""/usr/bin/crontab""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.003', 'name': 'Cron', 'reference': 'https://attack.mitre.org/techniques/T1053/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
111,2020/01/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a launchd child process with a hidden file. An adversary can establish persistence by
installing a new logon item, launch agent, or daemon that executes upon login.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Suspicious Hidden Child Process of Launchd,"['https://objective-see.com/blog/blog_0x61.html', 'https://www.intezer.com/blog/research/operation-electrorat-attacker-creates-fake-companies-to-drain-your-crypto-wallets/', 'https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html']",47,083fa162-e790-4d85-9aeb-4fea04188adb,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:.* and process.parent.executable:/sbin/launchd
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.001', 'name': 'Launch Agent', 'reference': 'https://attack.mitre.org/techniques/T1543/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.001', 'name': 'Hidden Files and Directories', 'reference': 'https://attack.mitre.org/techniques/T1564/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
112,2021/01/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation or modification of a DirectoryService PlugIns (dsplug) file. The DirectoryService daemon launches
on each system boot and automatically reloads after crash. It scans and executes bundles that are located in the
DirectoryServices PlugIns folder and can be abused by adversaries to maintain persistence.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Persistence via DirectoryService Plugin Modification,['https://blog.chichou.me/2019/11/21/two-macos-persistence-tricks-abusing-plugins/'],47,89fa6cb7-6b53-4de2-b604-648488841ab8,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:file and not event.type:deletion and
  file.path:/Library/DirectoryServices/PlugIns/*.dsplug
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
113,2020/12/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An adversary can establish persistence by modifying an existing macOS dock property list in order to execute a malicious
application instead of the intended one when invoked.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Persistence via Docker Shortcut Modification,['    https://github.com/specterops/presentations/raw/master/Leo%20Pitt/Hey_Im_Still_in_Here_Modern_macOS_Persistence_SO-CON2020.pdf\n    '],47,c81cefcb-82b9-4408-a533-3c3df549e62d,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category : file and event.action : modification and
 file.path : /Users/*/Library/Preferences/com.apple.dock.plist and
 not process.name : (xpcproxy or cfprefsd or plutil or jamf or PlistBuddy or InstallerRemotePluginService)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
114,2021/01/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation or modification of the Event Monitor Daemon (emond) rules. Adversaries may abuse this service by
writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Emond Rules Creation or Modification,"['https://www.xorrior.com/emond-persistence/', 'https://www.sentinelone.com/blog/how-malware-persists-on-macos/']",47,a6bf4dd4-743e-4da8-8c03-3ebd753a6c90,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
 file.path : (""/private/etc/emond.d/rules/*.plist"", ""/etc/emon.d/rules/*.plist"", ""/private/var/db/emondClients/*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.014', 'name': 'Emond', 'reference': 'https://attack.mitre.org/techniques/T1546/014/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
115,2021/01/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a suspicious child process of the Event Monitor Daemon (emond). Adversaries may abuse this
service by writing a rule to execute commands when a defined event occurs, such as system start up or user
authentication.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious Emond Child Process,['https://www.xorrior.com/emond-persistence/'],47,3e3d15c6-1509-479a-b125-21718372157e,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
 process.parent.name : ""emond"" and
 process.name : (
   ""bash"",
   ""dash"",
   ""sh"",
   ""tcsh"",
   ""csh"",
   ""zsh"",
   ""ksh"",
   ""fish"",
   ""Python"",
   ""python*"",
   ""perl*"",
   ""php*"",
   ""osascript"",
   ""pwsh"",
   ""curl"",
   ""wget"",
   ""cp"",
   ""mv"",
   ""touch"",
   ""echo"",
   ""base64"",
   ""launchctl"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.014', 'name': 'Emond', 'reference': 'https://attack.mitre.org/techniques/T1546/014/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
116,2020/01/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to enable the root account using the dsenableroot command. This command may be abused by adversaries
for persistence, as the root account is disabled by default.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Attempt to Enable the Root Account,['https://ss64.com/osx/dsenableroot.html'],47,cc2fd2d0-ba3a-4939-b87f-2901764ed036,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:dsenableroot and not process.args:""-d""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/', 'subtechnique': [{'id': 'T1078.003', 'name': 'Local Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
117,2020/01/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of a hidden launch agent or daemon. An adversary may establish persistence by installing a new
launch agent or daemon which executes at login.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Creation of Hidden Launch Agent or Daemon,['https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html'],47,092b068f-84ac-485d-8a55-7dd9e006715f,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence', 'Defense Evasion']",event.ingested,eql,"file where event.type != ""deletion"" and
  file.path :
  (
    ""/System/Library/LaunchAgents/.*.plist"",
    ""/Library/LaunchAgents/.*.plist"",
    ""/Users/*/Library/LaunchAgents/.*.plist"",
    ""/System/Library/LaunchDaemons/.*.plist"",
    ""/Library/LaunchDaemons/.*.plist""
  )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.001', 'name': 'Launch Agent', 'reference': 'https://attack.mitre.org/techniques/T1543/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.001', 'name': 'Hidden Files and Directories', 'reference': 'https://attack.mitre.org/techniques/T1564/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
118,2020/12/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Finder Sync plugins enable users to extend Finder’s functionality by modifying the user interface. Adversaries may abuse
this feature by adding a rogue Finder Plugin to repeatedly execute malicious payloads for persistence.
",['Trusted Finder Sync Plugins'],"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Finder Sync Plugin Registered and Enabled,['    https://github.com/specterops/presentations/raw/master/Leo%20Pitt/Hey_Im_Still_in_Here_Modern_macOS_Persistence_SO-CON2020.pdf\n    '],47,37f638ea-909d-4f94-9248-edd21e4a9906,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and process.name : ""pluginkit"" and
  process.args : ""-e"" and process.args : ""use"" and process.args : ""-i"" and
  not process.args :
  (
    ""com.google.GoogleDrive.FinderSyncAPIExtension"",
    ""com.google.drivefs.findersync"",
    ""com.boxcryptor.osx.Rednif"",
    ""com.adobe.accmac.ACCFinderSync"",
    ""com.microsoft.OneDrive.FinderSync"",
    ""com.insynchq.Insync.Insync-Finder-Integration"",
    ""com.box.desktop.findersyncext""
  ) and
  not process.parent.executable : (
    ""/Library/Application Support/IDriveforMac/IDriveHelperTools/FinderPluginApp.app/Contents/MacOS/FinderPluginApp""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
119,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects modification of a Folder Action script. A Folder Action script is executed when the folder to which it is attached has items added or removed, or when its
window is opened, closed, moved, or resized. Adversaries may abuse this feature to establish persistence by utilizing a
malicious script.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Persistence via Folder Action Script,['https://posts.specterops.io/folder-actions-for-persistence-on-macos-8923f222343d'],47,c292fa52-4115-408a-b897-e14f684b3cb7,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Execution', 'Persistence']",,eql,"sequence by host.id with maxspan=5s
 [process where event.type in (""start"", ""process_started"", ""info"") and process.name == ""com.apple.foundation.UserScriptService""] by process.pid
 [process where event.type in (""start"", ""process_started"") and process.name in (""osascript"", ""python"", ""tcl"", ""node"", ""perl"", ""ruby"", ""php"", ""bash"", ""csh"", ""zsh"", ""sh"") and
  not process.args : ""/Users/*/Library/Application Support/iTerm2/Scripts/AutoLaunch/*.scpt""
 ] by process.parent.pid
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1037', 'name': 'Boot or Logon Initialization Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
120,2021/01/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation or modification of the login window property list (plist). Adversaries may modify plist files to
run a program during system boot or user login for persistence.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Persistence via Login Hook,['https://github.com/D00MFist/PersistentJXA/blob/master/LoginScript.js'],47,ac412404-57a5-476f-858f-4e8fbb4f48d8,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:""file"" and not event.type:""deletion"" and
 file.name:""com.apple.loginwindow.plist"" and
 process.name:(* and not (systemmigrationd or DesktopServicesHelper or diskmanagementd or rsync or launchd or cfprefsd or xpcproxy or ManagedClient or MCXCompositor or backupd or ""iMazing Profile Editor""
))
",now-9m,,"## Triage and analysis

Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user reboots their machine. This can be abused to establish or maintain persistence on a compromised system.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.011', 'name': 'Plist Modification', 'reference': 'https://attack.mitre.org/techniques/T1547/011/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
121,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies use of the Defaults command to install a login or logoff hook in MacOS. An adversary may abuse this
capability to establish persistence in an environment by inserting code to be executed at login or logout.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Persistence via Login or Logout Hook,"['https://www.virusbulletin.com/uploads/pdf/conference_slides/2014/Wardle-VB2014.pdf', 'https://www.manpagez.com/man/1/defaults/']",47,5d0265bf-dea9-41a9-92ad-48a8dcd05080,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
 process.name == ""defaults"" and process.args == ""write"" and process.args in (""LoginHook"", ""LogoutHook"") and
 not process.args :
       (
         ""Support/JAMF/ManagementFrameworkScripts/logouthook.sh"",
         ""Support/JAMF/ManagementFrameworkScripts/loginhook.sh"",
         ""/Library/Application Support/JAMF/ManagementFrameworkScripts/logouthook.sh"",
         ""/Library/Application Support/JAMF/ManagementFrameworkScripts/loginhook.sh""
       )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1037', 'name': 'Boot or Logon Initialization Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
122,2020/12/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries may create or modify the Sublime application plugins or scripts to execute a malicious payload each time the
Sublime application is started.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Sublime Plugin or Application Script Modification,['https://posts.specterops.io/persistent-jxa-66e1c3cd1cf5'],21,88817a33-60d3-411f-ba79-7c905d865b2a,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type in (""change"", ""creation"") and file.extension : ""py"" and
  file.path :
    (
      ""/Users/*/Library/Application Support/Sublime Text*/Packages/*.py"",
      ""/Applications/Sublime Text.app/Contents/MacOS/sublime.py""
    ) and
  not process.executable :
    (
      ""/Applications/Sublime Text*.app/Contents/*"",
      ""/usr/local/Cellar/git/*/bin/git"",
      ""/Library/Developer/CommandLineTools/usr/bin/git"",
      ""/usr/libexec/xpcproxy"",
      ""/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/Resources/DesktopServicesHelper""
    )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1554', 'name': 'Compromise Client Software Binary', 'reference': 'https://attack.mitre.org/techniques/T1554/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
123,2021/01/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation or modification of the default configuration for periodic tasks. Adversaries may abuse periodic
tasks to execute malicious code or maintain persistence.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Persistence via Periodic Tasks,"['https://opensource.apple.com/source/crontabs/crontabs-13/private/etc/defaults/periodic.conf.auto.html', 'https://www.oreilly.com/library/view/mac-os-x/0596003706/re328.html', 'https://github.com/D00MFist/PersistentJXA/blob/master/PeriodicPersist.js']",21,48ec9452-e1fd-4513-a376-10a1a26d2c83,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:""file"" and not event.type:""deletion"" and
 file.path:(/private/etc/periodic/* or /private/etc/defaults/periodic.conf or /private/etc/periodic.conf)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.003', 'name': 'Cron', 'reference': 'https://attack.mitre.org/techniques/T1053/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
124,2021/10/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies when a child process is spawned by the screensaver engine process, which is consistent with an attacker's
malicious payload being executed after the screensaver activated on the endpoint. An adversary can maintain persistence
on a macOS endpoint by creating a malicious screensaver (.saver) file and configuring the screensaver plist file to
execute code each time the screensaver is activated.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Unexpected Child Process of macOS Screensaver Engine,"['https://posts.specterops.io/saving-your-access-d562bf5bf90b', 'https://github.com/D00MFist/PersistentJXA']",47,48d7f54d-c29e-4430-93a9-9db6b5892270,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and process.parent.name == ""ScreenSaverEngine""
",now-9m,,"## Triage and analysis

- Analyze the descendant processes of the ScreenSaverEngine process for malicious code and suspicious behavior such
as a download of a payload from a server.
- Review the installed and activated screensaver on the host. Triage the screensaver (.saver) file that was triggered to
identify whether the file is malicious or not.


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.002', 'name': 'Screensaver', 'reference': 'https://attack.mitre.org/techniques/T1546/002/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
125,2021/10/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies when a screensaver plist file is modified by an unexpected process. An adversary can maintain persistence on
a macOS endpoint by creating a malicious screensaver (.saver) file and configuring the screensaver plist file to execute
code each time the screensaver is activated.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Screensaver Plist File Modified by Unexpected Process,"['https://posts.specterops.io/saving-your-access-d562bf5bf90b', 'https://github.com/D00MFist/PersistentJXA']",47,e6e8912f-283f-4d0d-8442-e0dcaf49944b,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
  file.name: ""com.apple.screensaver.*.plist"" and
  file.path : (
    ""/Users/*/Library/Preferences/ByHost/*"",
    ""/Library/Managed Preferences/*"",
    ""/System/Library/Preferences/*""
    ) and
  /* Filter OS processes modifying screensaver plist files */
  not process.executable : (
    ""/usr/sbin/cfprefsd"",
    ""/usr/libexec/xpcproxy"",
    ""/System/Library/CoreServices/ManagedClient.app/Contents/Resources/MCXCompositor"",
    ""/System/Library/CoreServices/ManagedClient.app/Contents/MacOS/ManagedClient""
    )
",now-9m,,"## Triage and analysis

- Analyze the plist file modification event to identify whether the change was expected or not
- Investigate the process that modified the plist file for malicious code or other suspicious behavior
- Identify if any suspicious or known malicious screensaver (.saver) files were recently written to or modified on the host

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
126,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious modifications of the calendar file by an unusual process. Adversaries may create a custom calendar
notification procedure to execute a malicious program at a recurring interval to establish persistence.
",['Trusted applications for managing calendars and reminders.'],"['logs-endpoint.events.*', 'auditbeat-*']",kuery,Elastic License v2,Suspicious Calendar File Modification,"['https://labs.f-secure.com/blog/operationalising-calendar-alerts-persistence-on-macos', 'https://github.com/FSecureLABS/CalendarPersist', 'https://github.com/D00MFist/PersistentJXA/blob/master/CalendarPersist.js']",47,cb71aa62-55c8-42f0-b0dd-afb0bb0b1f51,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:file and event.action:modification and
  file.path:/Users/*/Library/Calendars/*.calendar/Events/*.ics and
  process.executable:
  (* and not
    (
      /System/Library/* or
      /System/Applications/Calendar.app/Contents/MacOS/* or
      /System/Applications/Mail.app/Contents/MacOS/Mail or
      /usr/libexec/xpcproxy or
      /sbin/launchd or
      /Applications/*
    )
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
127,2021/01/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies modifications to the Atom desktop text editor Init File. Adversaries may add malicious JavaScript code to the
init.coffee file that will be executed upon the Atom application opening.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Persistence via Atom Init Script Modification,"['https://github.com/D00MFist/PersistentJXA/blob/master/AtomPersist.js', 'https://flight-manual.atom.io/hacking-atom/sections/the-init-file/']",21,b4449455-f986-4b5a-82ed-e36b129331f7,low,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:""file"" and not event.type:""deletion"" and
 file.path:/Users/*/.atom/init.coffee and not process.name:(Atom or xpcproxy) and not user.name:root
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1037', 'name': 'Boot or Logon Initialization Scripts', 'reference': 'https://attack.mitre.org/techniques/T1037/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
128,2020/12/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies execution of the Apple script interpreter (osascript) without a password prompt and with administrator
privileges.
",,"['auditbeat-*', 'logs-endpoint.events.*']",eql,Elastic License v2,Apple Scripting Execution with Administrator Privileges,['https://discussions.apple.com/thread/2266150'],47,827f8d8f-4117-4ae4-b551-f56d54b9da6b,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Execution', 'Privilege Escalation']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and process.name : ""osascript"" and
  process.command_line : ""osascript*with administrator privileges""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
129,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies execution of the security_authtrampoline process via a scripting interpreter. This occurs when programs use
AuthorizationExecute-WithPrivileges from the Security.framework to run another program with root privileges. It should
not be run by itself, as this is a sign of execution with explicit logon credentials.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Execution with Explicit Credentials via Scripting,"['https://objectivebythesea.com/v2/talks/OBTS_v2_Thomas.pdf', 'https://www.manpagez.com/man/8/security_authtrampoline/']",47,f0eb70e9-71e9-40cd-813f-bf8e8c812cb1,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Execution', 'Privilege Escalation']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:""security_authtrampoline"" and
 process.parent.name:(osascript or com.apple.automator.runner or sh or bash or dash or zsh or python* or Python or perl* or php* or ruby or pwsh)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}, {'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.004', 'name': 'Elevated Execution with Prompt', 'reference': 'https://attack.mitre.org/techniques/T1548/004/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
130,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects attempts to exploit privilege escalation vulnerabilities related to the Adobe Acrobat Reader
PrivilegedHelperTool responsible for installing updates. For more information, refer to CVE-2020-9615, CVE-2020-9614 and
CVE-2020-9613 and verify that the impacted system is patched.
",['Trusted system or Adobe Acrobat Related processes.'],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Suspicious Child Process of Adobe Acrobat Reader Update Service,['https://rekken.github.io/2020/05/14/Security-Flaws-in-Adobe-Acrobat-Reader-Allow-Malicious-Program-to-Gain-Root-on-macOS-Silently/'],73,f85ce03f-d8a8-4c83-acdc-5c8cd0592be7,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Privilege Escalation', 'CVE-2020-9615', 'CVE-2020-9614', 'CVE-2020-9613']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.parent.name:com.adobe.ARMDC.SMJobBlessHelper and
  user.name:root and
  not process.executable: (/Library/PrivilegedHelperTools/com.adobe.ARMDC.SMJobBlessHelper or
                           /usr/bin/codesign or
                           /private/var/folders/zz/*/T/download/ARMDCHammer or
                           /usr/sbin/pkgutil or
                           /usr/bin/shasum or
                           /usr/bin/perl* or
                           /usr/sbin/spctl or
                           /usr/sbin/installer or
                           /usr/bin/csrutil)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
131,2020/01/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to add an account to the admin group via the command line. This could be an indication of privilege
escalation activity.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Admin Group Account Addition,['https://managingosx.wordpress.com/2010/01/14/add-a-user-to-the-admin-group-via-command-line-3-0/'],47,565c2b44-7a21-4818-955f-8d4737967d2e,medium,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
 process.name:(dscl or dseditgroup) and process.args:((""/Groups/admin"" or admin) and (""-a"" or ""-append""))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/', 'subtechnique': [{'id': 'T1078.003', 'name': 'Local Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
132,2021/01/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies modifications to the root crontab file. Adversaries may overwrite this file to gain code execution with root
privileges by exploiting privileged file write or move related vulnerabilities.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Privilege Escalation via Root Crontab File Modification,"['https://phoenhex.re/2017-06-09/pwn2own-diskarbitrationd-privesc', 'https://www.exploit-db.com/exploits/42146']",73,0ff84c42-873d-41a2-a4ed-08d74d352d01,high,"['Elastic', 'Host', 'macOS', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:file and not event.type:deletion and
 file.path:/private/var/at/tabs/root and not process.executable:/usr/bin/crontab
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.003', 'name': 'Cron', 'reference': 'https://attack.mitre.org/techniques/T1053/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
133,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected unusually large numbers of DNS queries for a single top-level DNS domain, which is often
used for DNS tunneling. DNS tunneling can be used for command-and-control, persistence, or data exfiltration activity.
For example, dnscat tends to generate many DNS questions for a top-level domain as it uses the DNS protocol to tunnel
data.
","['    DNS domains that use large numbers of child domains, such as software or content distribution networks, can trigger\n    this alert and such parent domains can be excluded.\n    ']",,,Elastic License v2,DNS Tunneling,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,91f02f01-969f-4167-8f66-07827ac3bdd9,low,"['Elastic', 'Network', 'Threat Detection', 'ML', 'Command and Control']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1572', 'name': 'Protocol Tunneling', 'reference': 'https://attack.mitre.org/techniques/T1572/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,15m,,,,,,,50.0,packetbeat_dns_tunneling,,,,,,,
134,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a rare and unusual DNS query that indicate network activity with unusual DNS domains.
This can be due to initial access, persistence, command-and-control, or exfiltration activity. For example, when a user
clicks on a link in a phishing email or opens a malicious document, a request may be sent to download and run a payload
from an uncommon domain. When malware is already running, it may send requests to an uncommon DNS domain the malware
uses for command-and-control communication.
","['    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this\n    alert. Network activity that occurs rarely, in small quantities, can trigger this alert. Possible examples are\n    browsing technical support or vendor networks sparsely. A user who visits a new or unique web destination may\n    trigger this alert.\n    ']",,,Elastic License v2,Unusual DNS Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,746edc4c-c54c-49c6-97a1-651223819448,low,"['Elastic', 'Network', 'Threat Detection', 'ML', 'Command and Control']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'subtechnique': [{'id': 'T1071.004', 'name': 'DNS', 'reference': 'https://attack.mitre.org/techniques/T1071/004/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,15m,,,,,,,50.0,packetbeat_rare_dns_question,,,,,,,
135,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a rare and unusual URL that indicates unusual web browsing activity. This can be due to
initial access, persistence, command-and-control, or exfiltration activity. For example, in a strategic web compromise
or watering hole attack, when a trusted website is compromised to target a particular sector or organization, targeted
users may receive emails with uncommon URLs for trusted websites. These URLs can be used to download and run a payload.
When malware is already running, it may send requests to uncommon URLs on trusted websites the malware uses for
command-and-control communication. When rare URLs are observed being requested for a local web server by a remote
source, these can be due to web scanning, enumeration or attack traffic, or they can be due to bots and web scrapers
which are part of common Internet background traffic.
",['    Web activity that occurs rarely in small quantities can trigger this alert. Possible examples are browsing technical\n    support or vendor URLs that are used very sparsely. A user who visits a new and unique web destination may trigger\n    this alert when the activity is sparse. Web applications that generate URLs unique to a transaction may trigger this\n    when they are used sparsely. Web domains can be excluded in cases such as these.\n    '],,,Elastic License v2,Unusual Web Request,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,91f02f01-969f-4167-8f55-07827ac3acc9,low,"['Elastic', 'Network', 'Threat Detection', 'ML', 'Command and Control']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'subtechnique': [{'id': 'T1071.001', 'name': 'Web Protocols', 'reference': 'https://attack.mitre.org/techniques/T1071/001/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,15m,,,,,,,50.0,packetbeat_rare_urls,,,,,,,
136,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a rare and unusual user agent indicating web browsing activity by an unusual process
other than a web browser. This can be due to persistence, command-and-control, or exfiltration activity. Uncommon user
agents coming from remote sources to local destinations are often the result of scanners, bots, and web scrapers, which
are part of common Internet background traffic. Much of this is noise, but more targeted attacks on websites using tools
like Burp or SQLmap can sometimes be discovered by spotting uncommon user agents. Uncommon user agents in traffic from
local sources to remote destinations can be any number of things, including harmless programs like weather monitoring or
stock-trading programs. However, uncommon user agents from local sources can also be due to malware or scanning
activity.
","['    Web activity that is uncommon, like security scans, may trigger this alert and may need to be excluded. A new or\n    rarely used program that calls web services may trigger this alert.\n    ']",,,Elastic License v2,Unusual Web User Agent,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,91f02f01-969f-4167-8d77-07827ac4cee0,low,"['Elastic', 'Network', 'Threat Detection', 'ML', 'Command and Control']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'subtechnique': [{'id': 'T1071.001', 'name': 'Web Protocols', 'reference': 'https://attack.mitre.org/techniques/T1071/001/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,15m,,,,,,,50.0,packetbeat_rare_user_agent,,,,,,,
137,2021/06/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job found an unusually large spike in authentication failure events. This can be due to password
spraying, user enumeration or brute force activity and may be a precursor to account takeover or credentialed access.
",['    A misconfigured service account can trigger this alert. A password change on an account used by an email client can\n    trigger this alert. Security test cycles that include brute force or password spraying activities may trigger this\n    alert.\n    '],,,Elastic License v2,Spike in Failed Logon Events,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,99dcf974-6587-4f65-9252-d866a3fdfd9c,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-30m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,75.0,auth_high_count_logon_fails,,,,,,,
138,2021/06/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job found an unusually large spike in successful authentication events. This can be due to password
spraying, user enumeration or brute force activity.
",['    Build servers and CI systems can sometimes trigger this alert. Security test cycles that include brute force or\n    password spraying activities may trigger this alert.\n    '],,,Elastic License v2,Spike in Logon Events,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,d7d5c059-c19a-4a96-8ae3-41496ef3bcf9,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-30m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,75.0,auth_high_count_logon_events,,,,,,,
139,2021/06/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job found an unusually large spike in successful authentication events from a particular
source IP address. This can be due to password spraying, user enumeration or brute force activity.
",['    Build servers and CI systems can sometimes trigger this alert. Security test cycles that include brute force or\n    password spraying activities may trigger this alert.\n    '],,,Elastic License v2,Spike in Logon Events from a Source IP,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,e26aed74-c816-40d3-a810-48d6fbd8b2fd,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-30m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,75.0,auth_high_count_logon_events_for_a_source_ip,,,,,,,
140,2020/09/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for anomalous access to the metadata service by an unusual process. The metadata service may be targeted in order
to harvest credentials or user data scripts containing secrets.
",['    A newly installed program or one that runs very rarely as part of a monthly or quarterly workflow could trigger this\n    detection rule.\n    '],,,Elastic License v2,Unusual Linux Process Calling the Metadata Service,,21,9d302377-d226-4e12-b54c-1906b5aec4f6,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1552', 'name': 'Unsecured Credentials', 'reference': 'https://attack.mitre.org/techniques/T1552/', 'subtechnique': [{'id': 'T1552.005', 'name': 'Cloud Instance Metadata API', 'reference': 'https://attack.mitre.org/techniques/T1552/005/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,50.0,['v3_linux_rare_metadata_process'],,,,,,,
141,2020/09/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for anomalous access to the cloud platform metadata service by an unusual user. The metadata service may be
targeted in order to harvest credentials or user data scripts containing secrets.
","['    A newly installed program, or one that runs under a new or rarely used user context, could trigger this detection\n    rule. Manual interrogation of the metadata service during debugging or troubleshooting could trigger this rule.\n    ']",,,Elastic License v2,Unusual Linux User Calling the Metadata Service,,21,1faec04b-d902-4f89-8aff-92cd9043c16f,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1552', 'name': 'Unsecured Credentials', 'reference': 'https://attack.mitre.org/techniques/T1552/', 'subtechnique': [{'id': 'T1552.005', 'name': 'Cloud Instance Metadata API', 'reference': 'https://attack.mitre.org/techniques/T1552/005/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,75.0,['v3_linux_rare_metadata_user'],,,,,,,
142,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Identifies an unusually high number of authentication attempts.,"['    Security audits may trigger this alert. Conditions that generate bursts of failed logins, such as misconfigured\n    applications or account lockouts could trigger this alert.\n    ']",,,Elastic License v2,Unusual Login Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,4330272b-9724-4bc6-a3ca-f1532b81e5c2,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,50.0,suspicious_login_activity,,,,,,,
143,2020/09/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for anomalous access to the metadata service by an unusual process. The metadata service may be targeted in order
to harvest credentials or user data scripts containing secrets.
",['    A newly installed program or one that runs very rarely as part of a monthly or quarterly workflow could trigger this\n    detection rule.\n    '],,,Elastic License v2,Unusual Windows Process Calling the Metadata Service,,21,abae61a8-c560-4dbd-acca-1e1438bff36b,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1552', 'name': 'Unsecured Credentials', 'reference': 'https://attack.mitre.org/techniques/T1552/', 'subtechnique': [{'id': 'T1552.005', 'name': 'Cloud Instance Metadata API', 'reference': 'https://attack.mitre.org/techniques/T1552/005/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,50.0,['v3_windows_rare_metadata_process'],,,,,,,
144,2020/09/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for anomalous access to the cloud platform metadata service by an unusual user. The metadata service may be
targeted in order to harvest credentials or user data scripts containing secrets.
","['    A newly installed program, or one that runs under a new or rarely used user context, could trigger this detection\n    rule. Manual interrogation of the metadata service during debugging or troubleshooting could trigger this rule.\n    ']",,,Elastic License v2,Unusual Windows User Calling the Metadata Service,,21,df197323-72a8-46a9-a08e-3f5b04a4a97a,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Credential Access']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1552', 'name': 'Unsecured Credentials', 'reference': 'https://attack.mitre.org/techniques/T1552/', 'subtechnique': [{'id': 'T1552.005', 'name': 'Cloud Instance Metadata API', 'reference': 'https://attack.mitre.org/techniques/T1552/005/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,15m,,,,,,,75.0,['v3_windows_rare_metadata_user'],,,,,,,
145,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for commands related to system information discovery from an unusual user context. This can be due to uncommon
troubleshooting activity or due to a compromised account. A compromised account may be used to engage in system
information discovery in order to gather detailed information about system configuration and software versions. This may
be a precursor to selection of a persistence mechanism or a method of privilege elevation.
",['    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Linux System Information Discovery Activity,,21,d4af3a06-1e0a-48ec-b96a-faf2309fae46,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1082', 'name': 'System Information Discovery', 'reference': 'https://attack.mitre.org/techniques/T1082/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,15m,,,,,,,75.0,['v3_linux_system_information_discovery'],,,,,,,
146,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for commands related to system network configuration discovery from an unusual user context. This can be due to
uncommon troubleshooting activity or due to a compromised account. A compromised account may be used by a threat actor
to engage in system network configuration discovery in order to increase their understanding of connected networks and
hosts. This information may be used to shape follow-up behaviors such as lateral movement or additional discovery.
",['    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Linux System Network Configuration Discovery,,21,f9590f47-6bd5-4a49-bd49-a2f886476fb9,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1016', 'name': 'System Network Configuration Discovery', 'reference': 'https://attack.mitre.org/techniques/T1016/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,15m,,,,,,,25.0,['v3_linux_network_configuration_discovery'],,,,,,,
147,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for commands related to system network connection discovery from an unusual user context. This can be due to
uncommon troubleshooting activity or due to a compromised account. A compromised account may be used by a threat actor
to engage in system network connection discovery in order to increase their understanding of connected services and
systems. This information may be used to shape follow-up behaviors such as lateral movement or additional discovery.
",['    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Linux Network Connection Discovery,,21,c28c4d8c-f014-40ef-88b6-79a1d67cd499,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1049', 'name': 'System Network Connections Discovery', 'reference': 'https://attack.mitre.org/techniques/T1049/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,15m,,,,,,,25.0,['v3_linux_network_connection_discovery'],,,,,,,
148,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for commands related to system process discovery from an unusual user context. This can be due to uncommon
troubleshooting activity or due to a compromised account. A compromised account may be used by a threat actor to engage
in system process discovery in order to increase their understanding of software applications running on a target host
or network. This may be a precursor to selection of a persistence mechanism or a method of privilege elevation.
",['    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Linux Process Discovery Activity,,21,5c983105-4681-46c3-9890-0c66d05e776b,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1057', 'name': 'Process Discovery', 'reference': 'https://attack.mitre.org/techniques/T1057/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,15m,,,,,,,50.0,['v3_linux_system_process_discovery'],,,,,,,
149,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for commands related to system user or owner discovery from an unusual user context. This can be due to uncommon
troubleshooting activity or due to a compromised account. A compromised account may be used to engage in system owner or
user discovery in order to identify currently active or primary users of a system. This may be a precursor to additional
discovery, credential dumping or privilege elevation activity.
",['    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Linux System Owner or User Discovery Activity,,21,59756272-1998-4b8c-be14-e287035c4d10,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1033', 'name': 'System Owner/User Discovery', 'reference': 'https://attack.mitre.org/techniques/T1033/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,15m,,,,,,,75.0,['v3_linux_system_user_discovery'],,,,,,,
150,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a PowerShell script with unusual data characteristics, such as obfuscation, that may be
a characteristic of malicious PowerShell script text blocks.
",['    Certain kinds of security testing may trigger this alert. PowerShell scripts that use high levels of obfuscation or\n    have unusual script block payloads may trigger this alert.\n    '],,,Elastic License v2,Suspicious Powershell Script,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,1781d055-5c66-4adf-9d60-fc0fa58337b6,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Execution']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,15m,,,,,,,50.0,['v3_windows_anomalous_script'],,,,,,,
151,2021/06/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a user logging in at a time of day that is unusual for the user. This can be due to
credentialed access via a compromised account when the user and the threat actor are in different time zones. In
addition, unauthorized user activity often takes place during non-business hours.
","['Users working late, or logging in from unusual time zones while traveling, may trigger this rule.']",,,Elastic License v2,Unusual Hour for a User to Logon,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,745b0119-0560-43ba-860a-7235dd8cee8d,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Initial Access']",,machine_learning,,now-30m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,15m,,,,,,,75.0,auth_rare_hour_for_a_user,,,,,,,
152,2021/06/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a user logging in from an IP address that is unusual for the user. This can be due to
credentialed access via a compromised account when the user and the threat actor are in different locations. An unusual
source IP address for a username could also be due to lateral movement when a compromised account is used to pivot
between hosts.
",['Business travelers who roam to new locations may trigger this alert.'],,,Elastic License v2,Unusual Source IP for a User to Logon from,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,d4b73fa0-9d43-465e-b8bf-50230da6718b,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Initial Access']",,machine_learning,,now-30m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,15m,,,,,,,75.0,auth_rare_source_ip_for_a_user,,,,,,,
153,2021/06/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job found an unusual user name in the authentication logs. An unusual user name is one way of
detecting credentialed access by means of a new or dormant user account. An inactive user account (because the user
has left the organization) that becomes active may be due to credentialed access using a compromised account password.
Threat actors will sometimes also create new users as a means of persisting in a compromised web application.
","['    User accounts that are rarely active, such as a site reliability engineer (SRE) or developer logging into a\n    production server for troubleshooting, may trigger this alert. Under some conditions, a newly created user account\n    may briefly trigger this alert while the model is learning.\n    ']",,,Elastic License v2,Rare User Logon,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,138c5dd5-838b-446e-b1ac-c995c7f8108a,low,"['Elastic', 'Authentication', 'Threat Detection', 'ML', 'Initial Access']",,machine_learning,,now-30m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,15m,,,,,,,75.0,auth_rare_user,,,,,,,
154,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected activity for a username that is not normally active, which can indicate unauthorized
changes, activity by unauthorized users, lateral movement, or compromised credentials. In many organizations, new
usernames are not often created apart from specific types of system activities, such as creating new accounts for new
employees. These user accounts quickly become active and routine. Events from rarely used usernames can point to
suspicious activity. Additionally, automated Linux fleets tend to see activity from rarely used usernames only when
personnel log in to make authorized or unauthorized changes, or threat actors have acquired credentials and log in for
malicious purposes. Unusual usernames can also indicate pivoting, where compromised credentials are used to try and move
laterally from one host to another.
",['    Uncommon user activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Linux Username,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,b347b919-665f-4aac-b9e8-68369bf2340c,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML', 'Initial Access']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating an Unusual Linux User
Detection alerts from this rule indicate activity for a Linux user name that is rare and unusual. Here are some possible avenues of investigation:
- Consider the user as identified by the username field. Is this program part of an expected workflow for the user who ran this program on this host? Could this be related to troubleshooting or debugging activity by a developer or site reliability engineer?
- Examine the history of user activity. If this user only manifested recently, it might be a service account for a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process arguments, title and working directory. These may provide indications as to the source of the program or the nature of the tasks that the user is performing.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,15m,,,,,,,50.0,['v3_linux_anomalous_user_name'],,,,,,,
155,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected activity for a username that is not normally active, which can indicate unauthorized
changes, activity by unauthorized users, lateral movement, or compromised credentials. In many organizations, new
usernames are not often created apart from specific types of system activities, such as creating new accounts for new
employees. These user accounts quickly become active and routine. Events from rarely used usernames can point to
suspicious activity. Additionally, automated Linux fleets tend to see activity from rarely used usernames only when
personnel log in to make authorized or unauthorized changes, or threat actors have acquired credentials and log in for
malicious purposes. Unusual usernames can also indicate pivoting, where compromised credentials are used to try and move
laterally from one host to another.
",['    Uncommon user activity can be due to an administrator or help desk technician logging onto a workstation or server\n    in order to perform manual troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Windows Username,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,1781d055-5c66-4adf-9c59-fc0fa58336a5,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Initial Access']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating an Unusual Windows User
Detection alerts from this rule indicate activity for a Windows user name that is rare and unusual. Here are some possible avenues of investigation:
- Consider the user as identified by the username field. Is this program part of an expected workflow for the user who ran this program on this host? Could this be related to occasional troubleshooting or support activity?
- Examine the history of user activity. If this user only manifested recently, it might be a service account for a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process arguments, title and working directory. These may provide indications as to the source of the program or the nature of the tasks that the user is performing.
- Consider the same for the parent process. If the parent process is a legitimate system utility or service, this could be related to software updates or system management. If the parent process is something user-facing like an Office application, this process could be more suspicious.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,15m,,,,,,,50.0,['v3_windows_anomalous_user_name'],,,,,,,
156,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusual remote desktop protocol (RDP) username, which can indicate account takeover
or credentialed persistence using compromised accounts. RDP attacks, such as BlueKeep, also tend to use unusual
usernames.
",['    Uncommon username activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Windows Remote User,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,1781d055-5c66-4adf-9e93-fc0fa69550c9,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Initial Access']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating an Unusual Windows User
Detection alerts from this rule indicate activity for a rare and unusual Windows RDP (remote desktop) user. Here are some possible avenues of investigation:
- Consider the user as identified by the username field. Is the user part of a group who normally logs into Windows hosts using RDP (remote desktop protocol)? Is this logon activity part of an expected workflow for the user?
- Consider the source of the login. If the source is remote, could this be related to occasional troubleshooting or support activity by a vendor or an employee working remotely?","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,15m,,,,,,,50.0,['v3_windows_rare_user_type10_remote_login'],,,,,,,
157,2021/04/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusually large spike in network traffic that was
denied by network access control lists (ACLs) or firewall rules. Such a burst of denied traffic is usually caused by
either 1) a mis-configured application or firewall or 2) suspicious or malicious activity.
Unsuccessful attempts at network transit, in order to connect to command-and-control (C2),
or engage in data exfiltration, may produce a burst of failed connections. This could also
be due to unusually large amounts of reconnaissance or enumeration traffic. Denial-of-service
attacks or traffic floods may also produce such a surge in traffic.
",['    A misconfgured network application or firewall may trigger this alert. Security scans or test cycles may trigger this alert.\n    '],,,Elastic License v2,Spike in Firewall Denies,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,eaa77d63-9679-4ce3-be25-3ba8b795e5fa,low,"['Elastic', 'Network', 'Threat Detection', 'ML']",,machine_learning,,now-30m,,,,,,,15m,,,,,,,75.0,high_count_network_denies,,,,,,,
158,2021/04/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusually large spike in network traffic. Such a burst of traffic,
if not caused by a surge in business activity, can be due to suspicious or malicious activity.
Large-scale data exfiltration may produce a burst of network traffic; this could also be due to unusually
large amounts of reconnaissance or enumeration traffic. Denial-of-service attacks or traffic floods may
also produce such a surge in traffic.
","['    Business workflows that occur very occasionally, and involve an unusual surge in network traffic,\n    can trigger this alert. A new business workflow or a surge in business activity may trigger this alert.\n    A misconfigured network application or firewall may trigger this alert.\n    ']",,,Elastic License v2,Spike in Network Traffic,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,b240bfb8-26b7-4e5e-924e-218144a3fa71,low,"['Elastic', 'Network', 'Threat Detection', 'ML']",,machine_learning,,now-30m,,,,,,,15m,,,,,,,75.0,high_count_network_events,,,,,,,
159,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies Linux processes that do not usually use the network but have unexpected network activity, which can indicate
command-and-control, lateral movement, persistence, or data exfiltration activity. A process with unusual network
activity can denote process exploitation or injection, where the process is used to run persistence mechanisms that
allow a malicious actor remote access or control of the host, data exfiltration, and execution of unauthorized network
applications.
",,,,Elastic License v2,Unusual Linux Network Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,52afbdc5-db15-485e-bc24-f5707f820c4b,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating Unusual Network Activity
Detection alerts from this rule indicate the presence of network activity from a Linux process for which network activity is rare and unusual.  Here are some possible avenues of investigation:
- Consider the IP addresses and ports. Are these used by normal but infrequent network workflows? Are they expected or unexpected?
- If the destination IP address is remote or external, does it associate with an expected domain, organization or geography? Note: avoid interacting directly with suspected malicious IP addresses.
- Consider the user as identified by the username field. Is this network activity part of an expected workflow for the user who ran the program?
- Examine the history of execution. If this process only manifested recently, it might be part of a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business or maintenance process.
- Examine the process arguments, title and working directory. These may provide indications as to the source of the program or the nature of the tasks it is performing.",,,,,15m,,,,,,,50.0,['v3_linux_anomalous_network_activity'],,,,,,,
160,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies unusual destination port activity that can indicate command-and-control, persistence mechanism, or data
exfiltration activity. Rarely used destination port activity is generally unusual in Linux fleets, and can indicate
unauthorized access or threat actor activity.
",['A newly installed program or one that rarely uses the network could trigger this alert.'],,,Elastic License v2,Unusual Linux Network Port Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,3c7e32e6-6104-46d9-a06e-da0f8b5795a0,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,,,,,15m,,,,,,,50.0,['v3_linux_anomalous_network_port_activity'],,,,,,,
161,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusual network destination domain name. This can be due to initial access,
persistence, command-and-control, or exfiltration activity. For example, when a user clicks on a link in a phishing
email or opens a malicious document, a request may be sent to download and run a payload from an uncommon web server
name. When malware is already running, it may send requests to an uncommon DNS domain the malware uses for
command-and-control communication.
",['    Web activity that occurs rarely in small quantities can trigger this alert. Possible examples are browsing technical\n    support or vendor URLs that are used very sparsely. A user who visits a new and unique web destination may trigger\n    this alert when the activity is sparse. Web applications that generate URLs unique to a transaction may trigger this\n    when they are used sparsely. Web domains can be excluded in cases such as these.\n    '],,,Elastic License v2,Unusual Network Destination Domain Name,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,17e68559-b274-4948-ad0b-f8415bb31126,low,"['Elastic', 'Network', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,,,,,15m,,,,,,,50.0,packetbeat_rare_server_domain,,,,,,,
162,2021/04/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected a rare destination country name in the network logs.
This can be due to initial access, persistence, command-and-control, or exfiltration activity.
For example, when a user clicks on a link in a phishing email or opens a malicious document,
a request may be sent to download and run a payload from a server in a country which does not
normally appear in network traffic or business work-flows. Malware instances and persistence
mechanisms may communicate with command-and-control (C2) infrastructure in their country of origin,
which may be an unusual destination country for the source network.
","['    Business workflows that occur very occasionally, and involve a business relationship with an\n    organization in a country that does not routinely appear in network events, can trigger this alert.\n    A new business workflow with an organization in a country with which no workflows previously\n    existed may trigger this alert - although the model will learn that the new destination country\n    is no longer anomalous as the activity becomes ongoing. Business travelers who roam to many\n    countries for brief periods may trigger this alert.\n    ']",,,Elastic License v2,Network Traffic to Rare Destination Country,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,35f86980-1fb1-4dff-b311-3be941549c8d,low,"['Elastic', 'Network', 'Threat Detection', 'ML']",,machine_learning,,now-30m,,,,,,,15m,,,,,,,75.0,rare_destination_country,,,,,,,
163,2021/04/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusually large spike in network activity to one
destination country in the network logs. This could be due to unusually large amounts
of reconnaissance or enumeration traffic. Data exfiltration activity may also produce
such a surge in traffic to a destination country which does not normally appear in network
traffic or business work-flows. Malware instances and persistence mechanisms may communicate
with command-and-control (C2) infrastructure in their country of origin, which may be an
unusual destination country for the source network.
","['    Business workflows that occur very occasionally, and involve an unusual surge in network traffic\n    to one destination country, can trigger this alert. A new business workflow or a surge in business\n    activity in a particular country may trigger this alert. Business travelers who roam to many\n    countries for brief periods may trigger this alert if they engage in volumetric network activity.\n    ']",,,Elastic License v2,Spike in Network Traffic To a Country,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,c7db5533-ca2a-41f6-a8b0-ee98abe0f573,low,"['Elastic', 'Network', 'Threat Detection', 'ML']",,machine_learning,,now-30m,,,,,,,15m,,,,,,,75.0,high_count_by_destination_country,,,,,,,
164,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies Windows processes that do not usually use the network but have unexpected network activity, which can
indicate command-and-control, lateral movement, persistence, or data exfiltration activity. A process with unusual
network activity can denote process exploitation or injection, where the process is used to run persistence mechanisms
that allow a malicious actor remote access or control of the host, data exfiltration, and execution of unauthorized
network applications.
",['A newly installed program or one that rarely uses the network could trigger this alert.'],,,Elastic License v2,Unusual Windows Network Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,ba342eb2-583c-439f-b04d-1fdd7c1417cc,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating Unusual Network Activity
Detection alerts from this rule indicate the presence of network activity from a Windows process for which network activity is very unusual.  Here are some possible avenues of investigation:
- Consider the IP addresses, protocol and ports. Are these used by normal but infrequent network workflows? Are they expected or unexpected?
- If the destination IP address is remote or external, does it associate with an expected domain, organization or geography? Note: avoid interacting directly with suspected malicious IP addresses.
- Consider the user as identified by the username field. Is this network activity part of an expected workflow for the user who ran the program?
- Examine the history of execution. If this process only manifested recently, it might be part of a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process arguments, title and working directory. These may provide indications as to the source of the program or the nature of the tasks it is performing.
- Consider the same for the parent process. If the parent process is a legitimate system utility or service, this could be related to software updates or system management. If the parent process is something user-facing like an Office application, this process could be more suspicious.
- If you have file hash values in the event data, and you suspect malware, you can optionally run a search for the file hash to see if the file is identified as malware by anti-malware tools.",,,,,15m,,,,,,,50.0,['v3_windows_anomalous_network_activity'],,,,,,,
165,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Searches for rare processes running on multiple Linux hosts in an entire fleet or network. This reduces the detection of
false positives since automated maintenance processes usually only run occasionally on a single machine but are common
to all or many hosts in a fleet.
",['    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this\n    alert.\n    '],,,Elastic License v2,Anomalous Process For a Linux Population,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,647fc812-7996-4795-8869-9c4ea595fe88,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML', 'Persistence']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating an Unusual Linux Process
Detection alerts from this rule indicate the presence of a Linux process that is rare and unusual for all of the monitored Linux hosts for which Auditbeat data is available. Here are some possible avenues of investigation:
- Consider the user as identified by the username field. Is this program part of an expected workflow for the user who ran this program on this host?
- Examine the history of execution. If this process only manifested recently, it might be part of a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process arguments, title and working directory. These may provide indications as to the source of the program or the nature of the tasks it is performing.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_linux_anomalous_process_all_hosts'],,,,,,,
166,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies rare processes that do not usually run on individual hosts, which can indicate execution of unauthorized
services, malware, or persistence mechanisms. Processes are considered rare when they only run occasionally as compared
with other processes running on the host.
",['    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this\n    alert.\n    '],,,Elastic License v2,Unusual Process For a Linux Host,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,46f804f5-b289-43d6-a881-9387cf594f75,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML', 'Persistence']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating an Unusual Linux Process
Detection alerts from this rule indicate the presence of a Linux process that is rare and unusual for the host it ran on. Here are some possible avenues of investigation:
- Consider the user as identified by the username field. Is this program part of an expected workflow for the user who ran this program on this host?
- Examine the history of execution. If this process only manifested recently, it might be part of a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process arguments, title and working directory. These may provide indications as to the source of the program or the nature of the tasks it is performing.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_rare_process_by_host_linux'],,,,,,,
167,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies rare processes that do not usually run on individual hosts, which can indicate execution of unauthorized
services, malware, or persistence mechanisms. Processes are considered rare when they only run occasionally as compared
with other processes running on the host.
",['    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this\n    alert.\n    '],,,Elastic License v2,Unusual Process For a Windows Host,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,6d448b96-c922-4adb-b51c-b767f1ea5b76,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Persistence', 'has_guide']",,machine_learning,,now-45m,,"## Triage and analysis

###  Investigating an Unusual Windows Process

Searching for abnormal Windows processes is a good methodology to find potentially malicious activity within a network.
Understanding what is commonly run within an environment and developing baselines for legitimate activity can help
uncover potential malware and suspicious behaviors.

#### Possible investigation steps:
- Consider the user as identified by the `user.name` field. Is this program part of an expected workflow for the user who ran this program on this host?
- Examine the history of execution. If this process only manifested recently, it might be part of a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process metadata like the values of the Company, Description and Product fields which may indicate whether the program is associated with an expected software vendor or package.
- Examine arguments and working directory. These may provide indications as to the source of the program or the nature of the tasks it is performing.
- Consider the same for the parent process. If the parent process is a legitimate system utility or service, this could be related to software updates or system management. If the parent process is something user-facing like an Office application, this process could be more suspicious.
- If you have file hash values in the event data, and you suspect malware, you can optionally run a search for the file hash to see if the file is identified as malware by anti-malware tools.

### False Positive Analysis
- Validate the unusual Windows process is not related to new benign software installation activity. If related to
legitimate software, this can be done by leveraging the exception workflow in the Kibana Security App or Elasticsearch
API to tune this rule to your environment.
- Try to understand the context of the execution by thinking about the user, machine, or business purpose.  It's possible that a small number of endpoints
such as servers that have very unique software that might appear to be unusual, but satisfy a specific business need.

### Related Rules
- Anomalous Windows Process Creation
- Unusual Windows Path Activity
- Unusual Windows Process Calling the Metadata Service

### Response and Remediation
- This rule is related to process execution events and should be immediately reviewed and investigated to determine if malicious.
- Based on validation and if malicious, the impacted machine should be isolated and analyzed to determine other post-compromise
behavior such as setting up persistence or performing lateral movement.
- Look into preventive measures such as Windows Defender Application Control and AppLocker to gain better control on
what is allowed to run on Windows infrastructure.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_rare_process_by_host_windows'],,,,,,,
168,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies processes started from atypical folders in the file system, which might indicate malware execution or
persistence mechanisms. In corporate Windows environments, software installation is centrally managed and it is unusual
for programs to be executed from user or temporary directories. Processes executed from these locations can denote that
a user downloaded software directly from the Internet or a malicious script or macro executed malware.
","['    A new and unusual program or artifact download in the course of software upgrades, debugging, or troubleshooting\n    could trigger this alert. Users downloading and running programs from unusual locations, such as temporary\n    directories, browser caches, or profile paths could trigger this alert.\n    ']",,,Elastic License v2,Unusual Windows Path Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,445a342e-03fb-42d0-8656-0367eb2dead5,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Persistence']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_windows_anomalous_path_activity'],,,,,,,
169,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Searches for rare processes running on multiple hosts in an entire fleet or network. This reduces the detection of false
positives since automated maintenance processes usually only run occasionally on a single machine but are common to all
or many hosts in a fleet.
",['    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this\n    alert.\n    '],,,Elastic License v2,Anomalous Process For a Windows Population,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,6e40d56f-5c0e-4ac6-aece-bee96645b172,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Persistence']",,machine_learning,,now-45m,,"## Triage and analysis

### Investigating an Unusual Windows Process
Detection alerts from this rule indicate the presence of a Windows process that is rare and unusual for all of the Windows hosts for which Winlogbeat data is available. Here are some possible avenues of investigation:
- Consider the user as identified by the username field. Is this program part of an expected workflow for the user who ran this program on this host?
- Examine the history of execution. If this process only manifested recently, it might be part of a new software package. If it has a consistent cadence (for example if it runs monthly or quarterly), it might be part of a monthly or quarterly business process.
- Examine the process metadata like the values of the Company, Description and Product fields which may indicate whether the program is associated with an expected software vendor or package.
- Examine arguments and working directory. These may provide indications as to the source of the program or the nature of the tasks it is performing.
- Consider the same for the parent process. If the parent process is a legitimate system utility or service, this could be related to software updates or system management. If the parent process is something user-facing like an Office application, this process could be more suspicious.
- If you have file hash values in the event data, and you suspect malware, you can optionally run a search for the file hash to see if the file is identified as malware by anti-malware tools. ","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_windows_anomalous_process_all_hosts'],,,,,,,
170,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies unusual parent-child process relationships that can indicate malware execution or persistence mechanisms.
Malicious scripts often call on other applications and processes as part of their exploit payload. For example, when a
malicious Office document runs scripts as part of an exploit payload, Excel or Word may start a script interpreter
process, which, in turn, runs a script that downloads and executes malware. Another common scenario is Outlook running
an unusual process when malware is downloaded in an email. Monitoring and identifying anomalous process relationships is
a method of detecting new and emerging malware that is not yet recognized by anti-virus scanners.
",['    Users running scripts in the course of technical support operations of software upgrades could trigger this alert. A\n    newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this alert.\n    '],,,Elastic License v2,Anomalous Windows Process Creation,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,0b29cab4-dbbd-4a3f-9e8e-1287c7c11ae5,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Persistence']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_windows_anomalous_process_creation'],,,,,,,
171,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusual Windows service, This can indicate execution of unauthorized services,
malware, or persistence mechanisms. In corporate Windows environments, hosts do not generally run many rare or unique
services. This job helps detect malware and persistence mechanisms that have been installed and run as a service.
",['    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this\n    alert.\n    '],,,Elastic License v2,Unusual Windows Service,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,1781d055-5c66-4adf-9c71-fc0fa58338c7,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Persistence']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,15m,,,,,,,50.0,['v3_windows_anomalous_service'],,,,,,,
172,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for sudo activity from an unusual user context. An unusual sudo user could be due to troubleshooting activity or
it could be a sign of credentialed access via compromised accounts.
",['    Uncommon sudo activity can be due to an engineer logging onto a server instance in order to perform manual\n    troubleshooting or reconfiguration.\n    '],,,Elastic License v2,Unusual Sudo Activity,,21,1e9fc667-9ff1-4b33-9f40-fefca8537eb0,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,15m,,,,,,,75.0,['v3_linux_rare_sudo_user'],,,,,,,
173,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A machine learning job detected an unusual user context switch, using the runas command or similar techniques, which can
indicate account takeover or privilege escalation using compromised accounts. Privilege elevation using tools like runas
are more commonly used by domain and network administrators than by regular Windows users.
","['    Uncommon user privilege elevation activity can be due to an administrator, help desk technician, or a user\n    performing manual troubleshooting or reconfiguration.\n    ']",,,Elastic License v2,Unusual Windows User Privilege Elevation Activity,['https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html'],21,1781d055-5c66-4adf-9d82-fc0fa58449c8,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'ML', 'Privilege Escalation']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,15m,,,,,,,50.0,['v3_windows_rare_user_runas_event'],,,,,,,
174,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Looks for compiler activity by a user context which does not normally run compilers. This can be the result of ad-hoc
software changes or unauthorized software deployment. This can also be due to local privilege elevation via locally run
exploits or malware activity.
",['    Uncommon compiler activity can be due to an engineer running a local build on a production or staging instance in\n    the course of troubleshooting or fixing a software issue.\n    '],,,Elastic License v2,Anomalous Linux Compiler Activity,,21,cd66a419-9b3f-4f57-8ff8-ac4cd2d5f530,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'ML', 'Resource Development']",,machine_learning,,now-45m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1588', 'name': 'Obtain Capabilities', 'reference': 'https://attack.mitre.org/techniques/T1588/', 'subtechnique': [{'id': 'T1588.001', 'name': 'Malware', 'reference': 'https://attack.mitre.org/techniques/T1588/001/'}]}], 'tactic': {'id': 'TA0042', 'name': 'Resource Development', 'reference': 'https://attack.mitre.org/tactics/TA0042/'}}]",,,,15m,,,,,,,50.0,['v3_linux_rare_user_compiler'],,,,,,,
175,2020/07/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Cobalt Strike is a threat emulation platform commonly modified and used by adversaries to conduct network attack and
exploitation campaigns. This rule detects a network activity algorithm leveraged by Cobalt Strike implant beacons for
command and control.
","['    This rule should be tailored to either exclude systems, as sources or destinations, in which this behavior is\n    expected.\n    ']","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",lucene,Elastic License v2,Cobalt Strike Command and Control Beacon,"['https://blog.morphisec.com/fin7-attacks-restaurant-industry', 'https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html']",73,cf53f532-9cc9-445a-9ae7-fced307ec53c,high,"['Elastic', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network OR network_traffic) AND type:(tls OR http) AND network.transport:tcp AND destination.domain:/[a-z]{3}.stage.[0-9]{8}\..*/
",now-9m,,"## Threat intel

This activity has been observed in FIN7 campaigns.","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'id': 'T1071'}, {'name': 'Dynamic Resolution', 'reference': 'https://attack.mitre.org/techniques/T1568/', 'id': 'T1568', 'subtechnique': [{'name': 'Domain Generation Algorithms', 'reference': 'https://attack.mitre.org/techniques/T1568/002/', 'id': 'T1568.002'}]}], 'tactic': {'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011'}}]",,,,,,,,,,,,,,,,,,,
176,2020/10/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects the use of the default Cobalt Strike Team Server TLS certificate. Cobalt Strike is software for
Adversary Simulations and Red Team Operations which are security assessments that replicate the tactics and techniques
of an advanced adversary in a network. Modifications to the Packetbeat configuration can be made to include MD5 and
SHA256 hashing algorithms (the default is SHA1). See the References section for additional information on module
configuration.
",,"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Default Cobalt Strike Team Server Certificate,"['https://attack.mitre.org/software/S0154/', 'https://www.cobaltstrike.com/help-setup-collaboration', 'https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-tls.html', 'https://www.elastic.co/guide/en/beats/filebeat/7.9/filebeat-module-suricata.html', 'https://www.elastic.co/guide/en/beats/filebeat/7.9/filebeat-module-zeek.html']",99,e7075e8d-a966-458e-a183-85cd331af255,critical,"['Command and Control', 'Post-Execution', 'Threat Detection', 'Elastic', 'Network', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and (tls.server.hash.md5:950098276A495286EB2A2556FBAB6D83 or
  tls.server.hash.sha1:6ECE5ECE4192683D2D84E25B0BA7E04F9CB7EB7C or
  tls.server.hash.sha256:87F2085C32B6A2CC709B365F55873E207A9CAA10BFFECF2FD16D3CF9D94D390C)
",now-9m,,"## Threat intel

While Cobalt Strike is intended to be used for penetration tests and IR training, it is frequently used by actual threat actors (TA) such as APT19, APT29, APT32, APT41, FIN6, DarkHydrus, CopyKittens, Cobalt Group, Leviathan, and many other unnamed criminal TAs. This rule uses high-confidence atomic indicators, so alerts should be investigated rapidly.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'subtechnique': [{'id': 'T1071.001', 'name': 'Web Protocols', 'reference': 'https://attack.mitre.org/techniques/T1071/001/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
177,2020/07/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects a Roshal Archive (RAR) file or PowerShell script downloaded from the internet by an internal host. Gaining
initial access to a system and then downloading encoded or encrypted tools to move laterally is a common practice for
adversaries as a way to protect their more valuable tools and tactics, techniques, and procedures (TTPs). This may be
atypical behavior for a managed network and can be indicative of malware, exfiltration, or command and control.
",['    Downloading RAR or PowerShell files from the Internet may be expected for certain systems. This rule should be\n    tailored to either exclude systems as sources or destinations in which this behavior is expected.\n    '],"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Roshal Archive (RAR) or PowerShell File Downloaded from the Internet,"['https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html', 'https://www.justice.gov/opa/press-release/file/1084361/download', 'https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml']",47,ff013cb4-274d-434a-96bb-fe15ddd3ae92,medium,"['Elastic', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.protocol:http and
  (url.extension:(ps1 or rar) or url.path:(*.ps1 or *.rar)) and
    not destination.ip:(
      10.0.0.0/8 or
      127.0.0.0/8 or
      169.254.0.0/16 or
      172.16.0.0/12 or
      192.0.0.0/24 or
      192.0.0.0/29 or
      192.0.0.8/32 or
      192.0.0.9/32 or
      192.0.0.10/32 or
      192.0.0.170/32 or
      192.0.0.171/32 or
      192.0.2.0/24 or
      192.31.196.0/24 or
      192.52.193.0/24 or
      192.168.0.0/16 or
      192.88.99.0/24 or
      224.0.0.0/4 or
      100.64.0.0/10 or
      192.175.48.0/24 or
      198.18.0.0/15 or
      198.51.100.0/24 or
      203.0.113.0/24 or
      240.0.0.0/4 or
      ""::1"" or
      ""FE80::/10"" or
      ""FF00::/8""
    ) and
    source.ip:(
      10.0.0.0/8 or
      172.16.0.0/12 or
      192.168.0.0/16
    )
",now-9m,,"## Threat intel

This activity has been observed in FIN7 campaigns.","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1105/', 'name': 'Ingress Tool Transfer', 'id': 'T1105'}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0011/', 'name': 'Command and Control', 'id': 'TA0011'}}]",,,,,,,,,,,,,,,,,,,
178,2020/07/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects a known command and control pattern in network events. The FIN7 threat group is known to use this
command and control technique, while maintaining persistence in their target's network.
","[""    This rule could identify benign domains that are formatted similarly to FIN7's command and control algorithm. Alerts\n    should be investigated by an analyst to assess the validity of the individual observations.\n    ""]","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",lucene,Elastic License v2,Possible FIN7 DGA Command and Control Behavior,['https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html'],73,4a4e23cf-78a2-449c-bac3-701924c269d3,high,"['Elastic', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network OR network_traffic) AND type:(tls OR http) AND network.transport:tcp
AND destination.domain:/[a-zA-Z]{4,5}\.(pw|us|club|info|site|top)/ AND NOT destination.domain:zoom.us
",now-9m,,"## Triage and analysis

In the event this rule identifies benign domains in your environment, the `destination.domain` field in the rule can be modified to include those domains. Example: `...AND NOT destination.domain:(zoom.us OR benign.domain1 OR benign.domain2)`.","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1071/', 'id': 'T1071', 'name': 'Application Layer Protocol'}, {'reference': 'https://attack.mitre.org/techniques/T1568/', 'id': 'T1568', 'name': 'Dynamic Resolution', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1568/002/', 'id': 'T1568.002', 'name': 'Domain Generation Algorithms'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011', 'name': 'Command and Control'}}]",,,,,,,,,,,,,,,,,,,
179,2020/07/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Halfbaked is a malware family used to establish persistence in a contested network. This rule detects a network activity
algorithm leveraged by Halfbaked implant beacons for command and control.
","['    This rule should be tailored to exclude systems, either as sources or destinations, in which this behavior is\n    expected.\n    ']","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",lucene,Elastic License v2,Halfbaked Command and Control Beacon,"['https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html', 'https://attack.mitre.org/software/S0151/']",73,2e580225-2a58-48ef-938b-572933be06fe,high,"['Elastic', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network OR network_traffic) AND network.protocol:http AND
  network.transport:tcp AND url.full:/http:\/\/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/cd/ AND
  destination.port:(53 OR 80 OR 8080 OR 443)
",now-9m,,"## Threat intel

This activity has been observed in FIN7 campaigns.","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'id': 'T1071'}, {'name': 'Dynamic Resolution', 'reference': 'https://attack.mitre.org/techniques/T1568/', 'id': 'T1568', 'subtechnique': [{'name': 'Domain Generation Algorithms', 'reference': 'https://attack.mitre.org/techniques/T1568/002/', 'id': 'T1568.002'}]}], 'tactic': {'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011'}}]",,,,,,,,,,,,,,,,,,,
180,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects events that could be describing IPSEC NAT Traversal traffic. IPSEC is a VPN technology that allows one
system to talk to another using encrypted tunnels. NAT Traversal enables these tunnels to communicate over the Internet
where one of the sides is behind a NAT router gateway. This may be common on your network, but this technique is also
used by threat actors to avoid detection.
","['    Some networks may utilize these protocols but usage that is unfamiliar to local network administrators can be\n    unexpected and suspicious. Because this port is in the ephemeral range, this rule may false under certain\n    conditions, such as when an application server with a public IP address replies to a client which has used a UDP\n    port in the range by coincidence. This is uncommon but such servers can be excluded.\n    ']","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,IPSEC NAT Traversal Port Activity,,21,a9cb3641-ff4b-4cdc-a063-b4b8d02a67c7,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:udp and destination.port:4500
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'name': 'Command and Control', 'id': 'TA0011', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
181,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects events that may indicate use of SMTP on TCP port 26. This port is commonly used by several popular
mail transfer agents to deconflict with the default SMTP port 25. This port has also been used by a malware family
called BadPatch for command and control of Windows systems.
",['    Servers that process email traffic may cause false positives and should be excluded from this rule as this is\n    expected behavior.\n    '],"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SMTP on Port 26/TCP,"['https://unit42.paloaltonetworks.com/unit42-badpatch/', 'https://isc.sans.edu/forums/diary/Next+up+whats+up+with+TCP+port+26/25564/']",21,d7e62693-aab9-4f66-a21a-3d79ecdd603d,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:26 or (event.dataset:zeek.smtp and destination.port:26))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Exfiltration Over Alternative Protocol', 'reference': 'https://attack.mitre.org/techniques/T1048/', 'id': 'T1048'}], 'tactic': {'name': 'Exfiltration', 'reference': 'https://attack.mitre.org/tactics/TA0010/', 'id': 'TA0010'}}]",,,,,,,,,,,,,,,,,,,
182,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of RDP traffic from the Internet. RDP is commonly used by
system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector.
","['    Some network security policies allow RDP directly from the Internet but usage that is unfamiliar to server or\n    network owners can be unexpected and suspicious. RDP services may be exposed directly to the Internet in some\n    networks such as cloud environments. In such cases, only RDP gateways, bastions or jump servers may be expected\n    expose RDP directly to the Internet and can be exempted from this rule. RDP may be required by some work-flows such\n    as remote access and support for specialized software products and servers. Such work-flows are usually known and\n    not unexpected.\n    ']","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,RDP (Remote Desktop Protocol) from the Internet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],47,8c1bdde8-4204-45c0-9e0c-c85ca3902488,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:3389 or event.dataset:zeek.rdp) and
  not source.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  ) and
  destination.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,300afc76-072d-4261-864d-4149714bf3f1,Comprehensive Network Timeline,,,,,,,,,,,,,,,,
183,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of Telnet traffic. Telnet is commonly used by system
administrators to remotely control older or embedded systems using the command line shell. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector. As a plain-text protocol, it may also expose usernames and passwords to anyone capable of observing
the traffic.
",['    IoT (Internet of Things) devices and networks may use telnet and can be excluded if desired. Some business\n    work-flows may use Telnet for administration of older devices. These often have a predictable behavior. Telnet\n    activity involving an unusual source or destination may be more suspicious. Telnet activity involving a production\n    server that has no known associated Telnet work-flow or business requirement is often suspicious.\n    '],"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Telnet Port Activity,,47,34fde489-94b0-4500-a76f-b8a157cf9269,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and destination.port:23
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011', 'name': 'Command and Control'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1021/', 'id': 'T1021', 'name': 'Remote Services'}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0008/', 'id': 'TA0008', 'name': 'Lateral Movement'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1190/', 'id': 'T1190', 'name': 'Exploit Public-Facing Application'}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0001/', 'id': 'TA0001', 'name': 'Initial Access'}}]",,300afc76-072d-4261-864d-4149714bf3f1,Comprehensive Network Timeline,,,,,,,,,,,,,,,,
184,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of VNC traffic from the Internet. VNC is commonly used by
system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector.
",['    VNC connections may be received directly to Linux cloud server instances but such connections are usually made only\n    by engineers. VNC is less common than SSH or RDP but may be required by some work-flows such as remote access and\n    support for specialized software products or servers. Such work-flows are usually known and not unexpected. Usage\n    that is unfamiliar to server or network owners can be unexpected and suspicious.\n    '],"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,VNC (Virtual Network Computing) from the Internet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],73,5700cb81-df44-46aa-a5d7-337798f53eb8,high,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and destination.port >= 5800 and destination.port <= 5810 and
  not source.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  ) and
  destination.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Remote Access Software', 'id': 'T1219', 'reference': 'https://attack.mitre.org/techniques/T1219/'}], 'tactic': {'name': 'Command and Control', 'id': 'TA0011', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Exploit Public-Facing Application', 'id': 'T1190', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'name': 'Initial Access', 'id': 'TA0001', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
185,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of VNC traffic to the Internet. VNC is commonly used by
system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector.
",['    VNC connections may be made directly to Linux cloud server instances but such connections are usually made only by\n    engineers. VNC is less common than SSH or RDP but may be required by some work flows such as remote access and\n    support for specialized software products or servers. Such work-flows are usually known and not unexpected. Usage\n    that is unfamiliar to server or network owners can be unexpected and suspicious.\n    '],"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,VNC (Virtual Network Computing) to the Internet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],47,3ad49c61-7adc-42c1-b788-732eda2f5abf,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and destination.port >= 5800 and destination.port <= 5810 and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Remote Access Software', 'reference': 'https://attack.mitre.org/techniques/T1219/', 'id': 'T1219'}], 'tactic': {'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011'}}]",,,,,,,,,,,,,,,,,,,
186,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of RPC traffic from the Internet. RPC is commonly used by
system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector.
",,"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,RPC (Remote Procedure Call) from the Internet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],73,143cb236-0956-4f42-a706-814bcaa0cf5a,high,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Initial Access', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:135 or event.dataset:zeek.dce_rpc) and
  not source.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  ) and
  destination.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Exploit Public-Facing Application', 'id': 'T1190', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'name': 'Initial Access', 'id': 'TA0001', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
187,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of RPC traffic to the Internet. RPC is commonly used by
system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector.
",,"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,RPC (Remote Procedure Call) to the Internet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],73,32923416-763a-4531-bb35-f33b9232ecdb,high,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Initial Access', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:135 or event.dataset:zeek.dce_rpc) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Exploit Public-Facing Application', 'id': 'T1190', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'name': 'Initial Access', 'id': 'TA0001', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
188,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"This rule detects network events that may indicate the use of Windows file sharing (also called SMB or CIFS) traffic to
the Internet. SMB is commonly used within networks to share files, printers, and other system resources amongst trusted
systems. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by
threat actors as an initial access or backdoor vector or for data exfiltration.
",,"['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SMB (Windows File Sharing) Activity to the Internet,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],73,c82b2bd8-d701-420c-ba43-f11a155b681a,high,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Initial Access', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:(139 or 445) or event.dataset:zeek.smb) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'reference': 'https://attack.mitre.org/techniques/T1190/', 'name': 'Exploit Public-Facing Application'}], 'tactic': {'id': 'TA0001', 'reference': 'https://attack.mitre.org/tactics/TA0001/', 'name': 'Initial Access'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1048', 'reference': 'https://attack.mitre.org/techniques/T1048/', 'name': 'Exfiltration Over Alternative Protocol'}], 'tactic': {'id': 'TA0010', 'reference': 'https://attack.mitre.org/tactics/TA0010/', 'name': 'Exfiltration'}}]",,,,,,,,,,,,,,,,,,,
189,2020/08/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies Elasticsearch nodes that do not have Transport Layer Security (TLS), and/or lack authentication, and are
accepting inbound network connections over the default Elasticsearch port.
","['    If you have front-facing proxies that provide authentication and TLS, this rule would need to be tuned to eliminate\n    the source IP address of your reverse-proxy.\n    ']","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",lucene,Elastic License v2,Inbound Connection to an Unsecure Elasticsearch Node,"['https://www.elastic.co/guide/en/elasticsearch/reference/current/configuring-security.html', 'https://www.elastic.co/guide/en/beats/packetbeat/current/packetbeat-http-options.html#_send_all_headers']",47,31295df3-277b-4c56-a1fb-84e31b4222a9,medium,"['Elastic', 'Network', 'Threat Detection', 'Initial Access', 'Host']",event.ingested,query,"event.category:network_traffic AND network.protocol:http AND status:OK AND destination.port:9200 AND network.direction:inbound AND NOT http.response.headers.content-type:""image/x-icon"" AND NOT _exists_:http.request.headers.authorization
",now-9m,,"## Setup

This rule requires the addition of port `9200` and `send_all_headers` to the `HTTP` protocol configuration in `packetbeat.yml`. See the References section for additional configuration documentation.","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1190/', 'name': 'Exploit Public-Facing Application', 'id': 'T1190'}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0001/', 'name': 'Initial Access', 'id': 'TA0001'}}]",,,,,,,,,,,,,,,,,,,
190,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected Credential Dumping. Click the Elastic Endgame icon in the event.module column or the link
in the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Credential Dumping - Detected - Elastic Endgame,,73,571afc56-5ed9-465d-a2a9-045f099f6e7e,high,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Credential Access']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:cred_theft_event or endgame.event_subtype_full:cred_theft_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,10m,,,,,,,,,,,,,,,
191,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented Credential Dumping. Click the Elastic Endgame icon in the event.module column or the link
in the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Credential Dumping - Prevented - Elastic Endgame,,47,db8c33a8-03cd-4988-9e2c-d0a4863adb13,medium,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Credential Access']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:cred_theft_event or endgame.event_subtype_full:cred_theft_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,10m,,,,,,,,,,,,,,,
192,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected an Adversary Behavior. Click the Elastic Endgame icon in the event.module column or the
link in the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Adversary Behavior - Detected - Elastic Endgame,,47,77a3c3df-8ec4-4da4-b758-878f551dee69,medium,"['Elastic', 'Elastic Endgame']",,query,"event.kind:alert and event.module:endgame and (event.action:rules_engine_event or endgame.event_subtype_full:rules_engine_event)
",now-15m,10000.0,,,,,,10m,,,,,,,,,,,,,,,
193,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected Malware. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Malware - Detected - Elastic Endgame,,99,0a97b20f-4144-49ea-be32-b540ecc445de,critical,"['Elastic', 'Elastic Endgame']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:file_classification_event or endgame.event_subtype_full:file_classification_event)
",now-15m,10000.0,,,,,,10m,,,,,,,,,,,,,,,
194,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented Malware. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Malware - Prevented - Elastic Endgame,,73,3b382770-efbb-44f4-beed-f5e0a051b895,high,"['Elastic', 'Elastic Endgame']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:file_classification_event or endgame.event_subtype_full:file_classification_event)
",now-15m,10000.0,,,,,,10m,,,,,,,,,,,,,,,
195,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected ransomware. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Ransomware - Detected - Elastic Endgame,,99,8cb4f625-7743-4dfb-ae1b-ad92be9df7bd,critical,"['Elastic', 'Elastic Endgame']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:ransomware_event or endgame.event_subtype_full:ransomware_event)
",now-15m,10000.0,,,,,,10m,,,,,,,,,,,,,,,
196,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented ransomware. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Ransomware - Prevented - Elastic Endgame,,73,e3c5d5cb-41d5-4206-805c-f30561eae3ac,high,"['Elastic', 'Elastic Endgame']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:ransomware_event or endgame.event_subtype_full:ransomware_event)
",now-15m,10000.0,,,,,,10m,,,,,,,,,,,,,,,
197,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected an Exploit. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Exploit - Detected - Elastic Endgame,,73,2003cdc8-8d83-4aa5-b132-1f9a8eb48514,high,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Execution', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:exploit_event or endgame.event_subtype_full:exploit_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
198,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented an Exploit. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Exploit - Prevented - Elastic Endgame,,47,2863ffeb-bf77-44dd-b7a5-93ef94b72036,medium,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Execution', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:exploit_event or endgame.event_subtype_full:exploit_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
199,2020/07/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Generates a detection alert for each external alert written to the configured indices. Enabling this rule allows you to
immediately begin investigating external alerts in the app.
",,"['apm-*-transaction*', 'traces-apm*', 'auditbeat-*', 'filebeat-*', 'logs-*', 'packetbeat-*', 'winlogbeat-*']",kuery,Elastic License v2,External Alerts,,47,eb079c62-4481-4d6e-9643-3ca499df7aaa,medium,"['Elastic', 'Network', 'Windows', 'APM', 'macOS', 'Linux']",event.ingested,query,"event.kind:alert and not event.module:(endgame or endpoint)
",,10000.0,,,,,,,,,,,,,,,message,"[{'field': 'event.risk_score', 'operator': 'equals', 'value': ''}]","[{'field': 'event.severity', 'operator': 'equals', 'value': '21', 'severity': 'low'}, {'field': 'event.severity', 'operator': 'equals', 'value': '47', 'severity': 'medium'}, {'field': 'event.severity', 'operator': 'equals', 'value': '73', 'severity': 'high'}, {'field': 'event.severity', 'operator': 'equals', 'value': '99', 'severity': 'critical'}]",,,,
200,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected Credential Manipulation. Click the Elastic Endgame icon in the event.module column or the
link in the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Credential Manipulation - Detected - Elastic Endgame,,73,c0be5f31-e180-48ed-aa08-96b36899d48f,high,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:token_manipulation_event or endgame.event_subtype_full:token_manipulation_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'name': 'Access Token Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1134/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
201,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented Credential Manipulation. Click the Elastic Endgame icon in the event.module column or the
link in the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Credential Manipulation - Prevented - Elastic Endgame,,47,c9e38e64-3f4c-4bf3-ad48-0e61a60ea1fa,medium,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:token_manipulation_event or endgame.event_subtype_full:token_manipulation_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'name': 'Access Token Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1134/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
202,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected Permission Theft. Click the Elastic Endgame icon in the event.module column or the link in
the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Permission Theft - Detected - Elastic Endgame,,73,c3167e1b-f73c-41be-b60b-87f4df707fe3,high,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:token_protection_event or endgame.event_subtype_full:token_protection_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'name': 'Access Token Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1134/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
203,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented Permission Theft. Click the Elastic Endgame icon in the event.module column or the link in
the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Permission Theft - Prevented - Elastic Endgame,,47,453f659e-0429-40b1-bfdb-b6957286e04b,medium,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:token_protection_event or endgame.event_subtype_full:token_protection_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'name': 'Access Token Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1134/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
204,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame detected Process Injection. Click the Elastic Endgame icon in the event.module column or the link in
the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Process Injection - Detected - Elastic Endgame,,73,80c52164-c82a-402c-9964-852533d58be1,high,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:kernel_shellcode_event or endgame.event_subtype_full:kernel_shellcode_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
205,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Elastic Endgame prevented Process Injection. Click the Elastic Endgame icon in the event.module column or the link
in the rule.reference column for additional information.
",,['endgame-*'],kuery,Elastic License v2,Process Injection - Prevented - Elastic Endgame,,47,990838aa-a953-4f3e-b3cb-6ddf7584de9e,medium,"['Elastic', 'Elastic Endgame', 'Threat Detection', 'Privilege Escalation']",,query,"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:kernel_shellcode_event or endgame.event_subtype_full:kernel_shellcode_event)
",now-15m,10000.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,10m,,,,,,,,,,,,,,,
206,2020/12/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the use of the Exchange PowerShell cmdlet, New-MailBoxExportRequest, to export the contents of a primary
mailbox or archive to a .pst file. Adversaries may target user email to collect sensitive information.
",['Legitimate exchange system administration activity.'],"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Exporting Exchange Mailbox via PowerShell,"['https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/', 'https://docs.microsoft.com/en-us/powershell/module/exchange/new-mailboxexportrequest?view=exchange-ps']",47,6aace640-e631-4870-ba8e-5fdda09325db,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Collection', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.name: (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and process.args : ""New-MailboxExportRequest*""
",now-9m,,"## Triage and analysis

### Investigating Exporting Exchange Mailbox via PowerShell

The `New-MailBoxExportRequest` cmdlet is used to begin the process of exporting contents of a primary mailbox or archive
to a .pst file. Note that this is done on a per-mailbox basis and this cmdlet is available only in on-premises Exchange.

Attackers can abuse this functionality in preparation for exfiltrating contents, which is likely to contain sensitive
and strategic data.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate the export operation:
  - Identify the user account that performed the action and whether it should perform this kind of action.
  - Contact the account owner and confirm whether they are aware of this activity.
  - Check if this operation was approved and performed according to the organization's change management policy.
  - Retrieve the operation status and use the `Get-MailboxExportRequest` cmdlet to review previous requests.
  - By default, no group in Exchange has the privilege to import or export mailboxes. Investigate administrators that
  assigned the ""Mailbox Import Export"" privilege for abnormal activity.
- Investigate if there is a significant quantity of export requests in the alert timeframe. This operation is done on
a per-mailbox basis and can be part of a mass export.
- If the operation was completed successfully:
  - Check if the file is on the path specified in the command.
  - Investigate if the file was compressed, archived, or retrieved by the attacker for exfiltration.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity
and it is done with proper approval.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If the involved host is not the Exchange server, isolate the host to prevent further post-compromise behavior.
- Use the `Remove-MailboxExportRequest` cmdlet to remove fully or partially completed export requests.
- Prioritize cases that involve personally identifiable information (PII) or other classified data.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Review the privileges of users with the ""Mailbox Import Export"" privilege to ensure that the least privilege principle
is being followed.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1005', 'name': 'Data from Local System', 'reference': 'https://attack.mitre.org/techniques/T1005/'}, {'id': 'T1114', 'name': 'Email Collection', 'reference': 'https://attack.mitre.org/techniques/T1114/', 'subtechnique': [{'id': 'T1114.002', 'name': 'Remote Email Collection', 'reference': 'https://attack.mitre.org/techniques/T1114/002/'}]}], 'tactic': {'id': 'TA0009', 'name': 'Collection', 'reference': 'https://attack.mitre.org/tactics/TA0009/'}}]",,,,,,,,,,,,,,,,,,,
207,2021/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects PowerShell scripts that can record audio, a common feature in popular post-exploitation tooling.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Suspicious Script with Audio Capture Capabilities,['https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-MicrophoneAudio.ps1'],47,2f2f4939-0b34-40c2-a0a3-844eb7889f43,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Collection', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    ""Get-MicrophoneAudio"" or (waveInGetNumDevs and mciSendStringA)
  )
",now-9m,,"## Triage and analysis

### Investigating PowerShell Suspicious Script with Audio Capture Capabilities

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can use PowerShell to interact with the Windows API with the intent of capturing audio from input devices
connected to the victim's computer.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Investigate if the script stores the recorded data locally and determine if anything was recorded.
- Investigate if the script contains exfiltration capabilities and the destination of this exfiltration.
- Assess network data to determine if the host communicated with the exfiltration server.

### False positive analysis

- Regular users should not need scripts to capture audio, which makes false positives unlikely. In the case of
authorized benign true positives (B-TPs), exceptions can be added.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- The response must be prioritized if this alert involves key executives or potentially valuable targets for espionage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1123', 'name': 'Audio Capture', 'reference': 'https://attack.mitre.org/techniques/T1123/'}], 'tactic': {'id': 'TA0009', 'name': 'Collection', 'reference': 'https://attack.mitre.org/tactics/TA0009/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'name': 'Command and Scripting Interpreter', 'subtechnique': [{'id': 'T1059.001', 'reference': 'https://attack.mitre.org/techniques/T1059/001/', 'name': 'PowerShell'}]}], 'tactic': {'id': 'TA0002', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'name': 'Execution'}}]",,,,,,,,,,,,,,,,,,,
208,2021/10/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects the use of Win32 API Functions that can be used to capture user keystrokes in PowerShell scripts.
Attackers use this technique to capture user input, looking for credentials and/or other valuable data.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Keylogging Script,"['https://github.com/EmpireProject/Empire/blob/master/data/module_source/collection/Get-Keystrokes.ps1', 'https://github.com/MojtabaTajik/FunnyKeylogger/blob/master/FunnyLogger.ps1']",73,bd2c86a0-8b61-4457-ab38-96943984e889,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Collection', 'has_guide']",event.ingested,query,"event.category:process and
  (
   powershell.file.script_block_text : (GetAsyncKeyState or NtUserGetAsyncKeyState or GetKeyboardState or ""Get-Keystrokes"") or
   powershell.file.script_block_text : (
        (SetWindowsHookA or SetWindowsHookW or SetWindowsHookEx or SetWindowsHookExA or NtUserSetWindowsHookEx) and
        (GetForegroundWindow or GetWindowTextA or GetWindowTextW or ""WM_KEYBOARD_LL"")
   )
   )
",now-9m,,"## Triage and analysis

### Investigating PowerShell Keylogging Script

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can abuse PowerShell capabilities to capture user keystrokes with the goal of stealing credentials and other
valuable information as credit card data and confidential conversations.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Investigate if the script stores the captured data locally.
- Investigate if the script contains exfiltration capabilities and the destination of this exfiltration.
- Assess network data to determine if the host communicated with the exfiltration server.

### False positive analysis

- Regular users do not have a business justification for using scripting utilities to capture keystrokes, making
false positives unlikely. In the case of authorized benign true positives (B-TPs), exceptions can be added.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- The response must be prioritized if this alert involves key executives or potentially valuable targets for espionage.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1056', 'name': 'Input Capture', 'reference': 'https://attack.mitre.org/techniques/T1056/', 'subtechnique': [{'id': 'T1056.001', 'name': 'Keylogging', 'reference': 'https://attack.mitre.org/techniques/T1056/001/'}]}], 'tactic': {'id': 'TA0009', 'name': 'Collection', 'reference': 'https://attack.mitre.org/tactics/TA0009/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
209,2021/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects PowerShell scripts that can take screenshots, which is a common feature in post-exploitation kits and remote
access tools (RATs).
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Suspicious Script with Screenshot Capabilities,['https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen'],47,959a7353-1129-4aa7-9084-30746b256a70,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Collection', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    CopyFromScreen and
    (""System.Drawing.Bitmap"" or ""Drawing.Bitmap"")
  )
",now-9m,,"## Triage and analysis

### Investigating PowerShell Suspicious Script with Screenshot Capabilities

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, which makes
it available for use in various environments and creates an attractive way for attackers to execute code.

Attackers can abuse PowerShell capabilities and take screen captures of desktops to gather information over the course
of an operation.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Investigate if the script stores the captured data locally.
- Investigate if the script contains exfiltration capabilities and the destination of this exfiltration.
- Assess network data to determine if the host communicated with the exfiltration server.

### False positive analysis

- Regular users do not have a business justification for using scripting utilities to take screenshots, which makes false
positives unlikely. In the case of authorized benign true positives (B-TPs), exceptions can be added.

### Related rules

- PowerShell Keylogging Script - bd2c86a0-8b61-4457-ab38-96943984e889

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1113', 'name': 'Screen Capture', 'reference': 'https://attack.mitre.org/techniques/T1113/'}], 'tactic': {'id': 'TA0009', 'name': 'Collection', 'reference': 'https://attack.mitre.org/tactics/TA0009/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'name': 'Command and Scripting Interpreter', 'subtechnique': [{'id': 'T1059.001', 'reference': 'https://attack.mitre.org/techniques/T1059/001/', 'name': 'PowerShell'}]}], 'tactic': {'id': 'TA0002', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'name': 'Execution'}}]",,,,,,,,,,,,,,,,,,,
210,2020/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of WinRar or 7z to create an encrypted files. Adversaries will often compress and encrypt data in
preparation for exfiltration.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Encrypting Files with WinRar or 7z,['https://www.welivesecurity.com/2020/12/02/turla-crutch-keeping-back-door-open/'],47,45d273fb-1dca-457d-9855-bcb302180c21,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Collection', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  ((process.name:""rar.exe"" or process.code_signature.subject_name == ""win.rar GmbH"" or
      process.pe.original_file_name == ""Command line RAR"") and
    process.args == ""a"" and process.args : (""-hp*"", ""-p*"", ""-dw"", ""-tb"", ""-ta"", ""/hp*"", ""/p*"", ""/dw"", ""/tb"", ""/ta""))

  or
  (process.pe.original_file_name in (""7z.exe"", ""7za.exe"") and
     process.args == ""a"" and process.args : (""-p*"", ""-sdel""))

  /* uncomment if noisy for backup software related FPs */
  /* not process.parent.executable : (""C:\\Program Files\\*.exe"", ""C:\\Program Files (x86)\\*.exe"") */
",now-9m,,"## Triage and analysis

### Investigating Encrypting Files with WinRar or 7z

Attackers may compress and/or encrypt data collected before exfiltration. Compressing the data can help obfuscate the
collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is
being exfiltrated from detection or make exfiltration less apparent upon inspection by a defender.

These steps are usually done in preparation for exfiltration, meaning the attack may be in its final stages.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Retrieve the encrypted file.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check if the password used in the encryption was included in the command line.
- Decrypt the `.rar`/`.zip` and check if the information is sensitive.
- If the password is not available, and the format is `.zip` or the option used in WinRAR is not the `-hp`, list the
file names included in the encrypted file.
- Investigate if the file was transferred to an attacker-controlled server.

### False positive analysis

- Backup software can use these utilities. Check the `process.parent.executable` and
`process.parent.command_line` fields to determine what triggered the encryption.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Prioritize cases that involve personally identifiable information (PII) or other classified data.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1560', 'name': 'Archive Collected Data', 'reference': 'https://attack.mitre.org/techniques/T1560/', 'subtechnique': [{'id': 'T1560.001', 'name': 'Archive via Utility', 'reference': 'https://attack.mitre.org/techniques/T1560/001/'}]}], 'tactic': {'id': 'TA0009', 'name': 'Collection', 'reference': 'https://attack.mitre.org/tactics/TA0009/'}}]",,,,,,,,,,,,,,,,,,,
211,2020/03/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies certutil.exe making a network connection. Adversaries could abuse certutil.exe to download a certificate, or
malware, from a remote URL.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Network Connection via Certutil,"['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml', 'https://frsecure.com/malware-incident-response-playbook/']",21,3838e0e3-1850-4850-a411-2e8c5ba40ba8,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",,eql,"sequence by process.entity_id
  [process where process.name : ""certutil.exe"" and event.type == ""start""]
  [network where process.name : ""certutil.exe"" and
    not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
                                  ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"",
                                  ""192.0.0.171/32"", ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"",
                                  ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"", ""192.175.48.0/24"",
                                  ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
                                  ""FE80::/10"", ""FF00::/8"")]
",now-9m,,"## Triage and analysis

### Investigating Network Connection via Certutil

Attackers can abuse `certutil.exe` to download malware, offensive security tools, and certificates from external sources
in order to take the next steps in a compromised environment.

This rule looks for network events where `certutil.exe` contacts IP ranges other than the ones specified in
[IANA IPv4 Special-Purpose Address Registry](https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml)

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate if the downloaded file was executed.
- Determine the context in which `certutil.exe` and the file were run.
- Retrieve the downloaded file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This mechanism can be used legitimately. If trusted software uses this command and the triage has not identified
anything suspicious, this alert can be closed as a false positive.
- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination
of user and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
212,2020/11/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Adversaries may implement command and control (C2) communications that use common web services to hide their
activity. This attack technique is typically targeted at an organization and uses web services common to the victim
network, which allows the adversary to blend into legitimate traffic activity. These popular services are typically
targeted since they have most likely been used before compromise, which helps malicious traffic blend in.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Connection to Commonly Abused Web Services,,21,66883649-f908-4a5b-a1e0-54090a1d3a32,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"network where network.protocol == ""dns"" and
    process.name != null and user.id not in (""S-1-5-18"", ""S-1-5-19"", ""S-1-5-20"") and
    /* Add new WebSvc domains here */
    dns.question.name :
    (
        ""raw.githubusercontent.*"",
        ""*.pastebin.*"",
        ""*drive.google.*"",
        ""*docs.live.*"",
        ""*api.dropboxapi.*"",
        ""*dropboxusercontent.*"",
        ""*onedrive.*"",
        ""*4shared.*"",
        ""*.file.io"",
        ""*filebin.net"",
        ""*slack-files.com"",
        ""*ghostbin.*"",
        ""*ngrok.*"",
        ""*portmap.*"",
        ""*serveo.net"",
        ""*localtunnel.me"",
        ""*pagekite.me"",
        ""*localxpose.io"",
        ""*notabug.org"",
        ""rawcdn.githack.*"",
        ""paste.nrecom.net"",
        ""zerobin.net"",
        ""controlc.com"",
        ""requestbin.net"",
        ""cdn.discordapp.com"",
        ""discordapp.com"",
        ""discord.com""
    ) and
    /* Insert noisy false positives here */
    not process.executable :
    (
      ""?:\\Program Files\\*.exe"",
      ""?:\\Program Files (x86)\\*.exe"",
      ""?:\\Windows\\System32\\WWAHost.exe"",
      ""?:\\Windows\\System32\\smartscreen.exe"",
      ""?:\\Windows\\System32\\MicrosoftEdgeCP.exe"",
      ""?:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*\\MsMpEng.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Programs\\Fiddler\\Fiddler.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe"",
      ""?:\\Windows\\system32\\mobsync.exe"",
      ""?:\\Windows\\SysWOW64\\mobsync.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Discord\\app-*\\Discord.exe""
    )
",now-9m,,"## Triage and analysis

### Investigating Connection to Commonly Abused Web Services

Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised
system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the
likelihood that hosts within a network are already communicating with them prior to a compromise.

This rule looks for processes outside known legitimate program locations communicating with a list of services that can
be abused for exfiltration or command and control.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Verify whether the digital signature exists in the executable.
- Identify the operation type (upload, download, tunneling, etc.).
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This rule has a high chance to produce false positives because it detects communication with legitimate services. Noisy
false positives can be added as exceptions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1102', 'name': 'Web Service', 'reference': 'https://attack.mitre.org/techniques/T1102/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1567', 'name': 'Exfiltration Over Web Service', 'reference': 'https://attack.mitre.org/techniques/T1567/', 'subtechnique': [{'id': 'T1567.001', 'name': 'Exfiltration to Code Repository', 'reference': 'https://attack.mitre.org/techniques/T1567/001/'}, {'id': 'T1567.002', 'name': 'Exfiltration to Cloud Storage', 'reference': 'https://attack.mitre.org/techniques/T1567/002/'}]}], 'tactic': {'id': 'TA0010', 'name': 'Exfiltration', 'reference': 'https://attack.mitre.org/tactics/TA0010/'}}]",,,,,,,,,,,,,,,,,,,
213,2020/11/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule identifies a large number (15) of nslookup.exe executions with an explicit query type from the same host. This
may indicate command and control activity utilizing the DNS protocol.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",kuery,Elastic License v2,Potential DNS Tunneling via NsLookup,['https://unit42.paloaltonetworks.com/dns-tunneling-in-the-wild-overview-of-oilrigs-dns-tunneling/'],47,3a59fc81-99d3-47ea-8cd6-d48d561fca20,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",,threshold,"event.category:process and event.type:start and process.name:nslookup.exe and process.args:(-querytype=* or -qt=* or -q=* or -type=*)
",now-9m,,"## Triage and analysis

### Investigating Potential DNS Tunneling via NsLookup

Attackers can abuse existing network rules that allow DNS communication with external resources to use the protocol as
their command and control and/or exfiltration channel.

DNS queries can be used to infiltrate data such as commands to be run, malicious files, etc., and also for exfiltration,
since queries can be used to send data to the attacker-controlled DNS server. This process is commonly known as DNS tunneling.

More information on how tunneling works and how it can be abused can be found on
[Palo Alto Unit42 Research](https://unit42.paloaltonetworks.com/dns-tunneling-how-dns-can-be-abused-by-malicious-actors).

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the DNS query and identify the information sent.
- Extract this communication's indicators of compromise (IoCs) and use traffic logs to search for other potentially
compromised hosts.

### False positive analysis

- This mechanism can be used legitimately. If the parent process is trusted and the data sent is not sensitive nor
command and control related, this alert can be closed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Immediately block the identified indicators of compromise (IoCs).
- Implement any temporary network rules, procedures, and segmentation required to contain the attack.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Update firewall rules to be more restrictive.
- Reimage the host operating system or restore the compromised files to clean versions.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'subtechnique': [{'id': 'T1071.004', 'name': 'DNS', 'reference': 'https://attack.mitre.org/techniques/T1071/004/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]","{'field': ['host.id'], 'value': 15}",,,,,,,,,,,,,,,,,,
214,2020/11/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies unusual processes connecting to domains using known free SSL certificates. Adversaries may employ a known
encryption algorithm to conceal command and control traffic.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Connection to Commonly Abused Free SSL Certificate Providers,,21,e3cf38fa-d5b8-46cc-87f9-4a7513e4281d,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control']",event.ingested,eql,"network where network.protocol == ""dns"" and
  /* Add new free SSL certificate provider domains here */
  dns.question.name : (""*letsencrypt.org"", ""*.sslforfree.com"", ""*.zerossl.com"", ""*.freessl.org"") and

  /* Native Windows process paths that are unlikely to have network connections to domains secured using free SSL certificates */
  process.executable : (""C:\\Windows\\System32\\*.exe"",
                        ""C:\\Windows\\System\\*.exe"",
	                  ""C:\\Windows\\SysWOW64\\*.exe"",
		          ""C:\\Windows\\Microsoft.NET\\Framework*\\*.exe"",
		          ""C:\\Windows\\explorer.exe"",
		          ""C:\\Windows\\notepad.exe"") and

  /* Insert noisy false positives here */
  not process.name : (""svchost.exe"", ""MicrosoftEdge*.exe"", ""msedge.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1573', 'name': 'Encrypted Channel', 'reference': 'https://attack.mitre.org/techniques/T1573/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
215,2020/11/28,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies instances of Internet Explorer (iexplore.exe) being started via the Component Object Model (COM) making
unusual network connections. Adversaries could abuse Internet Explorer via COM to avoid suspicious processes making
network connections and bypass host-based firewall restrictions.
",['Processes such as MS Office using IEproxy to render HTML content.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Command and Control via Internet Explorer,,47,acd611f3-2b93-47b3-a0a3-7723bcc46f6d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control']",,eql,"sequence by host.id, user.name with maxspan = 5s
  [library where dll.name : ""IEProxy.dll"" and process.name : (""rundll32.exe"", ""regsvr32.exe"")]
  [process where event.type == ""start"" and process.parent.name : ""iexplore.exe"" and process.parent.args : ""-Embedding""]
  /* IE started via COM in normal conditions makes few connections, mainly to Microsoft and OCSP related domains, add FPs here */
  [network where network.protocol == ""dns"" and process.name : ""iexplore.exe"" and
   not dns.question.name :
   (
    ""*.microsoft.com"",
    ""*.digicert.com"",
    ""*.msocsp.com"",
    ""*.windowsupdate.com"",
    ""*.bing.com"",
    ""*.identrust.com"",
    ""*.sharepoint.com"",
    ""*.office365.com"",
    ""*.office.com""
    )
  ] /* with runs=5 */
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'name': 'Application Layer Protocol', 'reference': 'https://attack.mitre.org/techniques/T1071/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1559', 'name': 'Inter-Process Communication', 'reference': 'https://attack.mitre.org/techniques/T1559/', 'subtechnique': [{'id': 'T1559.001', 'name': 'Component Object Model', 'reference': 'https://attack.mitre.org/techniques/T1559/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
216,2020/11/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies the creation of a new port forwarding rule. An adversary may abuse this technique to bypass network
segmentation restrictions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Port Forwarding Rule Addition,['https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html'],47,3535c8bb-3bd5-40f4-ae32-b7cd589d5372,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"registry where registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\Services\\PortProxy\\v4tov4\\*""
",now-9m,,"## Triage and analysis

### Investigating Port Forwarding Rule Addition

Network port forwarding is a mechanism to redirect incoming TCP connections (IPv4 or IPv6) from the local TCP port to
any other port number, or even to a port on a remote computer.

Attackers may configure port forwarding rules to bypass network segmentation restrictions, using the host as a jump box
to access previously unreachable systems.

This rule monitors the modifications to the `HKLM\SYSTEM\*ControlSet*\Services\PortProxy\v4tov4\` subkeys.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account and system owners and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Identify the target host IP address, check the connections originating from the host where the modification occurred,
and inspect the credentials used.
  - Investigate suspicious login activity, such as unauthorized access and logins from outside working hours and unusual locations.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the Administrator is aware of the activity
and there are justifications for this configuration.
- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination
of user and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Delete the port forwarding rule.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1572', 'name': 'Protocol Tunneling', 'reference': 'https://attack.mitre.org/techniques/T1572/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
217,2020/10/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to
enable routing of network packets that would otherwise not reach their intended destination.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Remote Desktop Tunneling Detected,['https://blog.netspi.com/how-to-access-rdp-over-a-reverse-ssh-tunnel/'],73,76fd43b7-3480-4dd9-8ad7-8bd36bfad92f,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  /* RDP port and usual SSH tunneling related switches in command line */
  process.args : ""*:3389"" and
  process.args : (""-L"", ""-P"", ""-R"", ""-pw"", ""-ssh"")
",now-9m,,"## Triage and analysis

### Investigating Potential Remote Desktop Tunneling Detected

Protocol Tunneling is a mechanism that involves explicitly encapsulating a protocol within another for various use cases,
ranging from providing an outer layer of encryption (similar to a VPN) to enabling traffic that network appliances would
filter to reach their destination.

Attackers may tunnel Remote Desktop Protocol (RDP) traffic through other protocols like Secure Shell (SSH) to bypass network restrictions that block incoming RDP
connections but may be more permissive to other protocols.

This rule looks for command lines involving the `3389` port, which RDP uses by default and options commonly associated
with tools that perform tunneling.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account and system owners and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Examine network data to determine if the host communicated with external servers using the tunnel.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.
- Investigate the command line for the execution of programs that are unrelated to tunneling, like Remote Desktop clients.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Take the necessary actions to disable the tunneling, which can be a process kill, service deletion, registry key
modification, etc. Inspect the host to learn which method was used and to determine a response for the case.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1572', 'name': 'Protocol Tunneling', 'reference': 'https://attack.mitre.org/techniques/T1572/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
218,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to
download arbitrary files as an alternative to certutil.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Remote File Download via Desktopimgdownldr Utility,['https://labs.sentinelone.com/living-off-windows-land-a-new-native-file-downldr/'],47,15c0b7a7-9c34-4869-b25b-fa6518414899,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""desktopimgdownldr.exe"" or process.pe.original_file_name == ""desktopimgdownldr.exe"") and
  process.args : ""/lockscreenurl:http*""
",now-9m,,"## Triage and analysis

### Investigating Remote File Download via Desktopimgdownldr Utility

Attackers commonly transfer tooling or malware from external systems into a compromised environment using the command
and control channel. However, they can also abuse signed utilities to drop these files.

The `Desktopimgdownldr.exe` utility is used to to configure lockscreen/desktop image, and can be abused with the
`lockscreenurl` argument to download remote files and tools, this rule looks for this behavior.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Check the reputation of the domain or IP address used to host the downloaded file or if the user downloaded the file
from an internal system.
- Retrieve the file and determine if it is malicious:
  - Identify the file type.
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unusual but can be done by administrators. Benign true positives (B-TPs) can be added as exceptions
if necessary.
- Analysts can dismiss the alert if the downloaded file is a legitimate image.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
219,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Identifies the Windows Defender configuration utility (MpCmdRun.exe) being used to download a remote file.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Remote File Download via MpCmdRun,"['https://twitter.com/mohammadaskar2/status/1301263551638761477', 'https://www.bleepingcomputer.com/news/microsoft/microsoft-defender-can-ironically-be-used-to-download-malware/']",47,c6453e73-90eb-4fe7-a98c-cde7bbfc504a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""MpCmdRun.exe"" or process.pe.original_file_name == ""MpCmdRun.exe"") and
   process.args : ""-DownloadFile"" and process.args : ""-url"" and process.args : ""-path""
",now-9m,,"## Triage and analysis

### Investigating Remote File Download via MpCmdRun

Attackers commonly transfer tooling or malware from external systems into a compromised environment using the command
and control channel. However, they can also abuse signed utilities to drop these files.

The `MpCmdRun.exe` is a command-line tool part of Windows Defender and is used to manage various Microsoft Windows
Defender Antivirus settings and perform certain tasks. It can also be abused by attackers to download remote files,
including malware and offensive tooling. This rule looks for the patterns used to perform downloads using the utility.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check the reputation of the domain or IP address used to host the downloaded file.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
220,2020/11/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Identifies powershell.exe being used to download an executable file from an untrusted remote destination.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Remote File Download via PowerShell,,47,33f306e8-417c-411b-965c-c2812d6d3f4d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",,eql,"sequence by host.id, process.entity_id with maxspan=30s
  [network where process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and network.protocol == ""dns"" and
   not dns.question.name : (""localhost"", ""*.microsoft.com"", ""*.azureedge.net"", ""*.powershellgallery.com"", ""*.windowsupdate.com"", ""metadata.google.internal"") and
   not user.domain : ""NT AUTHORITY""]
    [file where process.name : ""powershell.exe"" and event.type == ""creation"" and file.extension : (""exe"", ""dll"", ""ps1"", ""bat"") and
   not file.name : ""__PSScriptPolicy*.ps1""]
",now-9m,,"## Triage and analysis

### Investigating Remote File Download via PowerShell

Attackers commonly transfer tooling or malware from external systems into a compromised environment using the command
and control channel. However, they can also abuse signed utilities to drop these files.

PowerShell is one of system administrators' main tools for automation, report routines, and other tasks. This makes it
available for use in various environments and creates an attractive way for attackers to execute code and perform
actions. This rule correlates network and file events to detect downloads of executable and script files performed using
PowerShell.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check the reputation of the domain or IP address used to host the downloaded file.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- Administrators can use PowerShell legitimately to download executable and script files. Analysts can dismiss the alert
if the Administrator is aware of the activity and the triage has not identified suspicious or malicious files.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
221,2020/11/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies built-in Windows script interpreters (cscript.exe or wscript.exe) being used to download an executable file
from a remote destination.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Remote File Download via Script Interpreter,,47,1d276579-3380-4095-ad38-e596a01bc64f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",,eql,"sequence by host.id, process.entity_id
  [network where process.name : (""wscript.exe"", ""cscript.exe"") and network.protocol != ""dns"" and
   network.direction : (""outgoing"", ""egress"") and network.type == ""ipv4"" and destination.ip != ""127.0.0.1""
  ]
  [file where event.type == ""creation"" and file.extension : (""exe"", ""dll"")]
",now-9m,,"## Triage and analysis

### Investigating Remote File Download via Script Interpreter

The Windows Script Host (WSH) is a Windows automation technology, which is ideal for non-interactive scripting needs,
such as logon scripting, administrative scripting, and machine automation.

Attackers commonly use WSH scripts as their initial access method, acting like droppers for second stage payloads, but
can also use them to download tools and utilities needed to accomplish their goals.

This rule looks for DLLs and executables downloaded using `cscript.exe` or `wscript.exe`.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Retrieve the script file and the executable involved and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
  - Manually analyze the script to determine if malicious capabilities are present.
- Investigate whether the potential malware ran successfully, is active on the host, or was stopped by defenses.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.

### False positive analysis

- The usage of these script engines by regular users is unlikely. In the case of authorized benign true positives
(B-TPs), exceptions can be added.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
222,2020/12/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"The malware known as SUNBURST targets the SolarWind's Orion business software for command and control. This rule detects
post-exploitation command and control activity of the SUNBURST backdoor.
",,['logs-endpoint.events.*'],eql,Elastic License v2,SUNBURST Command and Control Activity,['https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'],73,22599847-5d13-48cb-8872-5796fee8692b,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"network where event.type == ""protocol"" and network.protocol == ""http"" and
  process.name : (""ConfigurationWizard.exe"",
                  ""NetFlowService.exe"",
                  ""NetflowDatabaseMaintenance.exe"",
                  ""SolarWinds.Administration.exe"",
                  ""SolarWinds.BusinessLayerHost.exe"",
                  ""SolarWinds.BusinessLayerHostx64.exe"",
                  ""SolarWinds.Collector.Service.exe"",
                  ""SolarwindsDiagnostics.exe"") and
  (
    (
      (http.request.body.content : ""*/swip/Upload.ashx*"" and http.request.body.content : (""POST*"", ""PUT*"")) or
      (http.request.body.content : (""*/swip/SystemDescription*"", ""*/swip/Events*"") and http.request.body.content : (""GET*"", ""HEAD*""))
    ) and
    not http.request.body.content : ""*solarwinds.com*""
  )
",now-9m,,"## Triage and analysis

### Investigating SUNBURST Command and Control Activity

SUNBURST is a trojanized version of a digitally signed SolarWinds Orion plugin called
SolarWinds.Orion.Core.BusinessLayer.dll. The plugin contains a backdoor that communicates via HTTP to third-party
servers. After an initial dormant period of up to two weeks, SUNBURST may retrieve and execute commands that instruct
the backdoor to transfer files, execute files, profile the system, reboot the system, and disable system services.
The malware's network traffic attempts to blend in with legitimate SolarWinds activity by imitating the Orion
Improvement Program (OIP) protocol, and the malware stores persistent state data within legitimate plugin configuration files. The
backdoor uses multiple obfuscated blocklists to identify processes, services, and drivers associated with forensic and
anti-virus tools.

More details on SUNBURST can be found on the [Mandiant Report](https://www.mandiant.com/resources/sunburst-additional-technical-details).

This rule identifies suspicious network connections that attempt to blend in with legitimate SolarWinds activity
by imitating the Orion Improvement Program (OIP) protocol behavior.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Retrieve the executable involved:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Investigate whether the potential malware ran successfully, is active on the host, or was stopped by defenses.
- Investigate the network traffic.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- This activity should not happen legitimately. The security team should address any potential benign true positive
(B-TP), as this configuration can put the environment at risk.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Reimage the host operating system and restore compromised files to clean versions.
- Upgrade SolarWinds systems to the latest version to eradicate the chance of reinfection by abusing the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1071', 'reference': 'https://attack.mitre.org/techniques/T1071/', 'name': 'Application Layer Protocol', 'subtechnique': [{'id': 'T1071.001', 'name': 'Web Protocols', 'reference': 'https://attack.mitre.org/techniques/T1071/001/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1195', 'name': 'Supply Chain Compromise', 'reference': 'https://attack.mitre.org/techniques/T1195/', 'subtechnique': [{'id': 'T1195.002', 'name': 'Compromise Software Supply Chain', 'reference': 'https://attack.mitre.org/techniques/T1195/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
223,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Identifies an executable or script file remotely downloaded via a TeamViewer transfer session.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Remote File Copy via TeamViewer,['https://blog.menasec.net/2019/11/hunting-for-suspicious-use-of.html'],47,b25a7df2-120a-4db2-bd3f-3e4b86b24bee,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Command and Control', 'has_guide']",event.ingested,eql,"file where event.type == ""creation"" and process.name : ""TeamViewer.exe"" and
  file.extension : (""exe"", ""dll"", ""scr"", ""com"", ""bat"", ""ps1"", ""vbs"", ""vbe"", ""js"", ""wsh"", ""hta"")
",now-9m,,"## Triage and analysis

### Investigating Remote File Copy via TeamViewer

Attackers commonly transfer tooling or malware from external systems into a compromised environment using the command
and control channel. However, they can also abuse legitimate utilities to drop these files.

TeamViewer is a remote access and remote control tool used by helpdesks and system administrators to perform various
support activities. It is also frequently used by attackers and scammers to deploy malware interactively and other
malicious activities. This rule looks for the TeamViewer process creating files with suspicious extensions.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Contact the user to gather information about who and why was conducting the remote access.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check whether the company uses TeamViewer for the support activities and if there is a support ticket related to this
access.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the company relies on TeamViewer to conduct
remote access and the triage has not identified suspicious or malicious files.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}, {'id': 'T1219', 'name': 'Remote Access Software', 'reference': 'https://attack.mitre.org/techniques/T1219/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
224,2020/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Identifies multiple consecutive logon failures targeting an Admin account from the same source address and within a
short time interval. Adversaries will often brute force login attempts across multiple users with a common or known
password, in an attempt to gain access to accounts.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Privileged Account Brute Force,['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625'],47,f9790abf-bd0c-45f9-8b5f-d0b74015e029,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, source.ip with maxspan=10s
  [authentication where event.action == ""logon-failed"" and
    winlog.logon.type : ""Network"" and
    source.ip != null and source.ip != ""127.0.0.1"" and source.ip != ""::1"" and user.name : ""*admin*"" and

    /* noisy failure status codes often associated to authentication misconfiguration */
    not winlog.event_data.Status : (""0xC000015B"", ""0XC000005E"", ""0XC0000133"", ""0XC0000192"")] with runs=5
",now-9m,,"## Triage and analysis

#### Possible investigation steps

- Investigate the logon failure reason code and the targeted user names.
- Investigate the source IP address of the failed Network Logon attempts.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the source and the target computer and their roles in the IT environment.

### False positive analysis

- Authentication misconfiguration or obsolete credentials.
- Service account password expired.
- Trust relationship between the primary domain and the trusted domain issue.
- Infrastructure or availability issue.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If the host is a domain controller (DC):
  - Activate your incident response plan for total Active Directory compromise.
  - Review the privileges assigned to users that can access the DCs, to ensure that the least privilege principle is
  being followed and to reduce the attack surface.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/', 'subtechnique': [{'id': 'T1110.001', 'name': 'Password Guessing', 'reference': 'https://attack.mitre.org/techniques/T1110/001/'}, {'id': 'T1110.003', 'name': 'Password Spraying', 'reference': 'https://attack.mitre.org/techniques/T1110/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
225,2020/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Identifies multiple logon failures followed by a successful one from the same source address. Adversaries will often
brute force login attempts across multiple users with a common or known password, in an attempt to gain access to
accounts.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Multiple Logon Failure Followed by Logon Success,['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625'],47,4e85dc8a-3e41-40d8-bc28-91af7ac6cf60,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, source.ip with maxspan=5s
  [authentication where event.action == ""logon-failed"" and
    /* event 4625 need to be logged */
    winlog.logon.type : ""Network"" and
    source.ip != null and source.ip != ""127.0.0.1"" and source.ip != ""::1"" and
    not user.name : (""ANONYMOUS LOGON"", ""-"", ""*$"") and not user.domain == ""NT AUTHORITY"" and

    /* noisy failure status codes often associated to authentication misconfiguration */
    not winlog.event_data.Status : (""0xC000015B"", ""0XC000005E"", ""0XC0000133"", ""0XC0000192"")] with runs=5
  [authentication where event.action == ""logged-in"" and
    /* event 4624 need to be logged */
    winlog.logon.type : ""Network"" and
    source.ip != null and source.ip != ""127.0.0.1"" and source.ip != ""::1"" and
    not user.name : (""ANONYMOUS LOGON"", ""-"", ""*$"") and not user.domain == ""NT AUTHORITY""]
",now-9m,,"## Triage and analysis

#### Possible investigation steps

- Investigate the logon failure reason code and the targeted user names.
- Investigate the source IP address of the failed Network Logon attempts.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the source and the target computer and their roles in the IT environment.

### False positive analysis

- Authentication misconfiguration or obsolete credentials.
- Service account password expired.
- Trust relationship between the primary domain and the trusted domain issue.
- Infrastructure or availability issue.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If the host is a domain controller (DC):
  - Activate your incident response plan for total Active Directory compromise.
  - Review the privileges assigned to users that can access the DCs, to ensure that the least privilege principle is
  being followed and to reduce the attack surface.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/', 'subtechnique': [{'id': 'T1110.001', 'name': 'Password Guessing', 'reference': 'https://attack.mitre.org/techniques/T1110/001/'}, {'id': 'T1110.003', 'name': 'Password Spraying', 'reference': 'https://attack.mitre.org/techniques/T1110/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
226,2020/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Identifies multiple consecutive logon failures from the same source address and within a short time interval.
Adversaries will often brute force login attempts across multiple users with a common or known password, in an attempt
to gain access to accounts.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Multiple Logon Failure from the same Source Address,['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625'],47,48b6edfc-079d-4907-b43c-baffa243270d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, source.ip with maxspan=10s
  [authentication where event.action == ""logon-failed"" and
    /* event 4625 need to be logged */
    winlog.logon.type : ""Network"" and
    source.ip != null and source.ip != ""127.0.0.1"" and source.ip != ""::1"" and
    not user.name : (""ANONYMOUS LOGON"", ""-"", ""*$"") and not user.domain == ""NT AUTHORITY"" and

    /* 
    noisy failure status codes often associated to authentication misconfiguration :
     0xC000015B - The user has not been granted the requested logon type (also called the logon right) at this machine.
     0XC000005E	- There are currently no logon servers available to service the logon request.
     0XC0000133	- Clocks between DC and other computer too far out of sync.
     0XC0000192	An attempt was made to logon, but the Netlogon service was not started.
    */
    not winlog.event_data.Status : (""0xC000015B"", ""0XC000005E"", ""0XC0000133"", ""0XC0000192"")] with runs=10
",now-9m,,"## Triage and analysis

#### Possible investigation steps

- Investigate the logon failure reason code and the targeted user names.
- Investigate the source IP address of the failed Network Logon attempts.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the source and the target computer and their roles in the IT environment.

### False positive analysis

- Authentication misconfiguration or obsolete credentials.
- Service account password expired.
- Trust relationship between the primary domain and the trusted domain issue.
- Infrastructure or availability issue.

### Related rules

- Multiple Logon Failure Followed by Logon Success - 4e85dc8a-3e41-40d8-bc28-91af7ac6cf60

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If the host is a domain controller (DC):
  - Activate your incident response plan for total Active Directory compromise.
  - Review the privileges assigned to users that can access the DCs, to ensure that the least privilege principle is
  being followed and to reduce the attack surface.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1110', 'name': 'Brute Force', 'reference': 'https://attack.mitre.org/techniques/T1110/', 'subtechnique': [{'id': 'T1110.001', 'name': 'Password Guessing', 'reference': 'https://attack.mitre.org/techniques/T1110/001/'}, {'id': 'T1110.003', 'name': 'Password Spraying', 'reference': 'https://attack.mitre.org/techniques/T1110/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
227,2020/11/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the execution of known Windows utilities often abused to dump LSASS memory or the Active Directory database
(NTDS.dit) in preparation for credential access.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Credential Access via Windows Utilities,['https://lolbas-project.github.io/'],73,00140285-b827-4aee-aa09-8113f58a08f3,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
/* update here with any new lolbas with dump capability */
(process.pe.original_file_name == ""procdump"" and process.args : ""-ma"") or
(process.name : ""ProcessDump.exe"" and not process.parent.executable regex~ """"""C:\\Program Files( \(x86\))?\\Cisco Systems\\.*"""""") or
(process.pe.original_file_name == ""WriteMiniDump.exe"" and not process.parent.executable regex~ """"""C:\\Program Files( \(x86\))?\\Steam\\.*"""""") or
(process.pe.original_file_name == ""RUNDLL32.EXE"" and (process.args : ""MiniDump*"" or process.command_line : ""*comsvcs.dll*#24*"")) or
(process.pe.original_file_name == ""RdrLeakDiag.exe"" and process.args : ""/fullmemdmp"") or
(process.pe.original_file_name == ""SqlDumper.exe"" and process.args : ""0x01100*"") or
(process.pe.original_file_name == ""TTTracer.exe"" and process.args : ""-dumpFull"" and process.args : ""-attach"") or
(process.pe.original_file_name == ""ntdsutil.exe"" and process.args : ""create*full*"") or
(process.pe.original_file_name == ""diskshadow.exe"" and process.args : ""/s"")
",now-9m,,"## Triage and analysis

### Investigating Potential Credential Access via Windows Utilities

Local Security Authority Server Service (LSASS) is a process in Microsoft Windows operating systems that is responsible
for enforcing security policy on the system. It verifies users logging on to a Windows computer or server, handles
password changes, and creates access tokens.

The `Ntds.dit` file is a database that stores Active Directory data, including information about user objects, groups, and
group membership.

This rule looks for the execution of utilities that can extract credential data from the LSASS memory and Active
Directory `Ntds.dit` file.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Examine the command line to identify what information was targeted.
- Identify the target computer and its role in the IT environment.

### False positive analysis

- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious
must be monitored by the security team.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If the host is a domain controller (DC):
  - Activate your incident response plan for total Active Directory compromise.
  - Review the privileges assigned to users that can access the DCs, to ensure that the least privilege principle is
  being followed and to reduce the attack surface.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}, {'id': 'T1003.003', 'name': 'NTDS', 'reference': 'https://attack.mitre.org/techniques/T1003/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
228,2020/11/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,"['Elastic', 'Austin Songer']","Identifies a copy operation of the Active Directory Domain Database (ntds.dit) or Security Account Manager (SAM) files.
Those files contain sensitive information including hashed domain and/or local credentials.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,NTDS or SAM Database File Copied,"['https://thedfirreport.com/2020/11/23/pysa-mespinoza-ransomware/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.002/T1003.002.md#atomic-test-3---esentutlexe-sam-copy']",73,3bc6deaa-fbd4-433a-ae21-3e892f95624f,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type == ""start"" and
  (
    (process.pe.original_file_name in (""Cmd.Exe"", ""PowerShell.EXE"", ""XCOPY.EXE"") and
       process.args : (""copy"", ""xcopy"", ""Copy-Item"", ""move"", ""cp"", ""mv"")
    ) or
    (process.pe.original_file_name : ""esentutl.exe"" and process.args : (""*/y*"", ""*/vss*"", ""*/d*""))
  ) and
  process.args : (""*\\ntds.dit"", ""*\\config\\SAM"", ""\\*\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*\\*"", ""*/system32/config/SAM*"")
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.002', 'name': 'Security Account Manager', 'reference': 'https://attack.mitre.org/techniques/T1003/002/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
229,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, loaded DLLs (dynamically linked libraries) responsible for Windows
credential management. This technique is sometimes used for credential dumping.
",['The Build Engine is commonly used by Windows developers but use by non-engineers is unusual.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Credential Access via Trusted Developer Utility,,73,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae5,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",,eql,"sequence by process.entity_id
 [process where event.type == ""start"" and (process.name : ""MSBuild.exe"" or process.pe.original_file_name == ""MSBuild.exe"")]
 [any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
  (dll.name : (""vaultcli.dll"", ""SAMLib.DLL"") or file.name : (""vaultcli.dll"", ""SAMLib.DLL""))]
",now-9m,,"## Triage and analysis

### Investigating Potential Credential Access via Trusted Developer Utility

The Microsoft Build Engine is a platform for building applications. This engine, also known as MSBuild, provides an XML
schema for a project file that controls how the build platform processes and builds software.

Adversaries can abuse MSBuild to proxy the execution of malicious code. The inline task capability of MSBuild that was
introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file. MSBuild will
compile and execute the inline task. `MSBuild.exe` is a signed Microsoft binary, and the execution of code using it can bypass
application control defenses that are configured to allow `MSBuild.exe` execution.

This rule looks for the MSBuild process loading `vaultcli.dll` or `SAMLib.DLL`, which indicates the execution of
credential access activities.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Examine the command line to identify the `.csproj` file location.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target
host after the registry modification.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'name': 'OS Credential Dumping'}], 'tactic': {'id': 'TA0006', 'reference': 'https://attack.mitre.org/tactics/TA0006/', 'name': 'Credential Access'}}]",,,,,,,,,,,,,,,,,,,
230,2022/02/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule identifies when a User Account starts the Active Directory Replication Process. Attackers can use the DCSync
technique to get credential information of individual accounts or the entire domain, thus compromising the entire
domain.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Potential Credential Access via DCSync,"['https://threathunterplaybook.com/notebooks/windows/06_credential_access/WIN-180815210510.html', 'https://threathunterplaybook.com/library/windows/active_directory_replication.html?highlight=dcsync#directory-replication-services-auditing', 'https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/security/win_ad_replication_non_machine_account.yml', 'https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0027_windows_audit_directory_service_access.md', 'https://attack.stealthbits.com/privilege-escalation-using-mimikatz-dcsync', 'https://www.thehacker.recipes/ad/movement/credentials/dumping/dcsync']",73,9f962927-1a4f-45f3-a57b-287f2c7029c1,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'Active Directory', 'has_guide']",event.ingested,eql,"any where event.action == ""Directory Service Access"" and
  event.code == ""4662"" and winlog.event_data.Properties : (

    /* Control Access Rights/Permissions Symbol */

    ""*DS-Replication-Get-Changes*"",
    ""*DS-Replication-Get-Changes-All*"",
    ""*DS-Replication-Get-Changes-In-Filtered-Set*"",

    /* Identifying GUID used in ACE */

    ""*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*"",
    ""*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*"",
    ""*89e95b76-444d-4c62-991a-0facbeda640c*"")

    /* The right to perform an operation controlled by an extended access right. */

    and winlog.event_data.AccessMask : ""0x100"" and
    not winlog.event_data.SubjectUserName : (""*$"", ""MSOL_*"")
",now-9m,,"## Triage and analysis

### Investigating Potential Credential Access via DCSync

Active Directory replication is the process by which the changes that originate on one domain controller are
automatically transferred to other domain controllers that store the same data.

Active Directory data consists of objects that have properties, or attributes. Each object is an instance of an object
class, and object classes and their respective attributes are defined in the Active Directory schema. Objects are
defined by the values of their attributes, and changes to attribute values must be transferred from the domain
controller on which they occur to every other domain controller that stores a replica of an affected object.

Adversaries can use the DCSync technique that uses Windows Domain Controller's API to simulate the replication process
from a remote domain controller, compromising major credential material such as the Kerberos krbtgt keys used
legitimately for tickets creation, but also tickets forging by attackers. This attack requires some extended privileges
to succeed (DS-Replication-Get-Changes and DS-Replication-Get-Changes-All), which are granted by default to members of
the Administrators, Domain Admins, Enterprise Admins, and Domain Controllers groups. Privileged accounts can be abused
to grant controlled objects the right to DCsync/Replicate.

More details can be found on [Threat Hunter Playbook](https://threathunterplaybook.com/library/windows/active_directory_replication.html?highlight=dcsync#directory-replication-services-auditing) and [The Hacker Recipes](https://www.thehacker.recipes/ad/movement/credentials/dumping/dcsync).

This rule monitors for Event ID 4662 (Operation was performed on an Active Directory object) and identifies events that
use the access mask 0x100 (Control Access) and properties that contain at least one of the following or their equivalent:
Schema-Id-GUID (DS-Replication-Get-Changes, DS-Replication-Get-Changes-All, DS-Replication-Get-Changes-In-Filtered-Set).
It also filters out events that use computer accounts and also Azure AD Connect MSOL accounts (more details [here](https://techcommunity.microsoft.com/t5/microsoft-defender-for-identity/ad-connect-msol-user-suspected-dcsync-attack/m-p/788028)).

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account and system owners and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Correlate security events 4662 and 4624 (Logon Type 3) by their Logon ID (`winlog.logon.id`) on the Domain Controller
(DC) that received the replication request. This will tell you where the AD replication request came from, and if it
came from another DC or not.
- Scope which credentials were compromised (for example, whether all accounts were replicated or specific ones).

### False positive analysis

- This activity should not happen legitimately, since replication should be done by Domain Controllers only. Any
potential benign true positive (B-TP) should be mapped and monitored by the security team. Any account that performs
this activity can put the domain at risk for not having the same security standards as computer accounts (which have
long, complex, random passwords that change frequently), exposing it to credential cracking attacks (Kerberoasting,
brute force, etc.).

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If specific credentials were compromised:
  - Reset the password for these accounts and other potentially compromised credentials, like email, business systems,
  and web services.
- If the entire domain or the `krbtgt` user were compromised:
  - Activate your incident response plan for total Active Directory compromise which should include, but not be limited
  to, a password reset (twice) of the `krbtgt` user.
- Investigate how the attacker escalated privileges and identify systems they used to conduct lateral movement. Use this
information to scope ways that the attacker could use to regain access to the environment.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'name': 'OS Credential Dumping', 'subtechnique': [{'id': 'T1003.006', 'reference': 'https://attack.mitre.org/techniques/T1003/006/', 'name': 'DCSync'}]}], 'tactic': {'id': 'TA0006', 'reference': 'https://attack.mitre.org/tactics/TA0006/', 'name': 'Credential Access'}}]",,,,,,,,,,,,,,,,,,,
231,2022/01/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies the modification of an account's Kerberos pre-authentication options. An adversary with GenericWrite/GenericAll rights over
the account can maliciously modify these settings to perform offline password cracking attacks such as AS-REP roasting.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Kerberos Pre-authentication Disabled for User,"['https://harmj0y.medium.com/roasting-as-reps-e6179a65216b', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4738', 'https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0026_windows_audit_user_account_management.md']",47,e514d8cd-ed15-4011-84e2-d15147e059f1,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,query,"event.code:4738 and message:""'Don't Require Preauth' - Enabled""
",now-9m,,"## Triage and analysis

### Investigating Kerberos Pre-authentication Disabled for User

Kerberos pre-authentication is an account protection against offline password cracking. When enabled, a user requesting
access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request
(AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to
successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server
Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is
signed with the user’s password. Microsoft's security monitoring [recommendations](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4738) state that `'Don't Require Preauth' – Enabled` should not be enabled for user accounts because it weakens security for the account’s Kerberos authentication.

AS-REP roasting is an attack against Kerberos for user accounts that do not require pre-authentication, which means that
if the target user has pre-authentication disabled, an attacker can request authentication data for it and get a TGT that
can be brute-forced offline, similarly to Kerberoasting.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Determine if the target account is sensitive or privileged.
- Inspect the account activities for suspicious or abnormal behaviors in the alert timeframe.

### False positive analysis

- Disabling pre-authentication is a bad security practice and should not be allowed in the domain. The security team
should map and monitor any potential benign true positives (B-TPs), especially if the target account is privileged.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Reset the target account's password if there is any risk of TGTs having been retrieved.
- Re-enable the preauthentication option or disable the target account.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit User Account Management' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Account Management >
Audit User Account Management (Success,Failure)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/', 'subtechnique': [{'name': 'AS-REP Roasting', 'id': 'T1558.004', 'reference': 'https://attack.mitre.org/techniques/T1558/004/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
232,2020/08/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation or modification of Domain Backup private keys. Adversaries may extract the Data Protection API
(DPAPI) domain backup key from a Domain Controller (DC) to be able to decrypt any domain user master key file.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Creation or Modification of Domain Backup DPAPI private key,"['https://www.dsinternals.com/en/retrieving-dpapi-backup-keys-from-active-directory/', 'https://posts.specterops.io/operational-guidance-for-offensive-user-dpapi-abuse-1fb7fac8b107']",73,b83a7e96-2eb3-4edf-8346-427b6858d3bd,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"file where event.type != ""deletion"" and file.name : (""ntds_capi_*.pfx"", ""ntds_capi_*.pvk"")
",now-9m,,"## Triage and analysis

Domain DPAPI Backup keys are stored on domain controllers and can be dumped remotely with tools such as Mimikatz. The resulting .pvk private key can be used to decrypt ANY domain user masterkeys, which then can be used to decrypt any secrets protected by those keys.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1552', 'name': 'Unsecured Credentials', 'reference': 'https://attack.mitre.org/techniques/T1552/', 'subtechnique': [{'id': 'T1552.004', 'name': 'Private Keys', 'reference': 'https://attack.mitre.org/techniques/T1552/004/'}]}, {'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
233,2020/11/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],Identifies attempts to export a registry hive which may contain credentials using the Windows reg.exe tool.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Credential Acquisition via Registry Hive Dumping,['https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-the-registry-7512674487f8'],73,a7e7bfa3-088e-4f13-b29e-3986e0e756b8,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
 process.pe.original_file_name == ""reg.exe"" and
 process.args : (""save"", ""export"") and
 process.args : (""hklm\\sam"", ""hklm\\security"")
",now-9m,,"## Triage and analysis

### Investigating Credential Acquisition via Registry Hive Dumping

Dumping registry hives is a common way to access credential information as some hives store credential material.

For example, the SAM hive stores locally cached credentials (SAM Secrets), and the SECURITY hive stores domain cached
credentials (LSA secrets).

Dumping these hives in combination with the SYSTEM hive enables the attacker to decrypt these secrets.

This rule identifies the usage of `reg.exe` to dump SECURITY and/or SAM hives, which potentially indicates the
compromise of the credentials stored in the host.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate if the credential material was exfiltrated or processed locally by other tools.
- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target
host.

### False positive analysis

- Administrators can export registry hives for backup purposes using command line tools like `reg.exe`. Check whether
the user is legitamitely performing this kind of activity.

### Related rules

- Registry Hive File Creation via SMB - a4c7473a-5cb4-4bc1-9d06-e4a75adbc494

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reimage the host operating system and restore compromised files to clean versions.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.002', 'name': 'Security Account Manager', 'reference': 'https://attack.mitre.org/techniques/T1003/002/'}, {'id': 'T1003.004', 'name': 'LSA Secrets', 'reference': 'https://attack.mitre.org/techniques/T1003/004/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
234,2022/08/28,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/28,['Elastic'],"Identifies the enable of the full user-mode dumps feature system-wide. This feature allows Windows Error Reporting (WER)
to collect data after an application crashes. This setting is a requirement for the LSASS Shtinkering attack, which
fakes the communication of a crash on LSASS, generating a dump of the process memory, which gives the attacker access to
the credentials present on the system without having to bring malware to the system. This setting is not enabled by
default, and applications must create their registry subkeys to hold settings that enable them to collect dumps.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Full User-Mode Dumps Enabled System-Wide,"['https://docs.microsoft.com/en-us/windows/win32/wer/collecting-user-mode-dumps', 'https://github.com/deepinstinct/Lsass-Shtinkering', 'https://media.defcon.org/DEF%20CON%2030/DEF%20CON%2030%20presentations/Asaf%20Gilboa%20-%20LSASS%20Shtinkering%20Abusing%20Windows%20Error%20Reporting%20to%20Dump%20LSASS.pdf']",47,220be143-5c67-4fdb-b6ce-dd6826d024fd,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"registry where registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\DumpType"" and
    registry.data.strings : (""2"", ""0x00000002"") and
    not (process.executable : ""?:\\Windows\\system32\\svchost.exe"" and user.id : (""S-1-5-18"", ""S-1-5-19"", ""S-1-5-20""))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1112', 'name': 'Modify Registry', 'reference': 'https://attack.mitre.org/techniques/T1112/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
235,2020/08/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the Internet Information Services (IIS) command-line tool, AppCmd, being used to list passwords. An attacker
with IIS web server access via a web shell can decrypt and dump the IIS AppPool service account password using AppCmd.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft IIS Service Account Password Dumped,['https://blog.netspi.com/decrypting-iis-passwords-to-break-out-of-the-dmz-part-1/'],73,0564fb9d-90b9-4234-a411-82a546dc1343,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type == ""start"" and
   (process.name : ""appcmd.exe"" or process.pe.original_file_name == ""appcmd.exe"") and
   process.args : ""/list"" and process.args : ""/text*password""
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
236,2020/08/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server
access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account
password using aspnet_regiis command.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft IIS Connection Strings Decryption,"['https://blog.netspi.com/decrypting-iis-passwords-to-break-out-of-the-dmz-part-1/', 'https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/greenbug-espionage-telco-south-asia']",73,c25e9c87-95e1-4368-bfab-9fd34cf867ec,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""aspnet_regiis.exe"" or process.pe.original_file_name == ""aspnet_regiis.exe"") and
  process.args : ""connectionStrings"" and process.args : ""-pdf""
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
237,2020/11/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies network connections to the standard Kerberos port from an unusual process. On Windows, the only process that
normally performs Kerberos traffic from a domain joined host is lsass.exe.
",['    HTTP traffic on a non standard port. Verify that the destination IP address is not related to a Domain Controller.\n    '],"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Kerberos Traffic from Unusual Process,,47,897dc6b5-b39f-432a-8d75-d3730d50c782,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"network where event.type == ""start"" and network.direction : (""outgoing"", ""egress"") and
 destination.port == 88 and source.port >= 49152 and
 not process.executable :
            (""?:\\Windows\\System32\\lsass.exe"",
             ""System"",
             ""\\device\\harddiskvolume?\\windows\\system32\\lsass.exe"",
             ""?:\\Program Files\\rapid7\\nexpose\\nse\\.DLLCACHE\\nseserv.exe"",
             ""?:\\Program Files (x86)\\GFI\\LanGuard 12 Agent\\lnsscomm.exe"",
             ""?:\\Program Files (x86)\\SuperScan\\scanner.exe"",
             ""?:\\Program Files (x86)\\Nmap\\nmap.exe"",
             ""\\device\\harddiskvolume?\\program files (x86)\\nmap\\nmap.exe"") and
 destination.address !=""127.0.0.1"" and destination.address !=""::1"" and
 /* insert false positives here */
 not process.name in (""swi_fc.exe"", ""fsIPcam.exe"", ""IPCamera.exe"", ""MicrosoftEdgeCP.exe"", ""MicrosoftEdge.exe"", ""iexplore.exe"", ""chrome.exe"", ""msedge.exe"", ""opera.exe"", ""firefox.exe"")
",now-9m,,"## Triage and analysis

### Investigating Kerberos Traffic from Unusual Process

Kerberos is the default authentication protocol in Active Directory, designed to provide strong authentication for
client/server applications by using secret-key cryptography.

Domain-joined hosts usually perform Kerberos traffic using the `lsass.exe` process. This rule detects the occurrence of
traffic on the Kerberos port (88) by processes other than `lsass.exe` to detect the unusual request and usage of
Kerberos tickets.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check if the Destination IP is related to a Domain Controller.
- Review event ID 4769 for suspicious ticket requests.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This rule uses a Kerberos-related port but does not identify the protocol used on that port. HTTP traffic on a
non-standard port or destination IP address unrelated to Domain controllers can create false positives.
- Exceptions can be added for noisy/frequent connections.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
  - Ticket requests can be used to investigate potentially compromised accounts.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
238,2022/06/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious access to LSASS handle from a call trace pointing to seclogon.dll and with a suspicious access
rights value. This may indicate an attempt to leak an LSASS handle via abusing the Secondary Logon service in preparation
for credential access.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious LSASS Access via MalSecLogon,['https://splintercod3.blogspot.com/p/the-hidden-side-of-seclogon-part-3.html'],73,7ba58110-ae13-439b-8192-357b0fcfa9d7,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.code == ""10"" and
  winlog.event_data.TargetImage : ""?:\\WINDOWS\\system32\\lsass.exe"" and

   /* seclogon service accessing lsass */
  winlog.event_data.CallTrace : ""*seclogon.dll*"" and process.name : ""svchost.exe"" and

   /* PROCESS_CREATE_PROCESS & PROCESS_DUP_HANDLE & PROCESS_QUERY_INFORMATION */
  winlog.event_data.GrantedAccess == ""0x14c0""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
239,2020/11/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of a Local Security Authority Subsystem Service (lsass.exe) default memory dump. This may
indicate a credential access attempt via trusted system utilities such as Task Manager (taskmgr.exe) and SQL Dumper
(sqldumper.exe) or known pentesting tools such as Dumpert and AndrewSpecial.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,LSASS Memory Dump Creation,"['https://github.com/outflanknl/Dumpert', 'https://github.com/hoangprod/AndrewSpecial']",73,f2f46686-6f3c-4724-bd7d-24e31c70f98f,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"file where file.name : (""lsass*.dmp"", ""dumpert.dmp"", ""Andrew.dmp"", ""SQLDmpr*.mdmp"", ""Coredump.dmp"") and

 not (process.executable : (""?:\\Program Files\\Microsoft SQL Server\\*\\Shared\\SqlDumper.exe"", ""?:\\Windows\\System32\\dllhost.exe"") and
      file.path : (""?:\\Program Files\\Microsoft SQL Server\\*\\Shared\\ErrorDumps\\SQLDmpr*.mdmp"",
                   ""?:\\*\\Reporting Services\\Logfiles\\SQLDmpr*.mdmp"")) and

 not (process.executable : ""?:\\WINDOWS\\system32\\WerFault.exe"" and
      file.path : ""?:\\Windows\\System32\\config\\systemprofile\\AppData\\Local\\CrashDumps\\lsass.exe.*.dmp"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,4d4c0b59-ea83-483f-b8c1-8c360ee53c5c,Comprehensive File Timeline,,,,,,,,,,,,,,,,
240,2022/02/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies handle requests for the Local Security Authority Subsystem Service (LSASS) object access with
specific access masks that many tools with a capability to dump memory to disk use (0x1fffff, 0x1010, 0x120089).
This rule is tool agnostic as it has been validated against a host of various LSASS dump tools such as SharpDump,
Procdump, Mimikatz, Comsvcs etc. It detects this behavior at a low level and does not depend on a specific tool or dump
file name.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,LSASS Memory Dump Handle Access,"['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4656', 'https://twitter.com/jsecurity101/status/1227987828534956033?s=20', 'https://attack.mitre.org/techniques/T1003/001/', 'https://threathunterplaybook.com/notebooks/windows/06_credential_access/WIN-170105221010.html', 'http://findingbad.blogspot.com/2017/']",73,208dbe77-01ed-4954-8d44-1e5751cb20de,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"any where event.action == ""File System"" and event.code == ""4656"" and

    winlog.event_data.ObjectName : (
        ""?:\\Windows\\System32\\lsass.exe"",
        ""\\Device\\HarddiskVolume?\\Windows\\System32\\lsass.exe"",
        ""\\Device\\HarddiskVolume??\\Windows\\System32\\lsass.exe"") and

    /* The right to perform an operation controlled by an extended access right. */

    (winlog.event_data.AccessMask : (""0x1fffff"" , ""0x1010"", ""0x120089"", ""0x1F3FFF"") or
     winlog.event_data.AccessMaskDescription : (""READ_CONTROL"", ""Read from process memory""))

     /* Common Noisy False Positives */

    and not winlog.event_data.ProcessName : (
        ""?:\\Program Files\\*.exe"",
        ""?:\\Program Files (x86)\\*.exe"",
        ""?:\\Windows\\system32\\wbem\\WmiPrvSE.exe"",
        ""?:\\Windows\\System32\\dllhost.exe"",
        ""?:\\Windows\\System32\\svchost.exe"",
        ""?:\\Windows\\System32\\msiexec.exe"",
        ""?:\\ProgramData\\Microsoft\\Windows Defender\\*.exe"",
        ""?:\\Windows\\explorer.exe"")
",now-9m,,"## Triage and analysis

### Investigating LSASS Memory Dump Handle Access

Local Security Authority Server Service (LSASS) is a process in Microsoft Windows operating systems that is responsible
for enforcing security policy on the system. It verifies users logging on to a Windows computer or server, handles
password changes, and creates access tokens.

Adversaries may attempt to access credential material stored in LSASS process memory. After a user logs on,the system
generates and stores a variety of credential materials in LSASS process memory. This is meant to facilitate single
sign-on (SSO) ensuring a user isn’t prompted each time resource access is requested. These credential materials can be
harvested by an adversary using administrative user or SYSTEM privileges to conduct lateral movement using
[alternate authentication material](https://attack.mitre.org/techniques/T1550/).

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- There should be very few or no false positives for this rule. If this activity is expected or noisy in your environment,
consider adding exceptions — preferably with a combination of user and command line conditions.
- If the process is related to antivirus or endpoint detection and response solutions, validate that it is installed on
the correct path and signed with the company's valid digital signature.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Scope compromised credentials and disable the accounts.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

Ensure advanced audit policies for Windows are enabled, specifically:
Object Access policies [Event ID 4656](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4656) (Handle to an Object was Requested)

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
System Audit Policies >
Object Access >
Audit File System (Success,Failure)
Audit Handle Manipulation (Success,Failure)
```

Also, this event generates only if the object’s [SACL](https://docs.microsoft.com/en-us/windows/win32/secauthz/access-control-lists) has the required access control entry (ACE) to handle the use of specific access rights.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
241,2020/08/31,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],Identifies the password log file from the default Mimikatz memssp module.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Mimikatz Memssp Log File Detected,,73,ebb200e8-adf0-43f8-a0bb-4ee5b5d852c6,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"file where file.name : ""mimilsa.log"" and process.name : ""lsass.exe""
",now-9m,,"## Triage and analysis

### Investigating Mimikatz Memssp Log File Detected

[Mimikatz](https://github.com/gentilkiwi/mimikatz) is an open-source tool used to collect, decrypt, and/or use cached
credentials. This tool is commonly abused by adversaries during the post-compromise stage where adversaries have gained
an initial foothold on an endpoint and are looking to elevate privileges and seek out additional authentication objects
such as tokens/hashes/credentials that can then be used to laterally move and pivot across a network.

This rule looks for the creation of a file named `mimilsa.log`, which is generated when using the Mimikatz misc::memssp
module, which injects a malicious Windows SSP to collect locally authenticated credentials, which includes the computer
account password, running service credentials, and any accounts that logon.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target
host.
- Retrieve and inspect the log file contents.
- Search for DLL files created in the same location as the log file, and retrieve unsigned DLLs.
  - Use the PowerShell Get-FileHash cmdlet to get the SHA-256 hash value of these files.
    - Search for the existence of these files in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
  - Identify the process that created the DLL using file creation events.

### False positive analysis

- This file name `mimilsa.log` should not legitimately be created.

### Related rules

- Mimikatz Powershell Module Activity - ac96ceb8-4399-4191-af1d-4feeac1f1f46

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the host is a Domain Controller (DC):
  - Activate your incident response plan for total Active Directory compromise.
  - Review the privileges assigned to users that can access the DCs to ensure that the least privilege principle is
  being followed and reduce the attack surface.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reboot the host to remove the injected SSP from memory.
- Reimage the host operating system or restore compromised files to clean versions.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
242,2020/12/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Mimikatz is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many
other features that make it useful for testing the security of networks. This rule detects Invoke-Mimikatz PowerShell
script and alike.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Potential Invoke-Mimikatz PowerShell Script,"['https://attack.mitre.org/software/S0002/', 'https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1']",73,ac96ceb8-4399-4191-af1d-4feeac1f1f46,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,query,"event.category:process and
powershell.file.script_block_text:(
  (DumpCreds and
  DumpCerts) or
  ""sekurlsa::logonpasswords"" or
  (""crypto::certificates"" and
  ""CERT_SYSTEM_STORE_LOCAL_MACHINE"")
)
",now-9m,,"## Triage and analysis

### Investigating Mimikatz PowerShell Activity

[Mimikatz](https://github.com/gentilkiwi/mimikatz) is an open-source tool used to collect, decrypt, and/or use cached
credentials. This tool is commonly abused by adversaries during the post-compromise stage where adversaries have gained
an initial foothold on an endpoint and are looking to elevate privileges and seek out additional authentication objects
such as tokens/hashes/credentials that can then be used to move laterally and pivot across a network.

This rule looks for PowerShell scripts that load mimikatz in memory, like Invoke-Mimikataz, which are used to dump
credentials from the Local Security Authority Subsystem Service (LSASS). Any activity triggered from this rule should be
treated with high priority as it typically represents an active adversary.

More information about Mimikatz components and how to detect/prevent them can be found on [ADSecurity](https://adsecurity.org/?page_id=1821).

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
  - Invoke-Mimitakz and alike scripts heavily use other capabilities covered by other detections described in the
  ""Related Rules"" section.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the
target host.
  - Examine network and security events in the environment to identify potential lateral movement using compromised credentials.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe
- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad
- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d
- Mimikatz Memssp Log File Detected - ebb200e8-adf0-43f8-a0bb-4ee5b5d852c6
- Modification of WDigest Security Provider - d703a5af-d5b0-43bd-8ddb-7a5d500b7da5

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Validate that cleartext passwords are disabled in memory for use with `WDigest`.
- Look into preventing access to `LSASS` using capabilities such as LSA protection or antivirus/EDR tools that provide
this capability.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be configured (Enable).

Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
243,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies attempts to modify the WDigest security provider in the registry to force the user's password to be stored in
clear text in memory. This behavior can be indicative of an adversary attempting to weaken the security configuration of
an endpoint. Once the UseLogonCredential value is modified, the adversary may attempt to dump clear text passwords from
memory.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Modification of WDigest Security Provider,"['https://www.csoonline.com/article/3438824/how-to-detect-and-halt-credential-theft-via-windows-wdigest.html', 'https://www.praetorian.com/blog/mitigating-mimikatz-wdigest-cleartext-credential-theft?edition=2019', 'https://frsecure.com/compromised-credentials-response-playbook']",73,d703a5af-d5b0-43bd-8ddb-7a5d500b7da5,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"registry where event.type : (""creation"", ""change"") and
    registry.path :
        ""HKLM\\SYSTEM\\*ControlSet*\\Control\\SecurityProviders\\WDigest\\UseLogonCredential""
    and registry.data.strings : (""1"", ""0x00000001"") and
    not (process.executable : ""?:\\Windows\\System32\\svchost.exe"" and user.id : ""S-1-5-18"")
",now-9m,,"## Triage and analysis

### Investigating Modification of WDigest Security Provider

In Windows XP, Microsoft added support for a protocol known as WDigest. The WDigest protocol allows clients to send
cleartext credentials to Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) applications
based on RFC 2617 and 2831. Windows versions up to 8 and 2012 store logon credentials in memory in plaintext by default,
which is no longer the case with newer Windows versions.

Still, attackers can force WDigest to store the passwords insecurely on the memory by modifying the
`HKLM\SYSTEM\*ControlSet*\Control\SecurityProviders\WDigest\UseLogonCredential` registry key. This activity is
commonly related to the execution of credential dumping tools.

#### Possible investigation steps

- It is unlikely that the monitored registry key was modified legitimately in newer versions of Windows. Analysts should
treat any activity triggered from this rule with high priority as it typically represents an active adversary.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Determine if credential dumping tools were run on the host, and retrieve and analyze suspicious executables:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Use process name, command line, and file hash to search for occurrences on other hosts.
- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target
host after the registry modification.

### False positive analysis

- This modification should not happen legitimately. Any potential benign true positive (B-TP) should be mapped and
monitored by the security team, as these modifications expose the entire domain to credential compromises and
consequently unauthorized access.

### Related rules

- Mimikatz Powershell Module Activity - ac96ceb8-4399-4191-af1d-4feeac1f1f46

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reimage the host operating system and restore compromised files to clean versions.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
244,2022/02/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies the creation or modification of a medium-size registry hive file on a Server Message Block (SMB) share, which
may indicate an exfiltration attempt of a previously dumped Security Account Manager (SAM) registry hive for credential
extraction on an attacker-controlled system.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Windows Registry File Creation in SMB Share,,47,a4c7473a-5cb4-4bc1-9d06-e4a75adbc494,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'Credential Access', 'has_guide']",event.ingested,eql,"file where event.type == ""creation"" and
 /* regf file header */
 file.Ext.header_bytes : ""72656766*"" and file.size >= 30000 and
 process.pid == 4 and user.id : ""s-1-5-21*""
",now-9m,,"## Triage and analysis

### Investigating Windows Registry File Creation in SMB Share

Dumping registry hives is a common way to access credential information. Some hives store credential material, as is the
case for the SAM hive, which stores locally cached credentials (SAM secrets), and the SECURITY hive, which stores domain
cached credentials (LSA secrets). Dumping these hives in combination with the SYSTEM hive enables the attacker to
decrypt these secrets.

Attackers can try to evade detection on the host by transferring this data to a system that is not
monitored to be parsed and decrypted. This rule identifies the creation or modification of a medium-size registry hive
file on an SMB share, which may indicate this kind of exfiltration attempt.

#### Possible investigation steps

- Investigate other alerts associated with the user/source host during the past 48 hours.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Inspect the source host for suspicious or abnormal behaviors in the alert timeframe.
- Capture the registry file(s) to determine the extent of the credential compromise in an eventual incident response.

### False positive analysis

- Administrators can export registry hives for backup purposes. Check whether the user should be performing this kind of
activity and is aware of it.

### Related rules

- Credential Acquisition via Registry Hive Dumping - a7e7bfa3-088e-4f13-b29e-3986e0e756b8

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reimage the host operating system and restore compromised files to clean versions.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.002', 'name': 'Security Account Manager', 'reference': 'https://attack.mitre.org/techniques/T1003/002/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
245,2021/03/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the modification of the network logon provider registry. Adversaries may register a rogue network logon
provider module for persistence and/or credential access via intercepting the authentication credentials in clear text
during user logon.
",['Authorized third party network logon providers.'],['logs-endpoint.events.*'],eql,Elastic License v2,Network Logon Provider Registry Modification,"['https://github.com/gtworek/PSBits/tree/master/PasswordStealing/NPPSpy', 'https://docs.microsoft.com/en-us/windows/win32/api/npapi/nf-npapi-nplogonnotify']",47,54c3d186-0461-4dc3-9b33-2dc5c7473936,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Credential Access']",event.ingested,eql,"registry where registry.data.strings != null and
 registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\NetworkProvider\\ProviderPath"" and
 /* Excluding default NetworkProviders RDPNP, LanmanWorkstation and webclient. */
 not ( user.id : ""S-1-5-18"" and
       registry.data.strings in
                (""%SystemRoot%\\System32\\ntlanman.dll"",
                 ""%SystemRoot%\\System32\\drprov.dll"",
                 ""%SystemRoot%\\System32\\davclnt.dll"")
      )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1556', 'name': 'Modify Authentication Process', 'reference': 'https://attack.mitre.org/techniques/T1556/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
246,2021/10/05,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule detects PowerShell scripts capable of dumping process memory using WindowsErrorReporting or
Dbghelp.dll MiniDumpWriteDump. Attackers can use this tooling to dump LSASS and get access to credentials.
",['PowerShell scripts that use this capability for troubleshooting.'],"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell MiniDump Script,"['https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Out-Minidump.ps1', 'https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Get-ProcessMiniDump.ps1', 'https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md']",73,577ec21e-56fe-4065-91d8-45eb8224fe77,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,query,"event.category:process and powershell.file.script_block_text:(MiniDumpWriteDump or MiniDumpWithFullMemory or pmuDetirWpmuDiniM)
",now-9m,,"## Triage and analysis

### Investigating PowerShell MiniDump Script

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can abuse Process Memory Dump capabilities to extract credentials from LSASS or to obtain other
privileged information stored in the process memory.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Check if the imported function was executed and which process it targeted.

### False positive analysis

- Regular users do not have a business justification for using scripting utilities to dump process memory, making false
positives unlikely.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1003/', 'id': 'T1003', 'name': 'OS Credential Dumping', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1003/001/', 'id': 'T1003.001', 'name': 'LSASS Memory'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0006/', 'id': 'TA0006', 'name': 'Credential Access'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
247,2022/01/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects PowerShell scripts that have the capability of requesting kerberos tickets, which is a common step in
Kerberoasting toolkits to crack service accounts.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Kerberos Ticket Request,"['https://cobalt.io/blog/kerberoast-attack-techniques', 'https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1']",47,eb610e70-f9e6-4949-82b9-f1c5bcd37c39,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    KerberosRequestorSecurityToken
  )
",now-9m,,"## Triage and analysis

### Investigating Explicit PowerShell Kerberos Ticket Request

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, making
it available for use in various environments, creating an attractive way for attackers to execute code.

Accounts associated with a service principal name (SPN) are viable targets for Kerberoasting attacks, which use brute
force to crack the user password, which is used to encrypt a Kerberos TGS ticket.

Attackers can use PowerShell to request these Kerberos tickets, with the intent of extracting them from memory to
perform Kerberoasting.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate if the script was executed, and if so, which account was targeted.
- Validate if the account has an SPN associated with it.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Check if the script has any other functionality that can be potentially malicious.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Review event ID [4769](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4769)
related to this account and service name for additional information.

### False positive analysis

- A possible false positive can be identified if the script content is not malicious/harmful or does not request
Kerberos tickets for user accounts, as computer accounts are not vulnerable to Kerberoasting due to complex password
requirements and policy.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services. Prioritize privileged accounts.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}, {'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/', 'subtechnique': [{'id': 'T1558.003', 'name': 'Kerberoasting', 'reference': 'https://attack.mitre.org/techniques/T1558/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
248,2021/09/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious access to an LSASS handle via DuplicateHandle from an unknown call trace module. This may indicate
an attempt to bypass the NtOpenProcess API to evade detection and dump LSASS memory for credential access.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Credential Access via DuplicateHandle in LSASS,['https://github.com/CCob/MirrorDump'],47,02a4576a-7480-4284-9327-548a806b5e48,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.code == ""10"" and

 /* LSASS requesting DuplicateHandle access right to another process */
 process.name : ""lsass.exe"" and winlog.event_data.GrantedAccess == ""0x40"" and

 /* call is coming from an unknown executable region */
 winlog.event_data.CallTrace : ""*UNKNOWN*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
249,2022/04/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies attempt to coerce a local NTLM authentication via HTTP using the Windows Printer Spooler service as a target.
An adversary may use this primitive in combination with other techniques to elevate privileges on a compromised system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Local NTLM Relay via HTTP,"['https://github.com/med0x2e/NTLMRelay2Self', 'https://github.com/topotam/PetitPotam', 'https://github.com/dirkjanm/krbrelayx/blob/master/printerbug.py']",73,4682fd2c-cfae-47ed-a543-9bed37657aa6,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""rundll32.exe"" and

  /* Rundll32 WbeDav Client  */
  process.args : (""?:\\Windows\\System32\\davclnt.dll,DavSetCookie"", ""?:\\Windows\\SysWOW64\\davclnt.dll,DavSetCookie"") and

  /* Access to named pipe via http */
  process.args : (""http*/print/pipe/*"", ""http*/pipe/spoolss"", ""http*/pipe/srvsvc"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1212', 'name': 'Exploitation for Credential Access', 'reference': 'https://attack.mitre.org/techniques/T1212/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
250,2022/03/01,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies remote access to the registry to potentially dump credential data from the Security Account Manager (SAM)
registry hive in preparation for credential access and privileges elevation.
",,"['winlogbeat-*', 'logs-system.*', 'logs-endpoint.events.*']",eql,Elastic License v2,Potential Remote Credential Access via Registry,['https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py'],73,850d901a-2a3c-46c6-8b22-55398a01aad8,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'Credential Access', 'has_guide']",,eql,"sequence by host.id, user.id with maxspan=1m
 [authentication where
   event.outcome == ""success"" and event.action == ""logged-in"" and
   winlog.logon.type == ""Network"" and not user.name == ""ANONYMOUS LOGON"" and
   not user.domain == ""NT AUTHORITY"" and source.ip != ""127.0.0.1"" and source.ip !=""::1""]
 [file where event.action == ""creation"" and process.name : ""svchost.exe"" and
  file.Ext.header_bytes : ""72656766*"" and user.id : ""S-1-5-21-*"" and file.size >= 30000 and
  not file.path :
           (""?:\\Windows\\system32\\HKEY_LOCAL_MACHINE_SOFTWARE_Microsoft_*.registry"",
            ""?:\\Users\\*\\AppData\\Local\\Microsoft\\Windows\\UsrClass.dat.LOG?"",
            ""?:\\Users\\*\\AppData\\Local\\Microsoft\\Windows\\UsrClass.dat"",
            ""?:\\Users\\*\\ntuser.dat.LOG?"",
            ""?:\\Users\\*\\NTUSER.DAT"")]
",now-9m,,"## Triage and analysis

### Investigating Potential Remote Credential Access via Registry

Dumping registry hives is a common way to access credential information. Some hives store credential material,
such as the SAM hive, which stores locally cached credentials (SAM secrets), and the SECURITY hive, which stores domain
cached credentials (LSA secrets). Dumping these hives in combination with the SYSTEM hive enables the attacker to
decrypt these secrets.

Attackers can use tools like secretsdump.py or CrackMapExec to dump the registry hives remotely, and use dumped
credentials to access other systems in the domain.

#### Possible investigation steps

- Identify the specifics of the involved assets, such as their role, criticality, and associated users.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Determine the privileges of the compromised accounts.
- Investigate other alerts associated with the user/source host during the past 48 hours.
- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target
host.

### False positive analysis

- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious
must be monitored by the security team.

### Related rules

- Credential Acquisition via Registry Hive Dumping - a7e7bfa3-088e-4f13-b29e-3986e0e756b8

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine if other hosts were compromised.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Reimage the host operating system or restore the compromised files to clean versions.
- Ensure that the machine has the latest security updates and is not running unsupported Windows versions.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

This rule uses Elastic Endpoint file creation and system integration events for correlation. Both data should be
collected from the host for this detection to work.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.002', 'name': 'Security Account Manager', 'reference': 'https://attack.mitre.org/techniques/T1003/002/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
251,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Windows Credential Manager allows you to create, view, or delete saved credentials for signing into websites, connected
applications, and networks. An adversary may abuse this to list or dump credentials stored in the Credential Manager for
saved usernames and passwords. This may also be performed in preparation of lateral movement.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Searching for Saved Credentials via VaultCmd,"['https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16', 'https://web.archive.org/web/20201004080456/https://rastamouse.me/blog/rdp-jump-boxes/']",47,be8afaed-4bcd-4e0a-b5f9-5562003dde81,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.type == ""start"" and
  (process.pe.original_file_name:""vaultcmd.exe"" or process.name:""vaultcmd.exe"") and
  process.args:""/list*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}, {'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.004', 'name': 'Windows Credential Manager', 'reference': 'https://attack.mitre.org/techniques/T1555/004/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
252,2022/08/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/30,['Elastic'],"Windows Credential Manager allows you to create, view, or delete saved credentials for signing into websites, connected
applications, and networks. An adversary may abuse this to list or dump credentials stored in the Credential Manager for
saved usernames and passwords. This may also be performed in preparation of lateral movement.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Multiple Vault Web Credentials Read,['https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=5382'],47,44fc462c-1159-4fa8-b1b7-9b6296ab4f96,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",,eql,"sequence by host.id, winlog.process.pid with maxspan=1s

 /* 2 consecutive vault reads from same pid for web creds */

 [any where event.code : ""5382"" and
  (winlog.event_data.SchemaFriendlyName : ""Windows Web Password Credential"" or winlog.event_data.Resource : ""http*"") and
  not winlog.event_data.SubjectLogonId : ""0x3e7""]

 [any where event.code : ""5382"" and
  (winlog.event_data.SchemaFriendlyName : ""Windows Web Password Credential"" or winlog.event_data.Resource : ""http*"") and
  not winlog.event_data.SubjectLogonId : ""0x3e7""]
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}, {'id': 'T1555', 'name': 'Credentials from Password Stores', 'reference': 'https://attack.mitre.org/techniques/T1555/', 'subtechnique': [{'id': 'T1555.004', 'name': 'Windows Credential Manager', 'reference': 'https://attack.mitre.org/techniques/T1555/004/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
253,2022/01/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies the assignment of the SeEnableDelegationPrivilege sensitive ""user right"" to a user. The
SeEnableDelegationPrivilege ""user right"" enables computer and user accounts to be trusted for delegation. Attackers can
abuse this right to compromise Active Directory accounts and elevate their privileges.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Sensitive Privilege SeEnableDelegationPrivilege assigned to a User,"['https://blog.harmj0y.net/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/', 'https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/security/win_alert_active_directory_user_control.yml', 'https://twitter.com/_nwodtuhs/status/1454049485080907776', 'https://www.thehacker.recipes/ad/movement/kerberos/delegations', 'https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0105_windows_audit_authorization_policy_change.md']",73,f494c678-3c33-43aa-b169-bb3d5198c41d,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'Active Directory', 'has_guide']",event.ingested,query,"event.action: ""Authorization Policy Change"" and event.code:4704 and winlog.event_data.PrivilegeList:""SeEnableDelegationPrivilege""
",now-9m,,"## Triage and analysis

### Investigating Sensitive Privilege SeEnableDelegationPrivilege assigned to a User

Kerberos delegation is an Active Directory feature that allows user and computer accounts to impersonate other accounts,
act on their behalf, and use their privileges. Delegation (constrained and unconstrained) can be configured
for user and computer objects.

Enabling unconstrained delegation for a computer causes the computer to store the ticket-granting ticket
(TGT) in memory at any time an account connects to the computer, so it can be used by the computer for impersonation
when needed. Risk is heightened if an attacker compromises computers with unconstrained delegation enabled, as they
could extract TGTs from memory and then replay them to move laterally on the domain. If the attacker coerces a privileged
user to connect to the server, or if the user does so routinely, the account will be compromised and the attacker will
be able to pass-the-ticket to privileged assets.

SeEnableDelegationPrivilege is a user right that is controlled within the Local Security Policy of a domain controller
and is managed through Group Policy. This setting is named **Enable computer and user accounts to be trusted for
delegation**.

It is critical to control the assignment of this privilege. A user with this privilege and write access to a computer
can control delegation settings, perform the attacks described above, and harvest TGTs from any user that connects to
the system.

#### Possible investigation steps

- Investigate how the privilege was assigned to the user and who assigned it.
- Investigate other potentially malicious activity that was performed by the user that assigned the privileges using the
`user.id` and `winlog.activity_id` fields as a filter during the past 48 hours.
- Investigate other alerts associated with the users/host during the past 48 hours.

### False positive analysis

- The SeEnableDelegationPrivilege privilege should not be assigned to users. If this rule is triggered in your
environment legitimately, the security team should notify the administrators about the risks of using it.

### Related rules

- KRBTGT Delegation Backdoor - e052c845-48d0-4f46-8a13-7d0aba05df82

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Remove the privilege from the account.
- Review the privileges of the administrator account that performed the action.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Authorization Policy Change' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Windows Settings >
Security Settings >
Advanced Audit Policy Configuration >
Audit Policies >
Policy Change >
Audit Authorization Policy Change (Success,Failure)
```
","[{'framework': 'MITRE ATT&CK', 'tactic': {'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/', 'id': 'TA0006'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/', 'id': 'TA0003'}}]",,,,,,,,,,,,,,,,,,,
254,2022/01/26,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identify the modification of the msDS-KeyCredentialLink attribute in an Active Directory Computer or User Object.
Attackers can abuse control over the object and create a key pair, append to raw public key in the attribute, and obtain
persistent and stealthy access to the target user or computer object.
",['    Modifications in the msDS-KeyCredentialLink attribute can be done legitimately by the Azure AD Connect\n    synchronization account or the ADFS service account. These accounts can be added as Exceptions.\n    '],"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Potential Shadow Credentials added to AD Object,"['https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab', 'https://www.thehacker.recipes/ad/movement/kerberos/shadow-credentials', 'https://github.com/OTRF/Set-AuditRule']",73,79f97b31-480e-4e63-a7f4-ede42bf2c6de,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'Active Directory']",event.ingested,query,"event.action:""Directory Service Changes"" and event.code:""5136"" and winlog.event_data.AttributeLDAPDisplayName:""msDS-KeyCredentialLink""
",now-9m,,"## Setup

The 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```

The above policy does not cover User objects, so we need to set up an AuditRule using https://github.com/OTRF/Set-AuditRule.
As this specifies the msDS-KeyCredentialLink Attribute GUID, it is expected to be low noise.

```
Set-AuditRule -AdObjectPath 'AD:\CN=Users,DC=Domain,DC=com' -WellKnownSidType WorldSid -Rights WriteProperty -InheritanceFlags Children -AttributeGUID 5b47d60f-6090-40b2-9f37-2a4de88f3063 -AuditFlags Success
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Modify Authentication Process', 'id': 'T1556', 'reference': 'https://attack.mitre.org/techniques/T1556/'}], 'tactic': {'name': 'Credential Access', 'id': 'TA0006', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
255,2022/02/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects when a user account has the servicePrincipalName attribute modified. Attackers can abuse write privileges over a
user to configure Service Principle Names (SPNs) so that they can perform Kerberoasting. Administrators can also
configure this for legitimate purposes, exposing the account to Kerberoasting.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,User account exposed to Kerberoasting,"['https://www.thehacker.recipes/ad/movement/access-controls/targeted-kerberoasting', 'https://www.qomplx.com/qomplx-knowledge-kerberoasting-attacks-explained/', 'https://www.thehacker.recipes/ad/movement/kerberos/kerberoast', 'https://attack.stealthbits.com/cracking-kerberos-tgs-tickets-using-kerberoasting', 'https://adsecurity.org/?p=280', 'https://github.com/OTRF/Set-AuditRule']",73,0b2f3da5-b5ec-47d1-908b-6ebb74814289,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'Active Directory', 'has_guide']",event.ingested,query,"event.action:""Directory Service Changes"" and event.code:5136 and winlog.event_data.ObjectClass:""user""
and winlog.event_data.AttributeLDAPDisplayName:""servicePrincipalName""
",now-9m,,"## Triage and analysis

### Investigating User account exposed to Kerberoasting

Service Principal Names (SPNs) are names by which Kerberos clients uniquely identify service instances for Kerberos target
computers.

By default, only computer accounts have SPNs, which creates no significant risk, since machine accounts have a default
domain policy that rotates their passwords every 30 days, and the password is composed of 120 random characters, making
them invulnerable to Kerberoasting.

A user account with an SPN assigned is considered a service account, and is accessible to the entire domain. If any
user in the directory requests a ticket-granting service (TGS), the domain controller will encrypt it with the secret
key of the account executing the service. An attacker can potentially perform a Kerberoasting attack with this
information, as the human-defined password is likely to be less complex.

For scenarios where SPNs cannot be avoided on user accounts, Microsoft provides the Group Managed Service Accounts (gMSA)
feature, which ensures that account passwords are robust and changed regularly and automatically. More information can
be found [here](https://docs.microsoft.com/en-us/windows-server/security/group-managed-service-accounts/group-managed-service-accounts-overview).

Attackers can also perform ""Targeted Kerberoasting"", which consists of adding fake SPNs to user accounts that they have
write privileges to, making them potentially vulnerable to Kerberoasting.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate if the target account is a member of privileged groups (Domain Admins, Enterprise Admins, etc.).
- Investigate if tickets have been requested for the target account.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- The use of user accounts as service accounts is a bad security practice and should not be allowed in the domain. The
security team should map and monitor any potential benign true positive (B-TP), especially if the account is privileged.
Domain Administrators that define this kind of setting can put the domain at risk as user accounts don't have the same
security standards as computer accounts (which have long, complex, random passwords that change frequently), exposing
them to credential cracking attacks (Kerberoasting, brute force, etc.).

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services. Prioritize privileged accounts.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```

The above policy does not cover User objects, so set up an AuditRule using https://github.com/OTRF/Set-AuditRule.
As this specifies the servicePrincipalName Attribute GUID, it is expected to be low noise.

```
Set-AuditRule -AdObjectPath 'AD:\CN=Users,DC=Domain,DC=com' -WellKnownSidType WorldSid -Rights WriteProperty -InheritanceFlags Children -AttributeGUID f3a64788-5306-11d1-a9c5-0000f80367c1 -AuditFlags Success
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/', 'subtechnique': [{'id': 'T1558.003', 'name': 'Kerberoasting', 'reference': 'https://attack.mitre.org/techniques/T1558/003/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
256,2021/10/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious renamed COMSVCS.DLL Image Load, which exports the MiniDump function that can be used to dump a
process memory. This may indicate an attempt to dump LSASS memory while bypassing command-line based detection in
preparation for credential access.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Credential Access via Renamed COM+ Services DLL,['https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/'],73,c5c9f591-d111-4cf8-baec-c26a39bc31ef,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",,eql,"sequence by process.entity_id with maxspan=1m
 [process where event.category == ""process"" and
    process.name : ""rundll32.exe""]
 [process where event.category == ""process"" and event.dataset : ""windows.sysmon_operational"" and event.code == ""7"" and
   (file.pe.original_file_name : ""COMSVCS.DLL"" or file.pe.imphash : ""EADBCCBB324829ACB5F2BBE87E5549A8"") and
    /* renamed COMSVCS */
    not file.name : ""COMSVCS.DLL""]
",now-9m,,"## Setup

You will need to enable logging of ImageLoads in your Sysmon configuration to include COMSVCS.DLL by Imphash or Original
File Name.","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1003/', 'id': 'T1003', 'name': 'OS Credential Dumping', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1003/001/', 'id': 'T1003.001', 'name': 'LSASS Memory'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0006/', 'id': 'TA0006', 'name': 'Credential Access'}}]",,,,,,,,,,,,,,,,,,,
257,2021/10/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious access to LSASS handle from a call trace pointing to DBGHelp.dll or DBGCore.dll, which both export
the MiniDumpWriteDump method that can be used to dump LSASS memory content in preparation for credential access.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Credential Access via LSASS Memory Dump,['https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz'],73,9960432d-9b26-409f-972b-839a959e79e2,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.code == ""10"" and
  winlog.event_data.TargetImage : ""?:\\WINDOWS\\system32\\lsass.exe"" and

   /* DLLs exporting MiniDumpWriteDump API to create an lsass mdmp*/
  winlog.event_data.CallTrace : (""*dbghelp*"", ""*dbgcore*"") and

   /* case of lsass crashing */
  not process.executable : (""?:\\Windows\\System32\\WerFault.exe"", ""?:\\Windows\\System32\\WerFaultSecure.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.001', 'name': 'LSASS Memory', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
258,2021/10/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious access to an LSASS handle via PssCaptureSnapShot where two successive process accesses are performed
by the same process and target two different instances of LSASS. This may indicate an attempt to evade detection and
dump LSASS memory for credential access.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Potential LSASS Memory Dump via PssCaptureSnapShot,"['https://www.matteomalvica.com/blog/2019/12/02/win-defender-atp-cred-bypass/', 'https://twitter.com/sbousseaden/status/1280619931516747777?lang=en']",73,0f93cb9a-1931-48c2-8cd0-f173fd3e5283,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,threshold,"event.category:process and event.code:10 and
 winlog.event_data.TargetImage:(""C:\\Windows\\system32\\lsass.exe"" or
                                 ""c:\\Windows\\system32\\lsass.exe"" or
                                 ""c:\\Windows\\System32\\lsass.exe"")
",now-9m,,"## Setup

This is meant to run only on datasources using Elastic Agent 7.14+ since versions prior to that will be missing the threshold
rule cardinality feature.","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'OS Credential Dumping', 'id': 'T1003', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'name': 'LSASS Memory', 'id': 'T1003.001', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'name': 'Credential Access', 'id': 'TA0006', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]","{'field': ['process.entity_id'], 'value': 2, 'cardinality': [{'field': 'winlog.event_data.TargetProcessId', 'value': 2}]}",,,,,,,,,,,,,,,,,,
259,2022/02/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies remote access to the registry using an account with Backup Operators group membership. This may indicate an
attempt to exfiltrate credentials by dumping the Security Account Manager (SAM) registry hive in preparation for
credential access and privileges elevation.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Suspicious Remote Registry Access via SeBackupPrivilege,"['https://github.com/mpgn/BackupOperatorToDA', 'https://raw.githubusercontent.com/Wh04m1001/Random/main/BackupOperators.cpp']",47,47e22836-4a16-4b35-beee-98f6c4ee9bf2,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'Credential Access', 'has_guide']",,eql,"sequence by host.id, winlog.event_data.SubjectLogonId with maxspan=1m
 [iam where event.action == ""logged-in-special""  and
  winlog.event_data.PrivilegeList : ""SeBackupPrivilege"" and

  /* excluding accounts with existing privileged access */
  not winlog.event_data.PrivilegeList : ""SeDebugPrivilege""]
 [any where event.action == ""Detailed File Share"" and winlog.event_data.RelativeTargetName : ""winreg""]
",now-9m,,"## Triage and analysis

### Investigating Suspicious Remote Registry Access via SeBackupPrivilege

SeBackupPrivilege is a privilege that allows file content retrieval, designed to enable users to create backup copies of
the system. Since it is impossible to make a backup of something you cannot read, this privilege comes at the cost of
providing the user with full read access to the file system. This privilege must bypass any access control list (ACL) placed in the system.

This rule identifies remote access to the registry using an account with Backup Operators group membership. This may
indicate an attempt to exfiltrate credentials by dumping the Security Account Manager (SAM) registry hive in preparation
for credential access and privileges elevation.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate the activities done by the subject user the login session. The field `winlog.event_data.SubjectLogonId`
can be used to get this data.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate abnormal behaviors observed by the subject user such as network connections, registry or file
modifications, and processes created.
- Investigate if the registry file was retrieved or exfiltrated.

### False positive analysis

- If this activity is expected and noisy in your environment, benign true positives (B-TPs) can be added as exceptions
if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Limit or disable the involved user account to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Detailed File Share' audit policy is required be configured (Success) on Domain Controllers and Sensitive Windows Servers.
Steps to implement the logging policy with with Advanced Audit Configuration:
```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Object Access >
Audit Detailed File Share (Success)
```

The 'Special Logon' audit policy must be configured (Success).
Steps to implement the logging policy with with Advanced Audit Configuration:
```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Logon/Logoff >
Special Logon (Success)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'id': 'T1003.002', 'name': 'Security Account Manager', 'reference': 'https://attack.mitre.org/techniques/T1003/002/'}]}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
260,2021/12/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,"['Elastic', 'Austin Songer']","Identifies the creation of symbolic links to a shadow copy. Symbolic links can be used to access files in the shadow
copy, including sensitive files such as ntds.dit, System Boot Key and browser offline credentials.
",['Legitimate administrative activity related to shadow copies.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Symbolic Link to Shadow Copy Created,"['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink', 'https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf', 'https://blog.netwrix.com/2021/11/30/extracting-password-hashes-from-the-ntds-dit-file/', 'https://www.hackingarticles.in/credential-dumping-ntds-dit/']",47,d117cbb4-7d56-41b4-b999-bdf8c25648a0,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access', 'has_guide']",event.ingested,eql,"process where event.type in (""start"",""process_created"") and
 process.pe.original_file_name in (""Cmd.Exe"",""PowerShell.EXE"") and

 /* Create Symbolic Link to Shadow Copies */
 process.args : (""*mklink*"", ""*SymbolicLink*"") and process.command_line : (""*HarddiskVolumeShadowCopy*"")
",now-9m,,"## Triage and analysis

### Investigating Symbolic Link to Shadow Copy Created

Shadow copies are backups or snapshots of an endpoint's files or volumes while they are in use. Adversaries may attempt
to discover and create symbolic links to these shadow copies in order to copy sensitive information offline. If Active
Directory (AD) is in use, often the ntds.dit file is a target as it contains password hashes, but an offline copy is
needed to extract these hashes and potentially conduct lateral movement.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Determine if a volume shadow copy was recently created on this endpoint.
- Review privileges of the end user as this requires administrative access.
- Verify if the ntds.dit file was successfully copied and determine its copy destination.
- Investigate for registry SYSTEM file copies made recently or saved via Reg.exe.
- Investigate recent deletions of volume shadow copies.
- Identify other files potentially copied from volume shadow copy paths directly.

### False positive analysis

- This rule should cause very few false positives. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- NTDS or SAM Database File Copied - 3bc6deaa-fbd4-433a-ae21-3e892f95624f

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the entire domain or the `krbtgt` user was compromised:
  - Activate your incident response plan for total Active Directory compromise which should include, but not be limited
  to, a password reset (twice) of the `krbtgt` user.
- Locate and remove static files copied from volume shadow copies.
- Command-Line tool mklink should require administrative access by default unless in developer mode.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

Ensure advanced audit policies for Windows are enabled, specifically:
Object Access policies [Event ID 4656](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4656) (Handle to an Object was Requested)

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
System Audit Policies >
Object Access >
Audit File System (Success,Failure)
Audit Handle Manipulation (Success,Failure)
```

This event will only trigger if symbolic links are created from a new process spawning cmd.exe or powershell.exe with the correct arguments.
Direct access to a shell and calling symbolic link creation tools will not generate an event matching this rule.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1003', 'name': 'OS Credential Dumping', 'reference': 'https://attack.mitre.org/techniques/T1003/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
261,2021/11/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of an LSASS process clone via PssCaptureSnapShot where the parent process is the initial LSASS
process instance. This may indicate an attempt to evade detection and dump LSASS memory for credential access.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential LSASS Clone Creation via PssCaptureSnapShot,"['https://www.matteomalvica.com/blog/2019/12/02/win-defender-atp-cred-bypass/', 'https://medium.com/@Achilles8284/the-birth-of-a-process-part-2-97c6fb9c42a2']",73,a16612dd-b30e-4d41-86a0-ebe70974ec00,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Credential Access']",event.ingested,eql,"process where event.code:""4688"" and
  process.executable : ""?:\\Windows\\System32\\lsass.exe"" and
  process.parent.executable : ""?:\\Windows\\System32\\lsass.exe""
",now-9m,,"## Setup

This is meant to run only on datasources using Windows security event 4688 that captures the process clone creation.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'OS Credential Dumping', 'id': 'T1003', 'reference': 'https://attack.mitre.org/techniques/T1003/', 'subtechnique': [{'name': 'LSASS Memory', 'id': 'T1003.001', 'reference': 'https://attack.mitre.org/techniques/T1003/001/'}]}], 'tactic': {'name': 'Credential Access', 'id': 'TA0006', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
262,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],Adversaries can add the 'hidden' attribute to files to hide them from the user in an attempt to evade detection.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Adding Hidden File Attribute via Attrib,,21,4630d948-40d4-4cef-ac69-4002e29bc3db,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""attrib.exe"" and process.args : ""+h""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.001', 'name': 'Hidden Files and Directories', 'reference': 'https://attack.mitre.org/techniques/T1564/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,e70679c2-6cde-4510-9764-4823df18f7db,Comprehensive Process Timeline,,,,,,,,,,,,,,,,
263,2021/06/01,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies modifications of the AmsiEnable registry key to 0, which disables the Antimalware Scan Interface (AMSI). An
adversary can modify this key to disable AMSI protections.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Modification of AmsiEnable Registry Key,"['https://hackinparis.com/data/slides/2019/talks/HIP2019-Dominic_Chell-Cracking_The_Perimeter_With_Sharpshooter.pdf', 'https://docs.microsoft.com/en-us/windows/win32/amsi/antimalware-scan-interface-portal']",73,f874315d-5188-4b4a-8521-d1c73093a7e4,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  registry.path : (
    ""HKEY_USERS\\*\\Software\\Microsoft\\Windows Script\\Settings\\AmsiEnable"",
    ""HKU\\*\\Software\\Microsoft\\Windows Script\\Settings\\AmsiEnable""
  ) and
  registry.data.strings: (""0"", ""0x00000000"")
",now-9m,,"## Triage and analysis

### Investigating Modification of AmsiEnable Registry Key

The Windows Antimalware Scan Interface (AMSI) is a versatile interface standard that allows your applications and
services to integrate with any antimalware product that's present on a machine. AMSI provides integration with multiple
Windows components, ranging from User Account Control (UAC) to VBA Macros.

Since AMSI is widely used across security products for increased visibility, attackers can disable it to evade
detections that rely on it.

This rule monitors the modifications to the Software\Microsoft\Windows Script\Settings\AmsiEnable registry key.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate the execution of scripts and macros after the registry modification.
- Retrieve scripts or Microsoft Office files and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Use process name, command line, and file hash to search for occurrences on other hosts.

### False positive analysis

- This modification should not happen legitimately. Any potential benign true positive (B-TP) should be mapped and
monitored by the security team, as these modifications expose the host to malware infections.

### Related rules

- Microsoft Windows Defender Tampering - fe794edd-487f-4a90-b285-3ee54f2af2d3

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Delete or set the key to its default value.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
264,2021/11/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Austin Songer'],"Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised
account to conceal the actions undertaken during an intrusion.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Clearing Windows Console History,"['https://stefanos.cloud/kb/how-to-clear-the-powershell-command-history/', 'https://www.shellhacks.com/clear-history-powershell/', 'https://community.sophos.com/sophos-labs/b/blog/posts/powershell-command-history-forensics']",47,b5877334-677f-4fb9-86d5-a9721274223b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.action == ""start"" and
  (process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") or process.pe.original_file_name == ""PowerShell.EXE"") and
     (process.args : ""*Clear-History*"" or
     (process.args : (""*Remove-Item*"", ""rm"") and process.args : (""*ConsoleHost_history.txt*"", ""*(Get-PSReadlineOption).HistorySavePath*"")) or
     (process.args : ""*Set-PSReadlineOption*"" and process.args : ""*SaveNothing*""))
",now-9m,,"## Triage and analysis

### Investigating Clearing Windows Console History

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can try to cover their tracks by clearing PowerShell console history. PowerShell has two different ways of
logging commands: the built-in history and the command history managed by the PSReadLine module. This rule looks for the
execution of commands that can clear the built-in PowerShell logs or delete the `ConsoleHost_history.txt` file.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
  - Verify if any other anti-forensics behaviors were observed.
- Investigate the PowerShell logs on the SIEM to determine if there was suspicious behavior that an attacker may be
trying to cover up.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
  - Ensure that PowerShell auditing policies and log collection are in place to grant future visibility.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.003', 'name': 'Clear Command History', 'reference': 'https://attack.mitre.org/techniques/T1070/003/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
265,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies attempts to clear or disable Windows event log stores using Windows wevetutil command. This is often done by
attackers in an attempt to evade detection or destroy forensic evidence on a system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Clearing Windows Event Logs,,21,d331bbe2-6db4-4941-80a5-8270db72eb61,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (
    (process.name : ""wevtutil.exe"" or process.pe.original_file_name == ""wevtutil.exe"") and
    process.args : (""/e:false"", ""cl"", ""clear-log"")
  ) or
  (
    process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and
    process.args : ""Clear-EventLog""
  )
",now-9m,,"## Triage and analysis

### Investigating Clearing Windows Event Logs

Windows event logs are a fundamental data source for security monitoring, forensics, and incident response. Adversaries
can tamper, clear, and delete this data to break SIEM detections, cover their tracks, and slow down incident response.

This rule looks for the execution of the `wevtutil.exe` utility or the `Clear-EventLog` cmdlet to clear event logs.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
  - Verify if any other anti-forensics behaviors were observed.
- Investigate the event logs prior to the action for suspicious behaviors that an attacker may be trying to cover up.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity
and there are justifications for this action.
- Analyze whether the cleared event log is pertinent to security and general monitoring. Administrators can clear
non-relevant event logs using this mechanism. If this activity is expected and noisy in your environment, consider
adding exceptions — preferably with a combination of user and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
  - This activity is potentially done after the adversary achieves its objectives on the host. Ensure that previous
  actions, if any, are investigated accordingly with their response playbooks.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.001', 'name': 'Clear Windows Event Logs', 'reference': 'https://attack.mitre.org/techniques/T1070/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
266,2020/11/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,"['Elastic', 'Anabella Cristaldi']","Identifies attempts to clear Windows event log stores. This is often done by attackers in an attempt to evade detection
or destroy forensic evidence on a system.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Windows Event Logs Cleared,,21,45ac4800-840f-414c-b221-53dd36a5aaf7,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,query,"event.action:(""audit-log-cleared"" or ""Log clear"")
",now-9m,,"## Triage and analysis

### Investigating Windows Event Logs Cleared

Windows event logs are a fundamental data source for security monitoring, forensics, and incident response. Adversaries
can tamper, clear, and delete this data to break SIEM detections, cover their tracks, and slow down incident response.

This rule looks for the occurrence of clear actions on the `security` event log.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
  - Verify if any other anti-forensics behaviors were observed.
- Investigate the event logs prior to the action for suspicious behaviors that an attacker may be trying to cover up.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
  - This activity is potentially done after the adversary achieves its objectives on the host. Ensure that previous
  actions, if any, are investigated accordingly with their response playbooks.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.001', 'name': 'Clear Windows Event Logs', 'reference': 'https://attack.mitre.org/techniques/T1070/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
267,2021/02/01,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the creation or modification of a local trusted root certificate in Windows. The install of a malicious root
certificate would allow an attacker the ability to masquerade malicious files as valid signed components from any entity
(for example, Microsoft). It could also allow an attacker to decrypt SSL traffic.
",['Certain applications may install root certificates for the purpose of inspecting SSL traffic.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Creation or Modification of Root Certificate,"['https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec', 'https://www.ired.team/offensive-security/persistence/t1130-install-root-certificate']",21,203ab79b-239b-4aa5-8e54-fc50623ee8e4,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  registry.path :
    (
      ""HKLM\\Software\\Microsoft\\SystemCertificates\\Root\\Certificates\\*\\Blob"",
      ""HKLM\\Software\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\*\\Blob"",
      ""HKLM\\Software\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\*\\Blob"",
      ""HKLM\\Software\\Policies\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\*\\Blob""
    ) and
  not process.executable :
              (""?:\\Program Files\\*.exe"",
               ""?:\\Program Files (x86)\\*.exe"",
               ""?:\\Windows\\System32\\*.exe"",
               ""?:\\Windows\\SysWOW64\\*.exe"",
               ""?:\\Windows\\Sysmon64.exe"",
               ""?:\\Windows\\Sysmon.exe"",
               ""?:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*\\MsMpEng.exe"",
               ""?:\\Windows\\WinSxS\\*.exe"",
               ""?:\\Windows\\UUS\\amd64\\MoUsoCoreWorker.exe"")
",now-9m,,"## Triage and analysis

### Investigating Creation or Modification of Root Certificate

Root certificates are the primary level of certifications that tell a browser that the communication is trusted and
legitimate. This verification is based upon the identification of a certification authority. Windows
adds several trusted root certificates so browsers can use them to communicate with websites.

[Check out this post](https://www.thewindowsclub.com/what-are-root-certificates-windows) for more details on root certificates and the involved cryptography.

This rule identifies the creation or modification of a root certificate by monitoring registry modifications. The
installation of a malicious root certificate would allow an attacker the ability to masquerade malicious files as valid
signed components from any entity (for example, Microsoft). It could also allow an attacker to decrypt SSL traffic.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate abnormal behaviors observed by the subject process such as network connections, other registry or file
modifications, and any spawned child processes.
- If one of the processes is suspicious, retrieve it and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This detection may be triggered by certain applications that install root certificates for the purpose of inspecting
SSL traffic. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove the malicious certificate from the root certificate store.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1553', 'name': 'Subvert Trust Controls', 'reference': 'https://attack.mitre.org/techniques/T1553/', 'subtechnique': [{'id': 'T1553.004', 'name': 'Install Root Certificate', 'reference': 'https://attack.mitre.org/techniques/T1553/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
268,2020/03/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC)
certificates. An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a
malicious executable, making it appear the file was from a trusted, legitimate source.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Windows CryptoAPI Spoofing Vulnerability (CVE-2020-0601 - CurveBall),,21,56557cde-d923-4b88-adee-c61b3f3b5dc3,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.provider:""Microsoft-Windows-Audit-CVE"" and message:""[CVE-2020-0601]""
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1553', 'name': 'Subvert Trust Controls', 'reference': 'https://attack.mitre.org/techniques/T1553/', 'subtechnique': [{'id': 'T1553.002', 'name': 'Code Signing', 'reference': 'https://attack.mitre.org/techniques/T1553/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
269,2020/12/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies modifications to the Windows Defender registry settings to disable the service or set the service to be
started manually.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Windows Defender Disabled via Registry Modification,['https://thedfirreport.com/2020/12/13/defender-control/'],21,2ffa1f1e-b6db-47fa-994b-1512743847eb,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  (
    (
      registry.path:""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware"" and
      registry.data.strings: (""1"", ""0x00000001"")
   ) or
   (
      registry.path:""HKLM\\System\\*ControlSet*\\Services\\WinDefend\\Start"" and
      registry.data.strings in (""3"", ""4"", ""0x00000003"", ""0x00000004"")
   )
  ) and

  not process.executable :
           (""?:\\WINDOWS\\system32\\services.exe"",
            ""?:\\Windows\\System32\\svchost.exe"",
            ""?:\\Program Files (x86)\\Trend Micro\\Security Agent\\NTRmv.exe"")
",now-9m,,"## Triage and analysis

### Investigating Windows Defender Disabled via Registry Modification

Microsoft Windows Defender is an antivirus product built into Microsoft Windows, which makes it popular across multiple
environments. Disabling it is a common step in threat actor playbooks.

This rule monitors the registry for configurations that disable Windows Defender or the start of its service.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check if this operation was approved and performed according to the organization's change management policy.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity,
the configuration is justified (for example, it is being used to deploy other security solutions or troubleshooting),
and no other suspicious activity has been observed.

### Related rules

- Disabling Windows Defender Security Settings via PowerShell - c8cccb06-faf2-4cd5-886e-2c9636cfcb87
- Microsoft Windows Defender Tampering - fe794edd-487f-4a90-b285-3ee54f2af2d3

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Re-enable Windows Defender and restore the service configurations to automatic start.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}, {'id': 'T1562.006', 'name': 'Indicator Blocking', 'reference': 'https://attack.mitre.org/techniques/T1562/006/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
270,2021/07/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies modifications to the Windows Defender configuration settings using PowerShell to add exclusions at the folder
directory or process level.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Windows Defender Exclusions Added via PowerShell,['https://www.bitdefender.com/files/News/CaseStudies/study/400/Bitdefender-PR-Whitepaper-MosaicLoader-creat5540-en-EN.pdf'],47,2c17e5d7-08b9-43b2-b58a-0270d65ac85b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
 (process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") or process.pe.original_file_name in (""powershell.exe"", ""pwsh.dll"", ""powershell_ise.exe"")) and
  process.args : (""*Add-MpPreference*"", ""*Set-MpPreference*"") and
  process.args : (""*-Exclusion*"")
",now-9m,,"## Triage and analysis

### Investigating Windows Defender Exclusions Added via PowerShell

Microsoft Windows Defender is an antivirus product built into Microsoft Windows. Since this software product is
used to prevent and stop malware, it's important to monitor what specific exclusions are made to the product's configuration
settings. These can often be signs of an adversary or malware trying to bypass Windows Defender's capabilities. One of
the more notable [examples](https://www.cyberbit.com/blog/endpoint-security/latest-trickbot-variant-has-new-tricks-up-its-sleeve/)
was observed in 2018 where Trickbot incorporated mechanisms to disable Windows Defender to avoid detection.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Examine the exclusion in order to determine the intent behind it.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- If the exclusion specifies a suspicious file or path, retrieve the file(s) and determine if malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This rule has a high chance to produce false positives due to how often network administrators legitimately configure
exclusions. In order to validate the activity further, review the specific exclusion and its intent. There are many
legitimate reasons for exclusions, so it's important to gain context.

### Related rules

- Windows Defender Disabled via Registry Modification - 2ffa1f1e-b6db-47fa-994b-1512743847eb
- Disabling Windows Defender Security Settings via PowerShell - c8cccb06-faf2-4cd5-886e-2c9636cfcb87

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Exclusion lists for antimalware capabilities should always be routinely monitored for review.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}, {'id': 'T1562.006', 'name': 'Indicator Blocking', 'reference': 'https://attack.mitre.org/techniques/T1562/006/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
271,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of the fsutil.exe to delete the volume USNJRNL. This technique is used by attackers to eliminate evidence
of files created during post-exploitation activities.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Delete Volume USN Journal with Fsutil,,21,f675872f-6d85-40a3-b502-c0d2ef101e92,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""fsutil.exe"" or process.pe.original_file_name == ""fsutil.exe"") and
  process.args : ""deletejournal"" and process.args : ""usn""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.004', 'name': 'File Deletion', 'reference': 'https://attack.mitre.org/techniques/T1070/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
272,2022/01/31,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies attempts to disable PowerShell Script Block Logging via registry modification. Attackers may disable this
logging to conceal their activities in the host and evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,PowerShell Script Block Logging Disabled,['https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.PowerShell::EnableScriptBlockLogging'],47,818e23e6-2094-4f0e-8c01-22d30f3506c6,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"registry where event.type == ""change"" and
    registry.path :
        ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\\EnableScriptBlockLogging""
    and registry.data.strings : (""0"", ""0x00000000"")
",now-9m,,"## Triage and analysis

### Investigating PowerShell Script Block Logging Disabled

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, making
it available in various environments and creating an attractive way for attackers to execute code.

PowerShell Script Block Logging is a feature of PowerShell that records the content of all script blocks that it
processes, giving defenders visibility of PowerShell scripts and sequences of executed commands.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check whether it makes sense for the user to use PowerShell to complete tasks.
- Investigate if PowerShell scripts were run after logging was disabled.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- PowerShell Suspicious Discovery Related Windows API Functions - 61ac3638-40a3-44b2-855a-985636ca985e
- PowerShell Keylogging Script - bd2c86a0-8b61-4457-ab38-96943984e889
- PowerShell Suspicious Script with Audio Capture Capabilities - 2f2f4939-0b34-40c2-a0a3-844eb7889f43
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d
- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad
- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a
- PowerShell Suspicious Script with Screenshot Capabilities - 959a7353-1129-4aa7-9084-30746b256a70

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be configured (Enable).

Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.002', 'name': 'Disable Windows Event Logging', 'reference': 'https://attack.mitre.org/techniques/T1562/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
273,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of the netsh.exe to disable or weaken the local firewall. Attackers will use this command line tool to
disable the firewall during troubleshooting or to enable network mobility.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Disable Windows Firewall Rules via Netsh,,47,4b438734-3793-4fda-bd42-ceeada0be8f9,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""netsh.exe"" and
  (
    (process.args : ""disable"" and process.args : ""firewall"" and process.args : ""set"") or
    (process.args : ""advfirewall"" and process.args : ""off"" and process.args : ""state"")
  )
",now-9m,,"## Triage and analysis

### Investigating Disable Windows Firewall Rules via Netsh

The Windows Defender Firewall is a native component which provides host-based, two-way network traffic filtering for a
device, and blocks unauthorized network traffic flowing into or out of the local device.

Attackers can disable the Windows firewall or its rules to enable lateral movement and command and control activity.

This rule identifies patterns related to disabling the Windows firewall or its rules using the `netsh.exe` utility.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the user to check if they are aware of the operation.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- This mechanism can be used legitimately. Check whether the user is an administrator and is legitimately performing
troubleshooting.
- In case of an allowed benign true positive (B-TP), assess adding rules to allow needed traffic and re-enable the firewall.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.004', 'name': 'Disable or Modify System Firewall', 'reference': 'https://attack.mitre.org/techniques/T1562/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
274,2021/07/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],Identifies use of the Set-MpPreference PowerShell command to disable or weaken certain Windows Defender settings.,['Planned Windows Defender configuration changes.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Disabling Windows Defender Security Settings via PowerShell,['https://docs.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=windowsserver2019-ps'],47,c8cccb06-faf2-4cd5-886e-2c9636cfcb87,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
 (process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") or process.pe.original_file_name in (""powershell.exe"", ""pwsh.dll"", ""powershell_ise.exe"")) and
 process.args : ""Set-MpPreference"" and process.args : (""-Disable*"", ""Disabled"", ""NeverSend"", ""-Exclusion*"")
",now-9m,,"## Triage and analysis

### Investigating Disabling Windows Defender Security Settings via PowerShell

Microsoft Windows Defender is an antivirus product built into Microsoft Windows, which makes it popular across multiple
environments. Disabling it is a common step in threat actor playbooks.

This rule monitors the execution of commands that can tamper the Windows Defender antivirus features.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Examine the command line to determine which action was executed. Based on that, examine exceptions, antivirus state,
sample submission, etc.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity,
the configuration is justified (for example, it is being used to deploy other security solutions or troubleshooting),
and no other suspicious activity has been observed.

### Related rules

- Windows Defender Disabled via Registry Modification - 2ffa1f1e-b6db-47fa-994b-1512743847eb
- Microsoft Windows Defender Tampering - fe794edd-487f-4a90-b285-3ee54f2af2d3

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Based on the command line, take actions to restore the appropriate Windows Defender antivirus configurations.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
275,2021/05/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,"['Elastic', 'Ivan Ninichuck', 'Austin Songer']","Identifies attempts to disable EventLog via the logman Windows utility, PowerShell, or auditpol. This is often done by
attackers in an attempt to evade detection on a system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Disable Windows Event and Security Logs Using Built-in Tools,"['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/logman', 'https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63']",21,4de76544-f0e5-486a-8f84-eae0b6063cdc,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and

  ((process.name:""logman.exe"" or process.pe.original_file_name == ""Logman.exe"") and
      process.args : ""EventLog-*"" and process.args : (""stop"", ""delete"")) or

  ((process.name : (""pwsh.exe"", ""powershell.exe"", ""powershell_ise.exe"") or process.pe.original_file_name in
      (""pwsh.exe"", ""powershell.exe"", ""powershell_ise.exe"")) and
	process.args : ""Set-Service"" and process.args: ""EventLog"" and process.args : ""Disabled"")  or

  ((process.name:""auditpol.exe"" or process.pe.original_file_name == ""AUDITPOL.EXE"") and process.args : ""/success:disable"")
",now-9m,,"## Triage and analysis

### Investigating Disable Windows Event and Security Logs Using Built-in Tools

Windows event logs are a fundamental data source for security monitoring, forensics, and incident response. Adversaries
can tamper, clear, and delete this data to break SIEM detections, cover their tracks, and slow down incident response.

This rule looks for the usage of different utilities to disable the EventLog service or specific event logs.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
  - Verify if any other anti-forensics behaviors were observed.
- Investigate the event logs prior to the action for suspicious behaviors that an attacker may be trying to cover up.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Re-enable affected logging components, services, and security monitoring.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.001', 'name': 'Clear Windows Event Logs', 'reference': 'https://attack.mitre.org/techniques/T1070/001/'}]}, {'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.006', 'name': 'Indicator Blocking', 'reference': 'https://attack.mitre.org/techniques/T1562/006/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
276,2021/07/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Austin Songer'],"Identifies when a user enables DNS-over-HTTPS. This can be used to hide internet activity or the process of exfiltrating
data. With this enabled, an organization will lose visibility into data such as query type, response, and originating
IP, which are used to determine bad actors.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,DNS-over-HTTPS Enabled via Registry,"['https://www.tenforums.com/tutorials/151318-how-enable-disable-dns-over-https-doh-microsoft-edge.html', 'https://chromeenterprise.google/policies/?policy=DnsOverHttpsMode']",21,a22a09c2-2162-4df0-a356-9aacbeb56a04,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  (registry.path : ""*\\SOFTWARE\\Policies\\Microsoft\\Edge\\BuiltInDnsClientEnabled"" and
  registry.data.strings : ""1"") or
  (registry.path : ""*\\SOFTWARE\\Google\\Chrome\\DnsOverHttpsMode"" and
  registry.data.strings : ""secure"") or
  (registry.path : ""*\\SOFTWARE\\Policies\\Mozilla\\Firefox\\DNSOverHTTPS"" and
  registry.data.strings : ""1"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
277,2020/08/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],Identifies suspicious .NET code execution. connections.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious .NET Code Compilation,,47,201200f1-a99b-43fb-88ed-f65a45c4972c,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : (""csc.exe"", ""vbc.exe"") and
  process.parent.name : (""wscript.exe"", ""mshta.exe"", ""cscript.exe"", ""wmic.exe"", ""svchost.exe"", ""rundll32.exe"", ""cmstp.exe"", ""regsvr32.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/', 'subtechnique': [{'id': 'T1027.004', 'name': 'Compile After Delivery', 'reference': 'https://attack.mitre.org/techniques/T1027/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
278,2020/10/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of the network shell utility (netsh.exe) to enable inbound Remote Desktop Protocol (RDP) connections in
the Windows Firewall.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Remote Desktop Enabled in Windows Firewall by Netsh,,47,074464f9-f30d-4029-8c03-0ed237fffec7,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
 (process.name : ""netsh.exe"" or process.pe.original_file_name == ""netsh.exe"") and
 process.args : (""localport=3389"", ""RemoteDesktop"", ""group=\""remote desktop\"""") and
 process.args : (""action=allow"", ""enable=Yes"", ""enable"")
",now-9m,,"## Triage and analysis

### Investigating Remote Desktop Enabled in Windows Firewall by Netsh

Microsoft Remote Desktop Protocol (RDP) is a proprietary Microsoft protocol that enables remote connections to other
computers, typically over TCP port 3389.

Attackers can use RDP to conduct their actions interactively. Ransomware operators frequently use RDP to access
victim servers, often using privileged accounts.

This rule detects the creation of a Windows Firewall inbound rule that would allow inbound RDP traffic using the
`netsh.exe` utility.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the user to check if they are aware of the operation.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check whether it makes sense to enable RDP to this host, given its role in the environment.
- Check if the host is directly exposed to the internet.
- Check whether privileged accounts accessed the host shortly after the modification.
- Review network events within a short timespan of this alert for incoming RDP connection attempts.

### False positive analysis

- The `netsh.exe` utility can be used legitimately. Check whether the user should be performing this kind of activity, whether the user is aware
of it, whether RDP should be open, and whether the action exposes the environment to unnecessary risks.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If RDP is needed, make sure to secure it:
  - Allowlist RDP traffic to specific trusted hosts.
  - Restrict RDP logins to authorized non-administrator accounts, where possible.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.004', 'name': 'Disable or Modify System Firewall', 'reference': 'https://attack.mitre.org/techniques/T1562/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
279,2021/07/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies use of the netsh.exe program to enable host discovery via the network. Attackers can use this command-line
tool to weaken the host firewall settings.
",['Host Windows Firewall planned system administration changes.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Enable Host Network Discovery via Netsh,,47,8b4f0816-6a65-4630-86a6-c21c179c0d09,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
process.name : ""netsh.exe"" and
process.args : (""firewall"", ""advfirewall"") and process.args : ""group=Network Discovery"" and process.args : ""enable=Yes""
",now-9m,,"## Triage and analysis

### Investigating Enable Host Network Discovery via Netsh

The Windows Defender Firewall is a native component that provides host-based, two-way network traffic filtering for a
device and blocks unauthorized network traffic flowing into or out of the local device.

Attackers can enable Network Discovery on the Windows firewall to find other systems present in the same network. Systems
with this setting enabled will communicate with other systems using broadcast messages, which can be used to identify
targets for lateral movement. This rule looks for the setup of this setting using the netsh utility.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity
and there are justifications for this configuration.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Disable Network Discovery:
    - Using netsh: `netsh advfirewall firewall set rule group=""Network Discovery"" new enable=No`
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.004', 'name': 'Disable or Modify System Firewall', 'reference': 'https://attack.mitre.org/techniques/T1562/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
280,2021/09/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies unusual instances of Control Panel with suspicious keywords or paths in the process command line value.
Adversaries may abuse control.exe to proxy execution of malicious code.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Control Panel Process with Unusual Arguments,['https://www.joesandbox.com/analysis/476188/1/html'],73,416697ae-e468-4093-a93d-59661fa619ec,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 process.executable : (""?:\\Windows\\SysWOW64\\control.exe"", ""?:\\Windows\\System32\\control.exe"") and
 process.command_line :
          (""*.jpg*"",
           ""*.png*"",
           ""*.gif*"",
           ""*.bmp*"",
           ""*.jpeg*"",
           ""*.TIFF*"",
           ""*.inf*"",
           ""*.cpl:*/*"",
           ""*../../..*"",
           ""*/AppData/Local/*"",
           ""*:\\Users\\Public\\*"",
           ""*\\AppData\\Local\\*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.002', 'name': 'Control Panel', 'reference': 'https://attack.mitre.org/techniques/T1218/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
281,2020/10/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies abuse of the Windows Update Auto Update Client (wuauclt.exe) to load an arbitrary DLL. This behavior is used
as a defense evasion technique to blend-in malicious activity with legitimate Windows software.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,ImageLoad via Windows Update Auto Update Client,['https://dtm.uk/wuauclt/'],47,edf8ee23-5ea7-4123-ba19-56b41e424ae3,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  (process.pe.original_file_name == ""wuauclt.exe"" or process.name : ""wuauclt.exe"") and
   /* necessary windows update client args to load a dll */
   process.args : ""/RunHandlerComServer"" and process.args : ""/UpdateDeploymentProvider"" and
   /* common paths writeable by a standard user where the target DLL can be placed */
   process.args : (""C:\\Users\\*.dll"", ""C:\\ProgramData\\*.dll"", ""C:\\Windows\\Temp\\*.dll"", ""C:\\Windows\\Tasks\\*.dll"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,e70679c2-6cde-4510-9764-4823df18f7db,Comprehensive Process Timeline,,,,,,,,,,,,,,,,
282,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, was started by Excel or Word. This is unusual behavior for the Build
Engine and could have been caused by an Excel or Word document executing a malicious script payload.
",['    The Build Engine is commonly used by Windows developers but use by non-engineers is unusual. It is quite unusual for\n    this program to be started by an Office application like Word or Excel.\n    '],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Build Engine Started by an Office Application,['https://blog.talosintelligence.com/2020/02/building-bypass-with-msbuild.html'],73,c5dc3223-13a2-44a2-946c-e9dc0aa0449c,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""MSBuild.exe"" and
  process.parent.name : (""eqnedt32.exe"",
                         ""excel.exe"",
                         ""fltldr.exe"",
                         ""msaccess.exe"",
                         ""mspub.exe"",
                         ""outlook.exe"",
                         ""powerpnt.exe"",
                         ""winword.exe"" )
",now-9m,,"## Triage and analysis

### Investigating Microsoft Build Engine Started by an Office Application

Microsoft Office (MS Office) is a suite of applications designed to help with productivity and completing common tasks on a computer.
You can create and edit documents containing text and images, work with data in spreadsheets and databases, and create
presentations and posters. As it is some of the most-used software across companies, MS Office is frequently targeted
for initial access. It also has a wide variety of capabilities that attackers can take advantage of.

The Microsoft Build Engine is a platform for building applications. This engine, also known as MSBuild, provides an XML
schema for a project file that controls how the build platform processes and builds software, and can be abused to proxy
execution of code.

This rule looks for the `Msbuild.exe` utility spawned by MS Office programs. This is generally the result of the
execution of malicious documents.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve MS Office documents received and opened by the user that could cause this behavior. Common locations include,
but are not limited to, the Downloads and Document folders and the folder configured at the email client.
- Determine if the collected files are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
  - If the malicious file was delivered via phishing:
    - Block the email sender from sending future emails.
    - Block the malicious web pages.
    - Remove emails from the sender from mailboxes.
    - Consider improvements to the security awareness program.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/', 'subtechnique': [{'id': 'T1127.001', 'name': 'MSBuild', 'reference': 'https://attack.mitre.org/techniques/T1127/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
283,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, was started by a script or the Windows command interpreter. This
behavior is unusual and is sometimes used by malicious payloads.
",['The Build Engine is commonly used by Windows developers but use by non-engineers is unusual.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Build Engine Started by a Script Process,,21,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae2,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""MSBuild.exe"" or process.pe.original_file_name == ""MSBuild.exe"") and
  process.parent.name : (""cmd.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"", ""cscript.exe"", ""wscript.exe"", ""mshta.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/', 'subtechnique': [{'id': 'T1127.001', 'name': 'MSBuild', 'reference': 'https://attack.mitre.org/techniques/T1127/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
284,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, was started by Explorer or the WMI (Windows Management
Instrumentation) subsystem. This behavior is unusual and is sometimes used by malicious payloads.
",['The Build Engine is commonly used by Windows developers but use by non-engineers is unusual.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Build Engine Started by a System Process,,47,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae3,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""MSBuild.exe"" and
  process.parent.name : (""explorer.exe"", ""wmiprvse.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/', 'subtechnique': [{'id': 'T1127.001', 'name': 'MSBuild', 'reference': 'https://attack.mitre.org/techniques/T1127/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
285,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, was started after being renamed. This is uncommon behavior and may
indicate an attempt to run unnoticed or undetected.
",['The Build Engine is commonly used by Windows developers but use by non-engineers is unusual.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Build Engine Using an Alternate Name,,21,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae4,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.pe.original_file_name == ""MSBuild.exe"" and
  not process.name : ""MSBuild.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.003', 'name': 'Rename System Utilities', 'reference': 'https://attack.mitre.org/techniques/T1036/003/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
286,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, started a PowerShell script or the Visual C# Command Line Compiler.
This technique is sometimes used to deploy a malicious payload using the Build Engine.
","['    The Build Engine is commonly used by Windows developers but use by non-engineers is unusual. If a build system\n    triggers this rule it can be exempted by process, user or host name.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Build Engine Started an Unusual Process,['https://blog.talosintelligence.com/2020/02/building-bypass-with-msbuild.html'],21,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae6,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""MSBuild.exe"" and
  process.name : (""csc.exe"", ""iexplore.exe"", ""powershell.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/', 'subtechnique': [{'id': 'T1027.004', 'name': 'Compile After Delivery', 'reference': 'https://attack.mitre.org/techniques/T1027/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
287,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies an instance of a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking
starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade
defenses via side loading a malicious DLL within the memory space of one of those processes.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential DLL SideLoading via Trusted Microsoft Programs,,73,1160dcdb-0a0a-4a79-91d8-9b84616edebd,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.pe.original_file_name in (""WinWord.exe"", ""EXPLORER.EXE"", ""w3wp.exe"", ""DISM.EXE"") and
  not (process.name : (""winword.exe"", ""explorer.exe"", ""w3wp.exe"", ""Dism.exe"") or
         process.executable : (""?:\\Windows\\explorer.exe"",
                               ""?:\\Program Files\\Microsoft Office\\root\\Office*\\WINWORD.EXE"",
                               ""?:\\Program Files?(x86)\\Microsoft Office\\root\\Office*\\WINWORD.EXE"",
                               ""?:\\Windows\\System32\\Dism.exe"",
                               ""?:\\Windows\\SysWOW64\\Dism.exe"",
                               ""?:\\Windows\\System32\\inetsrv\\w3wp.exe"")
         )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
288,2021/07/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,"['Elastic', 'Dennis Perto']","Identifies a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking starting after being
renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade defenses via
side-loading a malicious DLL within the memory space of one of those processes.
",['Microsoft Antimalware Service Executable installed on non default installation path.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential DLL Side-Loading via Microsoft Antimalware Service Executable,['https://news.sophos.com/en-us/2021/07/04/independence-day-revil-uses-supply-chain-exploit-to-attack-hundreds-of-businesses/'],73,053a0387-f3b5-4ba5-8245-8002cca2bd08,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  (process.pe.original_file_name == ""MsMpEng.exe"" and not process.name : ""MsMpEng.exe"") or
  (process.name : ""MsMpEng.exe"" and not
        process.executable : (""?:\\ProgramData\\Microsoft\\Windows Defender\\*.exe"",
                              ""?:\\Program Files\\Windows Defender\\*.exe"",
                              ""?:\\Program Files (x86)\\Windows Defender\\*.exe"",
                              ""?:\\Program Files\\Microsoft Security Client\\*.exe"",
                              ""?:\\Program Files (x86)\\Microsoft Security Client\\*.exe""))
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.002', 'name': 'DLL Side-Loading', 'reference': 'https://attack.mitre.org/techniques/T1574/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
289,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Masquerading can allow an adversary to evade defenses and better blend in with the environment. One way it occurs is
when the name or location of a file is manipulated as a means of tricking a user into executing what they think is a
benign file type but is actually executable code.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Executable File Creation with Multiple Extensions,,47,8b2b3a62-a598-4293-bc14-3d5fa22bb98f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"file where event.type == ""creation"" and file.extension : ""exe"" and
  file.name regex~ """""".*\.(vbs|vbe|bat|js|cmd|wsh|ps1|pdf|docx?|xlsx?|pptx?|txt|rtf|gif|jpg|png|bmp|hta|txt|img|iso)\.exe"""""" and
  not (process.executable : (""?:\\Windows\\System32\\msiexec.exe"", ""C:\\Users\\*\\QGIS_SCCM\\Files\\QGIS-OSGeo4W-*-Setup-x86_64.exe"") and
       file.path : ""?:\\Program Files\\QGIS *\\apps\\grass\\*.exe"") and
  not process.executable : (""/bin/sh"", ""/usr/sbin/MailScanner"", ""/usr/bin/perl"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.007', 'name': 'Double File Extension', 'reference': 'https://attack.mitre.org/techniques/T1036/007/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/', 'subtechnique': [{'id': 'T1204.002', 'name': 'Malicious File', 'reference': 'https://attack.mitre.org/techniques/T1204/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
290,2020/10/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies process execution from suspicious default Windows directories. This is sometimes done by adversaries to hide
malware in trusted paths.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Process Execution from an Unusual Directory,,47,ebfe1448-7fac-4d59-acea-181bd89b1f7f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 /* add suspicious execution paths here */
process.executable : (""C:\\PerfLogs\\*.exe"",""C:\\Users\\Public\\*.exe"",""C:\\Windows\\Tasks\\*.exe"",""C:\\Intel\\*.exe"",""C:\\AMD\\Temp\\*.exe"",""C:\\Windows\\AppReadiness\\*.exe"",
""C:\\Windows\\ServiceState\\*.exe"",""C:\\Windows\\security\\*.exe"",""C:\\Windows\\IdentityCRL\\*.exe"",""C:\\Windows\\Branding\\*.exe"",""C:\\Windows\\csc\\*.exe"",
 ""C:\\Windows\\DigitalLocker\\*.exe"",""C:\\Windows\\en-US\\*.exe"",""C:\\Windows\\wlansvc\\*.exe"",""C:\\Windows\\Prefetch\\*.exe"",""C:\\Windows\\Fonts\\*.exe"",
 ""C:\\Windows\\diagnostics\\*.exe"",""C:\\Windows\\TAPI\\*.exe"",""C:\\Windows\\INF\\*.exe"",""C:\\Windows\\System32\\Speech\\*.exe"",""C:\\windows\\tracing\\*.exe"",
 ""c:\\windows\\IME\\*.exe"",""c:\\Windows\\Performance\\*.exe"",""c:\\windows\\intel\\*.exe"",""c:\\windows\\ms\\*.exe"",""C:\\Windows\\dot3svc\\*.exe"",
 ""C:\\Windows\\panther\\*.exe"",""C:\\Windows\\RemotePackages\\*.exe"",""C:\\Windows\\OCR\\*.exe"",""C:\\Windows\\appcompat\\*.exe"",""C:\\Windows\\apppatch\\*.exe"",""C:\\Windows\\addins\\*.exe"",
 ""C:\\Windows\\Setup\\*.exe"",""C:\\Windows\\Help\\*.exe"",""C:\\Windows\\SKB\\*.exe"",""C:\\Windows\\Vss\\*.exe"",""C:\\Windows\\Web\\*.exe"",""C:\\Windows\\servicing\\*.exe"",""C:\\Windows\\CbsTemp\\*.exe"",
 ""C:\\Windows\\Logs\\*.exe"",""C:\\Windows\\WaaS\\*.exe"",""C:\\Windows\\ShellExperiences\\*.exe"",""C:\\Windows\\ShellComponents\\*.exe"",""C:\\Windows\\PLA\\*.exe"",
 ""C:\\Windows\\Migration\\*.exe"",""C:\\Windows\\debug\\*.exe"",""C:\\Windows\\Cursors\\*.exe"",""C:\\Windows\\Containers\\*.exe"",""C:\\Windows\\Boot\\*.exe"",""C:\\Windows\\bcastdvr\\*.exe"",
 ""C:\\Windows\\assembly\\*.exe"",""C:\\Windows\\TextInput\\*.exe"",""C:\\Windows\\security\\*.exe"",""C:\\Windows\\schemas\\*.exe"",""C:\\Windows\\SchCache\\*.exe"",""C:\\Windows\\Resources\\*.exe"",
 ""C:\\Windows\\rescache\\*.exe"",""C:\\Windows\\Provisioning\\*.exe"",""C:\\Windows\\PrintDialog\\*.exe"",""C:\\Windows\\PolicyDefinitions\\*.exe"",""C:\\Windows\\media\\*.exe"",
 ""C:\\Windows\\Globalization\\*.exe"",""C:\\Windows\\L2Schemas\\*.exe"",""C:\\Windows\\LiveKernelReports\\*.exe"",""C:\\Windows\\ModemLogs\\*.exe"",""C:\\Windows\\ImmersiveControlPanel\\*.exe"") and
 not process.name : (""SpeechUXWiz.exe"",""SystemSettings.exe"",""TrustedInstaller.exe"",""PrintDialog.exe"",""MpSigStub.exe"",""LMS.exe"",""mpam-*.exe"") and
 not process.executable :
           (""?:\\Intel\\Wireless\\WUSetupLauncher.exe"",
            ""?:\\Intel\\Wireless\\Setup.exe"",
            ""?:\\Intel\\Move Mouse.exe"",
            ""?:\\windows\\Panther\\DiagTrackRunner.exe"",
            ""?:\\Windows\\servicing\\GC64\\tzupd.exe"",
            ""?:\\Users\\Public\\res\\RemoteLite.exe"",
            ""?:\\Users\\Public\\IBM\\ClientSolutions\\*.exe"",
            ""?:\\Users\\Public\\Documents\\syspin.exe"",
            ""?:\\Users\\Public\\res\\FileWatcher.exe"")
 /* uncomment once in winlogbeat */
 /* and not (process.code_signature.subject_name == ""Microsoft Corporation"" and process.code_signature.trusted == true) */
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.005', 'name': 'Match Legitimate Name or Location', 'reference': 'https://attack.mitre.org/techniques/T1036/005/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
291,2020/11/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies registry write modifications to hide an encoded portable executable. This could be indicative of adversary
defense evasion by avoiding the storing of malicious content directly on disk.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Encoded Executable Stored in the Registry,,47,93c1ce76-494c-4f01-8167-35edfb52f7b1,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"registry where
/* update here with encoding combinations */
 registry.data.strings : ""TVqQAAMAAAAEAAAA*""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1140', 'name': 'Deobfuscate/Decode Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1140/'}, {'id': 'T1112', 'name': 'Modify Registry', 'reference': 'https://attack.mitre.org/techniques/T1112/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
292,2020/04/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies when Internet Information Services (IIS) HTTP Logging is disabled on a server. An attacker with IIS server
access via a webshell or other mechanism can disable HTTP Logging as an effective anti-forensics measure.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,IIS HTTP Logging Disabled,,73,ebf1adea-ccf2-4943-8b96-7ab11ca173a5,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""appcmd.exe"" or process.pe.original_file_name == ""appcmd.exe"") and
  process.args : ""/dontLog*:*True"" and
  not process.parent.name : ""iissetup.exe""
",now-9m,33.0,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.002', 'name': 'Disable Windows Event Logging', 'reference': 'https://attack.mitre.org/techniques/T1562/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
293,2020/03/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An instance of MSBuild, the Microsoft Build Engine, created a thread in another process. This technique is sometimes
used to evade detection or elevate privileges.
",['The Build Engine is commonly used by Windows developers but use by non-engineers is unusual.'],"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Process Injection by the Microsoft Build Engine,,21,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae9,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"process.name:MSBuild.exe and event.action:""CreateRemoteThread detected (rule: CreateRemoteThread)""
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
294,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies InstallUtil.exe making outbound network connections. This may indicate adversarial activity as InstallUtil is
often leveraged by adversaries to execute code and evade detection.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,InstallUtil Process Making Network Connections,,47,a13167f1-eec2-4015-9631-1fee60406dcf,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"/* the benefit of doing this as an eql sequence vs kql is this will limit to alerting only on the first network connection */

sequence by process.entity_id
  [process where event.type == ""start"" and process.name : ""installutil.exe""]
  [network where process.name : ""installutil.exe"" and network.direction : (""outgoing"", ""egress"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.004', 'name': 'InstallUtil', 'reference': 'https://attack.mitre.org/techniques/T1218/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
295,2020/08/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"A suspicious Endpoint Security parent process was detected. This may indicate a process hollowing or other form of code
injection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Endpoint Security Parent Process,,47,b41a13c6-ba45-4bab-a534-df53d0cfed6a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 process.name : (""esensor.exe"", ""elastic-endpoint.exe"") and
 process.parent.executable != null and
  /* add FPs here */
 not process.parent.executable : (""C:\\Program Files\\Elastic\\*"",
                                  ""C:\\Windows\\System32\\services.exe"",
                                  ""C:\\Windows\\System32\\WerFault*.exe"",
                                  ""C:\\Windows\\System32\\wermgr.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
296,2020/09/01,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies a suspicious AutoIt process execution. Malware written as an AutoIt script tends to rename the AutoIt
executable to avoid detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Renamed AutoIt Scripts Interpreter,,47,2e1e835d-01e5-48ca-b9fc-7a61f7f11902,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.pe.original_file_name : ""AutoIt*.exe"" and not process.name : ""AutoIt*.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.003', 'name': 'Rename System Utilities', 'reference': 'https://attack.mitre.org/techniques/T1036/003/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
297,2020/08/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"A suspicious WerFault child process was detected, which may indicate an attempt to run unnoticed. Verify process details
such as command line, network connections, file writes and parent process details as well.
",['Custom Windows error reporting debugger or applications restarted by WerFault after a crash.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious WerFault Child Process,"['https://www.hexacorn.com/blog/2019/09/19/silentprocessexit-quick-look-under-the-hood/', 'https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Persistence/persistence_SilentProcessExit_ImageHijack_sysmon_13_1.evtx', 'https://blog.menasec.net/2021/01/']",47,ac5012b8-8da8-440b-aaaf-aedafdea2dff,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""WerFault.exe"" and
  not process.name : (""cofire.exe"",
                      ""psr.exe"",
                      ""VsJITDebugger.exe"",
                      ""TTTracer.exe"",
                      ""rundll32.exe"",
                      ""LogiOptionsMgr.exe"") and
  not process.args : (""/LOADSAVEDWINDOWS"",
                      ""/restore"",
                      ""RestartByRestartManager*"",
                      ""--restarted"",
                      ""createdump"",
                      ""dontsend"",
                      ""/watson"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
298,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies execution from a directory masquerading as the Windows Program Files directories. These paths are trusted and
usually host trusted third party programs. An adversary may leverage masquerading, along with low privileges to bypass
detections allowlisting those folders.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Program Files Directory Masquerading,,47,32c5cf9c-2ef8-4e87-819e-5ccb7cd18b14,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 process.executable : ""C:\\*Program*Files*\\*.exe"" and
 not process.executable : (""C:\\Program Files\\*.exe"", ""C:\\Program Files (x86)\\*.exe"", ""C:\\Users\\*.exe"", ""C:\\ProgramData\\*.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.005', 'name': 'Match Legitimate Name or Location', 'reference': 'https://attack.mitre.org/techniques/T1036/005/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
299,2020/08/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious instances of the Windows Error Reporting process (WerFault.exe or Wermgr.exe) with matching
command-line and process executable values performing outgoing network connections. This may be indicative of a
masquerading attempt to evade suspicious child process behavior detections.
",['Legit Application Crash with rare Werfault commandline value'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Windows Error Manager Masquerading,"['https://twitter.com/SBousseaden/status/1235533224337641473', 'https://www.hexacorn.com/blog/2019/09/20/werfault-command-line-switches-v0-1/', 'https://app.any.run/tasks/26051d84-b68e-4afb-8a9a-76921a271b81/']",47,6ea41894-66c3-4df7-ad6b-2c5074eb3df8,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by host.id, process.entity_id with maxspan = 5s
  [process where event.type:""start"" and process.name : (""wermgr.exe"", ""WerFault.exe"") and process.args_count == 1]
  [network where process.name : (""wermgr.exe"", ""WerFault.exe"") and network.protocol != ""dns"" and
    network.direction : (""outgoing"", ""egress"") and destination.ip !=""::1"" and destination.ip !=""127.0.0.1""
  ]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
300,2021/10/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Austin Songer'],"Identifies when one or more features on Microsoft Defender are disabled. Adversaries may disable or tamper with
Microsoft Defender features to evade detection and conceal malicious behavior.
",['Legitimate Windows Defender configuration changes'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Windows Defender Tampering,"['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/', 'https://www.tenforums.com/tutorials/32236-enable-disable-microsoft-defender-pua-protection-windows-10-a.html', 'https://www.tenforums.com/tutorials/104025-turn-off-core-isolation-memory-integrity-windows-10-a.html', 'https://www.tenforums.com/tutorials/105533-enable-disable-windows-defender-exploit-protection-settings.html', 'https://www.tenforums.com/tutorials/123792-turn-off-tamper-protection-microsoft-defender-antivirus.html', 'https://www.tenforums.com/tutorials/51514-turn-off-microsoft-defender-periodic-scanning-windows-10-a.html', 'https://www.tenforums.com/tutorials/3569-turn-off-real-time-protection-microsoft-defender-antivirus.html', 'https://www.tenforums.com/tutorials/99576-how-schedule-scan-microsoft-defender-antivirus-windows-10-a.html']",47,fe794edd-487f-4a90-b285-3ee54f2af2d3,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\PUAProtection"" and
  registry.data.strings : (""0"", ""0x00000000"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender Security Center\\App and Browser protection\\DisallowExploitProtectionOverride"" and
  registry.data.strings : (""0"", ""0x00000000"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Features\\TamperProtection"" and
  registry.data.strings : (""0"", ""0x00000000"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableRealtimeMonitoring"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableIntrusionPreventionSystem"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableScriptScanning"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Windows Defender Exploit Guard\\Controlled Folder Access\\EnableControlledFolderAccess"" and
  registry.data.strings : (""0"", ""0x00000000"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableIOAVProtection"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Reporting\\DisableEnhancedNotifications"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\SpyNet\\DisableBlockAtFirstSeen"" and
  registry.data.strings : (""1"", ""0x00000001"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\SpyNet\\SpynetReporting"" and
  registry.data.strings : (""0"", ""0x00000000"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\SpyNet\\SubmitSamplesConsent"" and
  registry.data.strings : (""0"", ""0x00000000"")) or
  (registry.path : ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableBehaviorMonitoring"" and
  registry.data.strings : (""1"", ""0x00000001""))
",now-9m,,"## Triage and analysis

### Investigating Microsoft Windows Defender Tampering

Microsoft Windows Defender is an antivirus product built into Microsoft Windows, which makes it popular across multiple
environments. Disabling it is a common step in threat actor playbooks.

This rule monitors the registry for modifications that disable Windows Defender features.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Examine which features have been disabled, and check if this operation is done under change management and approved
according to the organization's policy.

### False positive analysis

- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity,
the configuration is justified (for example, it is being used to deploy other security solutions or troubleshooting),
and no other suspicious activity has been observed.

### Related rules

- Windows Defender Disabled via Registry Modification - 2ffa1f1e-b6db-47fa-994b-1512743847eb
- Disabling Windows Defender Security Settings via PowerShell - c8cccb06-faf2-4cd5-886e-2c9636cfcb87

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Take actions to restore the appropriate Windows Defender antivirus configurations.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
301,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature
validation. Adversaries may use these binaries to 'live off the land' and execute malicious files that could bypass
application allowlists and signature validation.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Network Connection via Signed Binary,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],21,63e65ec3-43b1-45b0-8f2d-45b34291dc44,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id
  [process where (process.name : ""expand.exe"" or process.name : ""extrac32.exe"" or
                 process.name : ""ieexec.exe"" or process.name : ""makecab.exe"") and
                 event.type == ""start""]
  [network where (process.name : ""expand.exe"" or process.name : ""extrac32.exe"" or
                 process.name : ""ieexec.exe"" or process.name : ""makecab.exe"") and
    not cidrmatch(destination.ip,
      ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"", ""192.0.0.0/29"", ""192.0.0.8/32"",
      ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"", ""192.0.2.0/24"", ""192.31.196.0/24"",
      ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"", ""192.175.48.0/24"",
      ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"", ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
302,2020/09/02,development,,,2022/09/15,['Elastic'],"Identifies MsBuild.exe making outbound network connections. This may indicate adversarial activity as MsBuild is often
leveraged by adversaries to execute code and evade detection.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,MsBuild Network Connection Sequence,,47,9dc6ed5d-62a9-4feb-a903-fafa1d33b8e9,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"/* duplicate of MsBuild Making Network Connections - 0e79980b-4250-4a50-a509-69294c14e84b */

sequence by process.entity_id
  [process where event.type == ""start"" and process.name : ""MSBuild.exe""]
  [network where process.name : ""MSBuild.exe"" and
     not (destination.ip == ""127.0.0.1"" and source.ip == ""127.0.0.1"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/', 'subtechnique': [{'id': 'T1127.001', 'name': 'MSBuild', 'reference': 'https://attack.mitre.org/techniques/T1127/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
303,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies MsBuild.exe making outbound network connections. This may indicate adversarial activity as MsBuild is often
leveraged by adversaries to execute code and evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,MsBuild Making Network Connections,,47,0e79980b-4250-4a50-a509-69294c14e84b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id
  [process where process.name : ""MSBuild.exe"" and event.type == ""start""]
  [network where process.name : ""MSBuild.exe"" and
     not cidrmatch(destination.ip, ""127.0.0.1"", ""::1"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/', 'subtechnique': [{'id': 'T1127.001', 'name': 'MSBuild', 'reference': 'https://attack.mitre.org/techniques/T1127/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
304,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies Mshta.exe making outbound network connections. This may indicate adversarial activity, as Mshta is often
leveraged by adversaries to execute malicious scripts and evade detection.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Mshta Making Network Connections,,47,c2d90150-0133-451c-a783-533e736c12d7,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id with maxspan=10m
  [process where event.type == ""start"" and process.name : ""mshta.exe"" and
     not process.parent.name : ""Microsoft.ConfigurationManagement.exe"" and
     not (process.parent.executable : ""C:\\Amazon\\Amazon Assistant\\amazonAssistantService.exe"" or
          process.parent.executable : ""C:\\TeamViewer\\TeamViewer.exe"") and
     not process.args : ""ADSelfService_Enroll.hta""]
  [network where process.name : ""mshta.exe""]
",now-20m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.005', 'name': 'Mshta', 'reference': 'https://attack.mitre.org/techniques/T1218/005/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
305,2020/09/02,development,,,2022/09/15,['Elastic'],"Identifies MsXsl.exe making outbound network connections. This may indicate adversarial activity as MsXsl is often
leveraged by adversaries to execute malicious scripts and evade detection.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,MsXsl Making Network Connections,,47,870d1753-1078-403e-92d4-735f142edcca,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"/* duplicate of Network Connection via MsXsl - b86afe07-0d98-4738-b15d-8d7465f95ff5 */

sequence by process.entity_id
  [process where event.type == ""start"" and process.name : ""msxsl.exe""]
  [network where process.name : ""msxsl.exe"" and network.direction : (""outgoing"", ""egress"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1220', 'name': 'XSL Script Processing', 'reference': 'https://attack.mitre.org/techniques/T1220/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
306,2020/03/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies msxsl.exe making a network connection. This may indicate adversarial activity as msxsl.exe is often leveraged
by adversaries to execute malicious scripts and evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Network Connection via MsXsl,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],21,b86afe07-0d98-4738-b15d-8d7465f95ff5,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id
  [process where process.name : ""msxsl.exe"" and event.type == ""start""]
  [network where process.name : ""msxsl.exe"" and
     not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
       ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"",
       ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"",
       ""100.64.0.0/10"", ""192.175.48.0/24"",""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
       ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1220', 'name': 'XSL Script Processing', 'reference': 'https://attack.mitre.org/techniques/T1220/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
307,2022/01/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Microsoft Office Products offer options for users and developers to control the security settings for running and using
Macros. Adversaries may abuse these security settings to modify the default behavior of the Office Application to trust
future macros and/or disable security warnings, which could increase their chances of establishing persistence.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,MS Office Macro Security Registry Modifications,,47,feeed87c-5e95-4339-aef1-47fd79bcfbe3,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"registry where event.type == ""change"" and
    registry.path : (
        ""HKU\\S-1-5-21-*\\SOFTWARE\\Microsoft\\Office\\*\\Security\\AccessVBOM"",
        ""HKU\\S-1-5-21-*\\SOFTWARE\\Microsoft\\Office\\*\\Security\\VbaWarnings""
        ) and
    registry.data.strings == ""0x00000001"" and
    process.name : (""cscript.exe"", ""wscript.exe"", ""mshta.exe"", ""mshta.exe"", ""winword.exe"", ""excel.exe"")
",now-9m,,"## Triage and analysis

### Investigating MS Office Macro Security Registry Modifications

Macros are small programs that are used to automate repetitive tasks in Microsoft Office applications.
Historically, macros have been used for a variety of reasons -- from automating part of a job, to
building entire processes and data flows. Macros are written in Visual Basic for Applications (VBA) and are saved as
part of Microsoft Office files.

Macros are often created for legitimate reasons, but they can also be written by attackers to gain access, harm a
system, or bypass other security controls such as application allow listing. In fact, exploitation from malicious macros
is one of the top ways that organizations are compromised today. These attacks are often conducted through phishing or
spear phishing campaigns.

Attackers can convince victims to modify Microsoft Office security settings, so their macros are trusted by default and
no warnings are displayed when they are executed. These settings include:

* *Trust access to the VBA project object model* - When enabled, Microsoft Office will trust all macros and run any code
without showing a security warning or requiring user permission.
* *VbaWarnings* - When set to 1, Microsoft Office will trust all macros and run any code without showing a security
warning or requiring user permission.

This rule looks for registry changes affecting the conditions above.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the user and check if the change was done manually.
- Verify whether malicious macros were executed after the registry change.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve recently executed Office documents and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity should not happen legitimately. The security team should address any potential benign true
positives (B-TPs), as this configuration can put the user and the domain at risk.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Reset the registry key value.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Explore using GPOs to manage security settings for Microsoft Office macros.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1112', 'name': 'Modify Registry', 'reference': 'https://attack.mitre.org/techniques/T1112/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/', 'subtechnique': [{'id': 'T1204.002', 'name': 'Malicious File', 'reference': 'https://attack.mitre.org/techniques/T1204/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
308,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies network activity from unexpected system applications. This may indicate adversarial activity as these
applications are often leveraged by adversaries to execute code and evade detection.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Unusual Network Activity from a Windows System Binary,,47,1fe3b299-fbb5-4657-a937-1d746f2c711a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id with maxspan=5m
  [process where event.type == ""start"" and

     /* known applocker bypasses */
     (process.name : ""bginfo.exe"" or
      process.name : ""cdb.exe"" or
      process.name : ""control.exe"" or
      process.name : ""cmstp.exe"" or
      process.name : ""csi.exe"" or
      process.name : ""dnx.exe"" or
      process.name : ""fsi.exe"" or
      process.name : ""ieexec.exe"" or
      process.name : ""iexpress.exe"" or
      process.name : ""installutil.exe"" or
      process.name : ""Microsoft.Workflow.Compiler.exe"" or
      process.name : ""MSBuild.exe"" or
      process.name : ""msdt.exe"" or
      process.name : ""mshta.exe"" or
      process.name : ""msiexec.exe"" or
      process.name : ""msxsl.exe"" or
      process.name : ""odbcconf.exe"" or
      process.name : ""rcsi.exe"" or
      process.name : ""regsvr32.exe"" or
      process.name : ""xwizard.exe"")]
  [network where
     (process.name : ""bginfo.exe"" or
      process.name : ""cdb.exe"" or
      process.name : ""control.exe"" or
      process.name : ""cmstp.exe"" or
      process.name : ""csi.exe"" or
      process.name : ""dnx.exe"" or
      process.name : ""fsi.exe"" or
      process.name : ""ieexec.exe"" or
      process.name : ""iexpress.exe"" or
      process.name : ""installutil.exe"" or
      process.name : ""Microsoft.Workflow.Compiler.exe"" or
      process.name : ""MSBuild.exe"" or
      process.name : ""msdt.exe"" or
      process.name : ""mshta.exe"" or
      process.name : ""msiexec.exe"" or
      process.name : ""msxsl.exe"" or
      process.name : ""odbcconf.exe"" or
      process.name : ""rcsi.exe"" or
      process.name : ""regsvr32.exe"" or
      process.name : ""xwizard.exe"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
309,2021/07/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies parent process spoofing used to thwart detection. Adversaries may spoof the parent process identifier (PPID)
of a new process to evade process-monitoring defenses or to elevate privileges.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Parent Process PID Spoofing,['https://blog.didierstevens.com/2017/03/20/'],73,c88d4bd0-5649-4c52-87ea-9be59dbfbcf2,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"/* This rule is compatible with Elastic Endpoint only */

sequence by host.id, user.id with maxspan=5m
 [process where event.type == ""start"" and
  process.Ext.token.integrity_level_name != ""system"" and
  (
    process.pe.original_file_name : (""winword.exe"", ""excel.exe"", ""outlook.exe"", ""powerpnt.exe"", ""eqnedt32.exe"",
                                     ""fltldr.exe"", ""mspub.exe"", ""msaccess.exe"", ""powershell.exe"", ""pwsh.exe"",
                                     ""cscript.exe"", ""wscript.exe"", ""rundll32.exe"", ""regsvr32.exe"", ""msbuild.exe"",
                                     ""mshta.exe"", ""wmic.exe"", ""cmstp.exe"", ""msxsl.exe"") or
    process.executable : (""?:\\Users\\*.exe"",
                          ""?:\\ProgramData\\*.exe"",
                          ""?:\\Windows\\Microsoft.NET\\*.exe"",
                          ""?:\\Windows\\Temp\\*.exe"",
                          ""?:\\Windows\\Tasks\\*"") or
    process.code_signature.trusted != true
  )
  ] by process.pid
 [process where event.type == ""start"" and process.parent.Ext.real.pid > 0 and
  /* process.parent.Ext.real.pid is only populated if the parent process pid doesn't match */

  not (process.name : ""msedge.exe"" and process.parent.name : ""sihost.exe"")
 ] by process.parent.Ext.real.pid
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Access Token Manipulation', 'id': 'T1134', 'reference': 'https://attack.mitre.org/techniques/T1134/', 'subtechnique': [{'name': 'Parent PID Spoofing', 'id': 'T1134.004', 'reference': 'https://attack.mitre.org/techniques/T1134/004/'}]}], 'tactic': {'name': 'Defense Evasion', 'id': 'TA0005', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
310,2022/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Indicates the creation and deletion of a scheduled task within a short time interval. Adversaries can use these to proxy
malicious execution via the schedule service and perform clean up.
",['Legitimate scheduled tasks may be created during installation of new software.'],"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Temporarily Scheduled Task Creation,['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4698'],47,81ff45f8-f8c2-4e28-992e-5a0e8d98e0fe,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'Persistence']",,eql,"sequence by host.id, winlog.event_data.TaskName with maxspan=5m
   [iam where event.action == ""scheduled-task-created""]
   [iam where event.action == ""scheduled-task-deleted""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
311,2021/10/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Detects the use of Reflection.Assembly to load PEs and DLLs in memory in PowerShell scripts. Attackers use this method
to load executables and DLLs without writing to the disk, bypassing security solutions.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Suspicious .NET Reflection via PowerShell,['https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.load'],73,e26f042e-c590-4e82-8e05-41e81bd822ad,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    ""[System.Reflection.Assembly]::Load"" or
    ""[Reflection.Assembly]::Load""
  )
",now-9m,,"## Triage and analysis

### Investigating Suspicious .NET Reflection via PowerShell

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can use .NET reflection to load PEs and DLLs in memory. These payloads are commonly embedded in the script,
which can circumvent file-based security protections.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Retrieve the script and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately outside engineering or IT business units. As long as the analyst did
not identify malware or suspicious activity related to the user or host, this alert can be dismissed.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d
- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/', 'subtechnique': [{'id': 'T1055.001', 'name': 'Dynamic-link Library Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/001/'}, {'id': 'T1055.002', 'name': 'Portable Executable Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
312,2021/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the use of .NET functionality for decompression and base64 decoding combined in PowerShell scripts, which
malware and security tools heavily use to deobfuscate payloads and load them directly in memory to bypass defenses.
",['Legitimate PowerShell Scripts which makes use of compression and encoding.'],"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Suspicious Payload Encoded and Compressed,,47,81fe9dc6-a2d7-4192-a2d8-eed98afc766a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    (
      ""System.IO.Compression.DeflateStream"" or
      ""System.IO.Compression.GzipStream"" or
      ""IO.Compression.DeflateStream"" or
      ""IO.Compression.GzipStream""
    ) and
    FromBase64String
  )
",now-9m,,"## Triage and analysis

### Investigating PowerShell Suspicious Payload Encoded and Compressed

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can embed compressed and encoded payloads in scripts to load directly into the memory without touching the
disk. This strategy can circumvent string and file-based security protections.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Retrieve the script and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately outside engineering or IT business units. As long as the analyst did
not identify malware or suspicious activity related to the user or host, this alert can be dismissed.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d
- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1140', 'name': 'Deobfuscate/Decode Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1140/'}, {'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'name': 'Command and Scripting Interpreter', 'subtechnique': [{'id': 'T1059.001', 'reference': 'https://attack.mitre.org/techniques/T1059/001/', 'name': 'PowerShell'}]}], 'tactic': {'id': 'TA0002', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'name': 'Execution'}}]",,,,,,,,,,,,,,,,,,,
313,2021/10/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects the use of Windows API functions that are commonly abused by malware and security tools to load
malicious code or inject it into remote processes.
",['Legitimate PowerShell scripts that make use of these functions.'],"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Potential Process Injection via PowerShell,"['https://github.com/EmpireProject/Empire/blob/master/data/module_source/management/Invoke-PSInject.ps1', 'https://github.com/EmpireProject/Empire/blob/master/data/module_source/management/Invoke-ReflectivePEInjection.ps1', 'https://github.com/BC-SECURITY/Empire/blob/master/empire/server/data/module_source/credentials/Invoke-Mimikatz.ps1']",73,2e29e96a-b67c-455a-afe4-de6183431d0d,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
   (VirtualAlloc or VirtualAllocEx or VirtualProtect or LdrLoadDll or LoadLibrary or LoadLibraryA or
      LoadLibraryEx or GetProcAddress or OpenProcess or OpenProcessToken or AdjustTokenPrivileges) and
   (WriteProcessMemory or CreateRemoteThread or NtCreateThreadEx or CreateThread or QueueUserAPC or
      SuspendThread or ResumeThread or GetDelegateForFunctionPointer)
  )
",now-9m,,"## Triage and analysis

### Investigating Potential Process Injection via PowerShell

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

PowerShell also has solid capabilities to make the interaction with the Win32 API in an uncomplicated and reliable way,
like the execution of inline C# code, PSReflect, Get-ProcAddress, etc.

Red Team tooling and malware developers take advantage of these capabilities to develop stagers and loaders that inject
payloads directly into the memory without touching the disk to circumvent file-based security protections.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Check if the imported function was executed and which process it targeted.
- Check if the injected code can be retrieved (hardcoded in the script or on command line logs).

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/', 'subtechnique': [{'id': 'T1055.001', 'name': 'Dynamic-link Library Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/001/'}, {'id': 'T1055.002', 'name': 'Portable Executable Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
314,2020/10/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies process execution followed by a file overwrite of an executable by the same parent process. This may indicate
an evasion attempt to execute malicious code in a stealthy way.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Process Herpaderping Attempt,['https://github.com/jxy-s/herpaderping'],73,ccc55af4-9882-4c67-87b4-449a7ae8079c,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence with maxspan=5s
   [process where event.type == ""start"" and not process.parent.executable : ""C:\\Windows\\SoftwareDistribution\\*.exe""] by host.id, process.executable, process.parent.entity_id
   [file where event.type == ""change"" and event.action == ""overwrite"" and file.extension == ""exe""] by host.id, file.path, process.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
315,2021/10/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Austin Songer'],"Identifies when the Windows Firewall is disabled using PowerShell cmdlets, which can help attackers evade network
constraints, like internet and network lateral communication restrictions.
","['    Windows Firewall can be disabled by a system administrator. Verify whether the user identity, user agent, and/or\n    hostname should be making changes in your environment. Windows Profile being disabled by unfamiliar users should be\n    investigated. If known behavior is causing false positives, it can be exempted from the rule.\n    ']","['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Windows Firewall Disabled via PowerShell,"['https://docs.microsoft.com/en-us/powershell/module/netsecurity/set-netfirewallprofile?view=windowsserver2019-ps', 'https://www.tutorialspoint.com/how-to-get-windows-firewall-profile-settings-using-powershell', 'http://powershellhelp.space/commands/set-netfirewallrule-psv5.php', 'http://woshub.com/manage-windows-firewall-powershell/']",47,f63c8e3c-d396-404f-b2ea-0379d3942d73,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.action == ""start"" and
  (process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") or process.pe.original_file_name == ""PowerShell.EXE"") and
   process.args : ""*Set-NetFirewallProfile*"" and
  (process.args : ""*-Enabled*"" and process.args : ""*False*"") and
  (process.args : ""*-All*"" or process.args : (""*Public*"", ""*Domain*"", ""*Private*""))
",now-9m,,"## Triage and analysis

### Investigating Windows Firewall Disabled via PowerShell

Windows Defender Firewall is a native component that provides host-based, two-way network traffic filtering for a
device and blocks unauthorized network traffic flowing into or out of the local device.

Attackers can disable the Windows firewall or its rules to enable lateral movement and command and control activity.

This rule identifies patterns related to disabling the Windows firewall or its rules using the `Set-NetFirewallProfile`
PowerShell cmdlet.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.

### False positive analysis

- This mechanism can be used legitimately. Check whether the user is an administrator and is legitimately performing
troubleshooting.
- In case of an allowed benign true positive (B-TP), assess adding rules to allow needed traffic and re-enable the firewall.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Re-enable the firewall with its desired configurations.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.004', 'name': 'Disable or Modify System Firewall', 'reference': 'https://attack.mitre.org/techniques/T1562/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
316,2020/11/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a process termination event quickly followed by the deletion of its executable file. Malware tools and other
non-native files dropped or created on a system by an adversary may leave traces to indicate to what occurred. Removal
of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's
footprint.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Process Termination followed by Deletion,,47,09443c92-46b3-45a4-8f25-383b028b258d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by host.id with maxspan=5s
   [process where event.type == ""end"" and
    process.code_signature.trusted == false and
    not process.executable : (""C:\\Windows\\SoftwareDistribution\\*.exe"", ""C:\\Windows\\WinSxS\\*.exe"")
   ] by process.executable
   [file where event.type == ""deletion"" and file.extension : (""exe"", ""scr"", ""com"") and
    not process.executable :
             (""?:\\Program Files\\*.exe"",
              ""?:\\Program Files (x86)\\*.exe"",
              ""?:\\Windows\\System32\\svchost.exe"",
              ""?:\\Windows\\System32\\drvinst.exe"") and
    not file.path : (""?:\\Program Files\\*.exe"", ""?:\\Program Files (x86)\\*.exe"")
   ] by file.path
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.004', 'name': 'File Deletion', 'reference': 'https://attack.mitre.org/techniques/T1070/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
317,2022/05/31,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies potential abuse of the Microsoft Diagnostics Troubleshooting Wizard (MSDT) to proxy malicious command or binary
execution via malicious process arguments.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Microsoft Diagnostics Wizard Execution,"['https://twitter.com/nao_sec/status/1530196847679401984', 'https://lolbas-project.github.io/lolbas/Binaries/Msdt/']",73,2c3c29a4-f170-42f8-a3d8-2ceebc18eb6a,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
   (process.pe.original_file_name == ""msdt.exe"" or process.name : ""msdt.exe"") and
   (
    process.args : (""IT_RebrowseForFile=*"", ""ms-msdt:/id"", ""ms-msdt:-id"", ""*FromBase64*"") or

    (process.args : ""-af"" and process.args : ""/skip"" and
     process.parent.name : (""explorer.exe"", ""cmd.exe"", ""powershell.exe"", ""cscript.exe"", ""wscript.exe"", ""mshta.exe"", ""rundll32.exe"", ""regsvr32.exe"") and
     process.args : (""?:\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml"", ""PCWDiagnostic.xml"", ""?:\\Users\\Public\\*"", ""?:\\Windows\\Temp\\*"")) or

    (process.pe.original_file_name == ""msdt.exe"" and not process.name : ""msdt.exe"" and process.name != null) or

    (process.pe.original_file_name == ""msdt.exe"" and not process.executable : (""?:\\Windows\\system32\\msdt.exe"", ""?:\\Windows\\SysWOW64\\msdt.exe""))
    )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
318,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies child processes of unusual instances of RunDLL32 where the command line parameters were suspicious. Misuse of
RunDLL32 could indicate malicious activity.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Unusual Child Processes of RunDLL32,,73,f036953a-4615-4707-a1ca-dc53bf69dcd5,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence with maxspan=1h
  [process where event.type == ""start"" and
     (process.name : ""rundll32.exe"" or process.pe.original_file_name == ""RUNDLL32.EXE"") and
      process.args_count == 1
  ] by process.entity_id
  [process where event.type == ""start"" and process.parent.name : ""rundll32.exe""
  ] by process.parent.entity_id
",now-60m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.011', 'name': 'Rundll32', 'reference': 'https://attack.mitre.org/techniques/T1218/011/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,30m,,,,,,,,,,,,,,,
319,2020/11/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to enable the Windows scheduled tasks AT command via the registry. Attackers may use this method to
move laterally or persist locally. The AT command has been deprecated since Windows 8 and Windows Server 2012, but still
exists for backwards compatibility.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Scheduled Tasks AT Command Enabled,['https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-scheduledjob'],47,9aa0e1f6-52ce-42e1-abb3-09657cee2698,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"registry where
 registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\Configuration\\EnableAt"" and
 registry.data.strings : (""1"", ""0x00000001"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
320,2020/08/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects file name patterns generated by the use of Sysinternals SDelete utility to securely delete a file via multiple
file overwrite and rename operations.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Secure File Deletion via SDelete Utility,,21,5aee924b-6ceb-4633-980e-1bde8cdb40c5,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"file where event.type == ""change"" and file.name : ""*AAA.AAA""
",now-9m,,"## Triage and analysis

Verify process details such as command line and hash to confirm this activity legitimacy.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1070', 'name': 'Indicator Removal on Host', 'reference': 'https://attack.mitre.org/techniques/T1070/', 'subtechnique': [{'id': 'T1070.004', 'name': 'File Deletion', 'reference': 'https://attack.mitre.org/techniques/T1070/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
321,2021/01/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies modifications to the registered Subject Interface Package (SIP) providers. SIP providers are used by the
Windows cryptographic system to validate file signatures on the system. This may be an attempt to bypass signature
validation checks or inject code into critical processes.
",,['logs-endpoint.events.*'],eql,Elastic License v2,SIP Provider Modification,['https://github.com/mattifestation/PoCSubjectInterfacePackage'],47,f2c7b914-eda3-40c2-96ac-d23ef91776ca,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"registry where event.type:""change"" and
  registry.path: (
    ""HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllPutSignedDataMsg\\{*}\\Dll"",
    ""HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllPutSignedDataMsg\\{*}\\Dll"",
    ""HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{*}\\$Dll"",
    ""HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{*}\\$Dll""
    ) and
  registry.data.strings:""*.dll""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1553', 'name': 'Subvert Trust Controls', 'reference': 'https://attack.mitre.org/techniques/T1553/', 'subtechnique': [{'id': 'T1553.003', 'name': 'SIP and Trust Provider Hijacking', 'reference': 'https://attack.mitre.org/techniques/T1553/003/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
322,2020/12/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a SolarWinds binary modifying the start type of a service to be disabled. An adversary may abuse this
technique to manipulate relevant security services.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,SolarWinds Process Disabling Services via Registry,['https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'],47,b9960fef-82c6-4816-befa-44745030e917,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"registry where registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\Start"" and
  registry.data.strings : (""4"", ""0x00000004"") and
  process.name : (
      ""SolarWinds.BusinessLayerHost*.exe"",
      ""ConfigurationWizard*.exe"",
      ""NetflowDatabaseMaintenance*.exe"",
      ""NetFlowService*.exe"",
      ""SolarWinds.Administration*.exe"",
      ""SolarWinds.Collector.Service*.exe"" ,
      ""SolarwindsDiagnostics*.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1195', 'name': 'Supply Chain Compromise', 'reference': 'https://attack.mitre.org/techniques/T1195/', 'subtechnique': [{'id': 'T1195.002', 'name': 'Compromise Software Supply Chain', 'reference': 'https://attack.mitre.org/techniques/T1195/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
323,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,"['Elastic', 'Austin Songer']","Identifies suspicious commands being used with certutil.exe. CertUtil is a native Windows component which is part of
Certificate Services. CertUtil is often abused by attackers to live off the land for stealthier command and control or
data exfiltration.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious CertUtil Commands,"['https://twitter.com/Moriarty_Meng/status/984380793383370752', 'https://twitter.com/egre55/status/1087685529016193025', 'https://www.sysadmins.lv/blog-en/certutil-tips-and-tricks-working-with-x509-file-format.aspx', 'https://docs.microsoft.com/en-us/archive/blogs/pki/basic-crl-checking-with-certutil']",47,fd70c98a-c410-42dc-a2e3-761c71848acf,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""certutil.exe"" or process.pe.original_file_name == ""CertUtil.exe"") and
  process.args : (""?decode"", ""?encode"", ""?urlcache"", ""?verifyctl"", ""?encodehex"", ""?decodehex"", ""?exportPFX"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1140', 'name': 'Deobfuscate/Decode Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1140/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,e70679c2-6cde-4510-9764-4823df18f7db,Comprehensive Process Timeline,,,,,,,,,,,,,,,,
324,2021/05/28,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies when a script interpreter or signed binary is launched via a non-standard working directory. An attacker may
use this technique to evade defenses.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Execution from a Mounted Device,"['https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/', 'https://www.volexity.com/blog/2021/05/27/suspected-apt29-operation-launches-election-fraud-themed-phishing-campaigns/']",47,8a1d4831-3ce6-4859-9891-28931fa6101d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and process.executable : ""C:\\*"" and
  (process.working_directory : ""?:\\"" and not process.working_directory: ""C:\\"") and
  process.parent.name : ""explorer.exe"" and
  process.name : (""rundll32.exe"", ""mshta.exe"", ""powershell.exe"", ""pwsh.exe"", ""cmd.exe"", ""regsvr32.exe"",
                  ""cscript.exe"", ""wscript.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.005', 'name': 'Mshta', 'reference': 'https://attack.mitre.org/techniques/T1218/005/'}, {'id': 'T1218.010', 'name': 'Regsvr32', 'reference': 'https://attack.mitre.org/techniques/T1218/010/'}, {'id': 'T1218.011', 'name': 'Rundll32', 'reference': 'https://attack.mitre.org/techniques/T1218/011/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
325,2020/08/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a suspicious managed code hosting process which could indicate code injection or other form of suspicious
code execution.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Managed Code Hosting Process,['https://blog.menasec.net/2019/07/interesting-difr-traces-of-net-clr.html'],73,acf738b5-b5b2-4acc-bad9-1e18ee234f40,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id with maxspan=5m
 [process where event.type == ""start"" and
  process.name : (""wscript.exe"", ""cscript.exe"", ""mshta.exe"", ""wmic.exe"", ""regsvr32.exe"", ""svchost.exe"", ""dllhost.exe"", ""cmstp.exe"")]
 [file where event.type != ""deletion"" and
  file.name : (""wscript.exe.log"",
               ""cscript.exe"",
               ""mshta.exe.log"",
               ""wmic.exe.log"",
               ""svchost.exe.log"",
               ""dllhost.exe.log"",
               ""cmstp.exe.log"",
               ""regsvr32.exe.log"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'reference': 'https://attack.mitre.org/techniques/T1055/', 'name': 'Process Injection'}], 'tactic': {'id': 'TA0005', 'reference': 'https://attack.mitre.org/tactics/TA0005/', 'name': 'Defense Evasion'}}]",,,,,,,,,,,,,,,,,,,
326,2021/10/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious process access events from an unknown memory region. Endpoint security solutions usually hook
userland Windows APIs in order to decide if the code that is being executed is malicious or not. It's possible to bypass
hooked functions by writing malicious functions that call syscalls directly.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Process Access via Direct System Call,"['https://twitter.com/SBousseaden/status/1278013896440324096', 'https://www.ired.team/offensive-security/defense-evasion/using-syscalls-directly-from-visual-studio-to-bypass-avs-edrs']",73,2dd480be-1263-4d9c-8672-172928f6789a,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.code == ""10"" and
 length(winlog.event_data.CallTrace) > 0 and

 /* Sysmon CallTrace starting with unknown memory module instead of ntdll which host Windows NT Syscalls */
 not winlog.event_data.CallTrace :
            (""?:\\WINDOWS\\SYSTEM32\\ntdll.dll*"",
             ""?:\\WINDOWS\\SysWOW64\\ntdll.dll*"",
             ""?:\\Windows\\System32\\wow64cpu.dll*"",
             ""?:\\WINDOWS\\System32\\wow64win.dll*"",
             ""?:\\Windows\\System32\\win32u.dll*"") and

 not winlog.event_data.TargetImage :
            (""?:\\Program Files (x86)\\Malwarebytes Anti-Exploit\\mbae-svc.exe"",
             ""?:\\Program Files\\Cisco\\AMP\\*\\sfc.exe"",
             ""?:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\*\\msedgewebview2.exe"",
             ""?:\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\*\\AcroCEF.exe"") and

 not (process.executable : (""?:\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\Acrobat.exe"",
                            ""?:\\Program Files (x86)\\World of Warcraft\\_classic_\\WowClassic.exe"") and
      not winlog.event_data.TargetImage : ""?:\\WINDOWS\\system32\\lsass.exe"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious Process Access via Direct System Call

Endpoint security solutions usually hook userland Windows APIs in order to decide if the code that is being executed is
malicious or not. It's possible to bypass hooked functions by writing malicious functions that call syscalls directly.

More context and technical details can be found in this [research blog](https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/).

This rule identifies suspicious process access events from an unknown memory region. Attackers can use direct system
calls to bypass security solutions that rely on hooks.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This detection may be triggered by certain applications that install root certificates for the purpose of inspecting
SSL traffic. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove the malicious certificate from the root certificate store.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
327,2021/10/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies when a process is created and immediately accessed from an unknown memory code region and by the same parent
process. This may indicate a code injection attempt.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Process Creation CallTrace,,47,3ed032b2-45d8-4406-bc79-7ad1eabb2c72,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by host.id with maxspan=1m
  [process where event.code == ""1"" and
   /* sysmon process creation */
   process.parent.name : (""winword.exe"", ""excel.exe"", ""outlook.exe"", ""powerpnt.exe"", ""eqnedt32.exe"", ""fltldr.exe"",
                          ""mspub.exe"", ""msaccess.exe"",""cscript.exe"", ""wscript.exe"", ""rundll32.exe"", ""regsvr32.exe"",
                          ""mshta.exe"", ""wmic.exe"", ""cmstp.exe"", ""msxsl.exe"") and

   /* noisy FP patterns */
   not (process.parent.name : ""EXCEL.EXE"" and process.executable : ""?:\\Program Files\\Microsoft Office\\root\\Office*\\ADDINS\\*.exe"") and
   not (process.executable : ""?:\\Windows\\splwow64.exe"" and process.args in (""8192"", ""12288"") and process.parent.name : (""winword.exe"", ""excel.exe"", ""outlook.exe"", ""powerpnt.exe"")) and
   not (process.parent.name : ""rundll32.exe"" and process.parent.args : (""?:\\WINDOWS\\Installer\\MSI*.tmp,zzzzInvokeManagedCustomActionOutOfProc"", ""--no-sandbox"")) and
   not (process.executable :
            (""?:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\*\\msedgewebview2.exe"",
             ""?:\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\Acrobat.exe"",
             ""?:\\Windows\\SysWOW64\\DWWIN.EXE"") and
        process.parent.name : (""winword.exe"", ""excel.exe"", ""outlook.exe"", ""powerpnt.exe"")) and
   not (process.parent.name : ""regsvr32.exe"" and process.parent.args : (""?:\\Program Files\\*"", ""?:\\Program Files (x86)\\*""))
   ] by process.parent.entity_id, process.entity_id
  [process where event.code == ""10"" and
   /* Sysmon process access event from unknown module */
   winlog.event_data.CallTrace : ""*UNKNOWN*""] by process.entity_id, winlog.event_data.TargetProcessGUID
",now-9m,,"## Triage and analysis

### Investigating Suspicious Process Creation CallTrace

Attackers may inject code into child processes' memory to hide their actual activity, evade detection mechanisms, and
decrease discoverability during forensics. This rule looks for a spawned process by Microsoft Office, scripting, and
command line applications, followed by a process access event for an unknown memory region by the parent process, which
can indicate a code injection attempt.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behavior observed by the subject process such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Create a memory dump of the child process for analysis.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Process Injection', 'id': 'T1055', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'name': 'Defense Evasion', 'id': 'TA0005', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
328,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies scrobj.dll loaded into unusual Microsoft processes. This usually means a malicious scriptlet is being
executed in the target process.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious Script Object Execution,,47,4ed678a9-3a4f-41fb-9fea-f85a6e0a0dff,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id with maxspan=2m
  [process where event.type == ""start""
   and (process.code_signature.subject_name in (""Microsoft Corporation"", ""Microsoft Windows"") and
   process.code_signature.trusted == true) and
     not process.executable : (
       ""?:\\Windows\\System32\\cscript.exe"",
       ""?:\\Windows\\SysWOW64\\cscript.exe"",
       ""?:\\Program Files (x86)\\Internet Explorer\\iexplore.exe"",
       ""?:\\Program Files\\Internet Explorer\\iexplore.exe"",
       ""?:\\Windows\\SystemApps\\Microsoft.MicrosoftEdge_*\\MicrosoftEdge.exe"",
       ""?:\\Windows\\system32\\msiexec.exe"",
       ""?:\\Windows\\SysWOW64\\msiexec.exe"",
       ""?:\\Windows\\System32\\smartscreen.exe"",
       ""?:\\Windows\\system32\\taskhostw.exe"",
       ""?:\\windows\\system32\\inetsrv\\w3wp.exe"",
       ""?:\\windows\\SysWOW64\\inetsrv\\w3wp.exe"",
       ""?:\\Windows\\system32\\wscript.exe"",
       ""?:\\Windows\\SysWOW64\\wscript.exe"",
       ""?:\\Windows\\system32\\mobsync.exe"",
       ""?:\\Windows\\SysWOW64\\mobsync.exe"",
       ""?:\\Windows\\System32\\cmd.exe"",
       ""?:\\Windows\\SysWOW64\\cmd.exe"")]
  [library where event.type == ""start"" and dll.name : ""scrobj.dll""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
329,2020/11/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies process execution with a single character process name. This is often done by adversaries while staging or
executing temporary utilities.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Execution - Short Program Name,,47,17c7f6a5-5bc9-4e1f-92bf-13632d24384d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and length(process.name) > 0 and
 length(process.name) == 5 and host.os.name == ""Windows"" and length(process.pe.original_file_name) > 5
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.003', 'name': 'Rename System Utilities', 'reference': 'https://attack.mitre.org/techniques/T1036/003/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
330,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies WMIC allowlist bypass techniques by alerting on suspicious execution of scripts. When WMIC loads scripting
libraries it may be indicative of an allowlist bypass.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious WMIC XSL Script Execution,,47,7f370d54-c0eb-4270-ac5a-9a6020585dc6,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by process.entity_id with maxspan = 2m
[process where event.type == ""start"" and
   (process.name : ""WMIC.exe"" or process.pe.original_file_name : ""wmic.exe"") and
   process.args : (""format*:*"", ""/format*:*"", ""*-format*:*"") and
   not process.command_line : ""* /format:table *""]
[any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
 (dll.name : (""jscript.dll"", ""vbscript.dll"") or file.name : (""jscript.dll"", ""vbscript.dll""))]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1220', 'name': 'XSL Script Processing', 'reference': 'https://attack.mitre.org/techniques/T1220/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
331,2020/09/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"A suspicious Zoom child process was detected, which may indicate an attempt to run unnoticed. Verify process details
such as command line, network connections, file writes and associated file signature details as well.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Zoom Child Process,,47,97aba1ef-6034-4bd3-8c1a-1e0996b27afa,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name : ""Zoom.exe"" and process.name : (""cmd.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/'}, {'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
332,2020/08/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies an unexpected executable file being created or modified by a Windows system critical process, which may
indicate activity related to remote code execution or other forms of exploitation.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Executable File Creation by a System Critical Process,,73,e94262f2-c1e9-4d3f-a907-aeab16712e1a,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"file where event.type != ""deletion"" and
  file.extension : (""exe"", ""dll"") and
  process.name : (""smss.exe"",
                  ""autochk.exe"",
                  ""csrss.exe"",
                  ""wininit.exe"",
                  ""services.exe"",
                  ""lsass.exe"",
                  ""winlogon.exe"",
                  ""userinit.exe"",
                  ""LogonUI.exe"")
",now-9m,,"## Triage and analysis

### Investigating Unusual Executable File Creation by a System Critical Process

Windows internal/system processes have some characteristics that can be used to spot suspicious activities. One of these
characteristics is file operations.

This rule looks for the creation of executable files done by system-critical processes. This can indicate the exploitation
of a vulnerability or a malicious process masquerading as a system-critical process.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1211', 'name': 'Exploitation for Defense Evasion', 'reference': 'https://attack.mitre.org/techniques/T1211/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
333,2021/01/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious creation of Alternate Data Streams on highly targeted files. This is uncommon for legitimate files
and sometimes done by adversaries to hide malware.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual File Creation - Alternate Data Stream,,47,71bccb61-e19b-452f-b104-79a60e546a95,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"file where event.type == ""creation"" and

  file.path : ""C:\\*:*"" and
  not file.path : ""C:\\*:zone.identifier*"" and

  not process.executable :
          (""?:\\windows\\System32\\svchost.exe"",
           ""?:\\Windows\\System32\\inetsrv\\w3wp.exe"",
           ""?:\\Windows\\explorer.exe"",
           ""?:\\Windows\\System32\\sihost.exe"",
           ""?:\\Windows\\System32\\PickerHost.exe"",
           ""?:\\Windows\\System32\\SearchProtocolHost.exe"",
           ""?:\\Program Files (x86)\\Dropbox\\Client\\Dropbox.exe"",
           ""?:\\Program Files\\Rivet Networks\\SmartByte\\SmartByteNetworkService.exe"",
           ""?:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"",
           ""?:\\Program Files\\ExpressConnect\\ExpressConnectNetworkService.exe"",
           ""?:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",
           ""?:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"",
           ""?:\\Program Files\\Mozilla Firefox\\firefox.exe"") and

  file.extension :
    (
      ""pdf"",
      ""dll"",
      ""png"",
      ""exe"",
      ""dat"",
      ""com"",
      ""bat"",
      ""cmd"",
      ""sys"",
      ""vbs"",
      ""ps1"",
      ""hta"",
      ""txt"",
      ""vbe"",
      ""js"",
      ""wsh"",
      ""docx"",
      ""doc"",
      ""xlsx"",
      ""xls"",
      ""pptx"",
      ""ppt"",
      ""rtf"",
      ""gif"",
      ""jpg"",
      ""png"",
      ""bmp"",
      ""img"",
      ""iso""
    )
",now-9m,,"## Triage and analysis

### Investigating Unusual File Creation - Alternate Data Stream

Alternate Data Streams (ADS) are file attributes only found on the NTFS file system. In this file system, files are
built up from a couple of attributes; one of them is $Data, also known as the data attribute.

The regular data stream, also referred to as the unnamed data stream since the name string of this attribute is empty,
contains the data inside the file. So any data stream that has a name is considered an alternate data stream.

Attackers can abuse these alternate data streams to hide malicious files, string payloads, etc. This rule detects the
creation of alternate data streams on highly targeted file types.

#### Possible investigation steps

- Retrieve the contents of the alternate data stream, and analyze it for potential maliciousness. Analysts can use the
following PowerShell cmdlet to accomplish this:
  - `Get-Content -file C:\Path\To\file.exe -stream ADSname`
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- If this activity is expected and noisy in your environment, consider adding exceptions — preferably with a combination
of process executable and file conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.004', 'name': 'NTFS File Attributes', 'reference': 'https://attack.mitre.org/techniques/T1564/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
334,2020/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies processes running from an Alternate Data Stream. This is uncommon for legitimate processes and sometimes done
by adversaries to hide malware.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Unusual Process Execution Path - Alternate Data Stream,,47,4bd1c1af-79d4-4d37-9efa-6e0240640242,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.args : ""?:\\*:*"" and process.args_count == 1
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1564', 'name': 'Hide Artifacts', 'reference': 'https://attack.mitre.org/techniques/T1564/', 'subtechnique': [{'id': 'T1564.004', 'name': 'NTFS File Attributes', 'reference': 'https://attack.mitre.org/techniques/T1564/004/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
335,2021/05/28,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies unusual instances of dllhost.exe making outbound network connections. This may indicate adversarial Command
and Control activity.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Network Connection via DllHost,"['https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/', 'https://www.volexity.com/blog/2021/05/27/suspected-apt29-operation-launches-election-fraud-themed-phishing-campaigns/', 'https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml']",47,c7894234-7814-44c2-92a9-f7d851ea246a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"sequence by host.id, process.entity_id with maxspan=1m
  [process where event.type == ""start"" and process.name : ""dllhost.exe"" and process.args_count == 1]
  [network where process.name : ""dllhost.exe"" and
   not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
    ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"", ""192.0.2.0/24"",
    ""192.31.196.0/24"", ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"",
    ""192.175.48.0/24"", ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"", ""FE80::/10"",
    ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'id': 'T1218'}], 'tactic': {'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/', 'id': 'TA0005'}}]",,,,,,,,,,,,,,,,,,,
336,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies unusual instances of rundll32.exe making outbound network connections. This may indicate adversarial Command
and Control activity.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Network Connection via RunDLL32,"['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml', 'https://redcanary.com/threat-detection-report/techniques/rundll32/']",47,52aaab7b-b51c-441a-89ce-4387b3aea886,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",,eql,"sequence by host.id, process.entity_id with maxspan=1m
  [process where event.type == ""start"" and process.name : ""rundll32.exe"" and process.args_count == 1]
  [network where process.name : ""rundll32.exe"" and
   not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
       ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"",
       ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"",
       ""100.64.0.0/10"", ""192.175.48.0/24"",""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
       ""FE80::/10"", ""FF00::/8"")]
",now-9m,,"## Triage and analysis

### Investigating Unusual Network Connection via RunDLL32

RunDLL32 is a built-in Windows utility and also a vital component used by the operating system itself. The functionality
provided by RunDLL32 to execute Dynamic Link Libraries (DLLs) is widely abused by attackers, because it makes it hard to
differentiate malicious activity from normal operations.

This rule looks for external network connections established using RunDLL32 when the utility is being executed with no
arguments, which can potentially indicate command and control activity.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate the target host that RunDLL32 is communicating with.
  - Check if the domain is newly registered or unexpected.
  - Check the reputation of the domain or IP address.
- Identify the target computer and its role in the IT environment.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.011', 'name': 'Rundll32', 'reference': 'https://attack.mitre.org/techniques/T1218/011/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
337,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies network activity from unexpected system applications. This may indicate adversarial activity as these
applications are often leveraged by adversaries to execute code and evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Process Network Connection,,21,610949a1-312f-4e04-bb55-3a79b8c95267,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",,eql,"sequence by process.entity_id
  [process where (process.name : ""Microsoft.Workflow.Compiler.exe"" or
                  process.name : ""bginfo.exe"" or
                  process.name : ""cdb.exe"" or
                  process.name : ""cmstp.exe"" or
                  process.name : ""csi.exe"" or
                  process.name : ""dnx.exe"" or
                  process.name : ""fsi.exe"" or
                  process.name : ""ieexec.exe"" or
                  process.name : ""iexpress.exe"" or
                  process.name : ""odbcconf.exe"" or
                  process.name : ""rcsi.exe"" or
                  process.name : ""xwizard.exe"") and
     event.type == ""start""]
  [network where (process.name : ""Microsoft.Workflow.Compiler.exe"" or
                  process.name : ""bginfo.exe"" or
                  process.name : ""cdb.exe"" or
                  process.name : ""cmstp.exe"" or
                  process.name : ""csi.exe"" or
                  process.name : ""dnx.exe"" or
                  process.name : ""fsi.exe"" or
                  process.name : ""ieexec.exe"" or
                  process.name : ""iexpress.exe"" or
                  process.name : ""odbcconf.exe"" or
                  process.name : ""rcsi.exe"" or
                  process.name : ""xwizard.exe"")]
",now-9m,,"## Triage and analysis

### Investigating Unusual Process Network Connection

This rule identifies network activity from unexpected system utilities and applications. These applications are commonly
abused by attackers to execute code, evade detections, and bypass security protections.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate the target host that the process is communicating with.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
338,2020/08/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies a suspicious child process of the Windows virtual system process, which could indicate code injection.",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Child Process from a System Virtual Process,,73,de9bd7e0-49e9-4e92-a64d-53ade2e66af1,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.pid == 4 and
  not process.executable : (""Registry"", ""MemCompression"", ""?:\\Windows\\System32\\smss.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
339,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"The Filter Manager Control Program (fltMC.exe) binary may be abused by adversaries to unload a filter driver and evade
defenses.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Evasion via Filter Manager,,47,06dceabf-adca-48af-ac79-ffdf4c3b1e9a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
 process.name : ""fltMC.exe"" and process.args : ""unload""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
340,2022/03/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,"['Elastic', 'Austin Songer']","Identifies the use of Windows Work Folders to execute a potentially masqueraded control.exe file in the current working
directory. Misuse of Windows Work Folders could indicate malicious activity.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Signed Proxy Execution via MS Work Folders,"['https://docs.microsoft.com/en-us/windows-server/storage/work-folders/work-folders-overview', 'https://twitter.com/ElliotKillick/status/1449812843772227588', 'https://lolbas-project.github.io/lolbas/Binaries/WorkFolders/']",47,ad0d2742-9a49-11ec-8d6b-acde48001122,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" 
    and process.name : ""control.exe"" and process.parent.name : ""WorkFolders.exe""
    and not process.executable : (""?:\\Windows\\System32\\control.exe"", ""?:\\Windows\\SysWOW64\\control.exe"")
",now-9m,,"## Triage and analysis

### Investigating Signed Proxy Execution via MS Work Folders

Work Folders is a role service for file servers running Windows Server that provides a consistent way for users to access
their work files from their PCs and devices. This allows users to store work files and access them from anywhere. When
called, Work Folders will automatically execute any Portable Executable (PE) named control.exe as an argument before
accessing the synced share.

Using Work Folders to execute a masqueraded control.exe could allow an adversary to bypass application controls and
increase privileges.

#### Possible investigation steps

- Investigate the process tree starting with parent process WorkFolders.exe and child process control.exe to determine
if other child processes spawned during execution.
- Trace the activity related to the control.exe binary to identify any continuing intrusion activity on the host.
- Examine the location of the WorkFolders.exe binary to determine if it was copied to the location of the control.exe
binary. It resides in the System32 directory by default.
- Review the control.exe binary executed with Work Folders to determine maliciousness such as additional host activity
or network traffic.
- Determine if control.exe was synced to sync share, indicating potential lateral movement.
- Review how control.exe was originally delivered on the host, such as emailed, downloaded from the web, or written to
disk from a separate binary.

### False positive analysis

- Windows Work Folders are used legitimately by end users and administrators for file sharing and syncing but not in the
instance where a suspicious control.exe is passed as an argument.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Review the Work Folders synced share to determine if the control.exe was shared and if so remove it.
- If no lateral movement was identified during investigation, take the affected host offline if possible and remove the
control.exe binary as well as any additional artifacts identified during investigation.
- Review integrating Windows Information Protection (WIP) to enforce data protection by encrypting the data on PCs using
Work Folders.
- Confirm with the user whether this was expected or not, and reset their password.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
341,2020/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"This rule detects the Active Directory query tool, AdFind.exe. AdFind has legitimate purposes, but it is frequently
leveraged by threat actors to perform post-exploitation Active Directory reconnaissance. The AdFind tool has been
observed in Trickbot, Ryuk, Maze, and FIN6 campaigns. For Winlogbeat, this rule requires Sysmon.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,AdFind Command Activity,"['http://www.joeware.net/freetools/tools/adfind/', 'https://thedfirreport.com/2020/05/08/adfind-recon/', 'https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html', 'https://www.cybereason.com/blog/dropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware', 'https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html', 'https://usa.visa.com/dam/VCOM/global/support-legal/documents/fin6-cybercrime-group-expands-threat-To-ecommerce-merchants.pdf']",21,eda499b8-a073-4e35-9733-22ec71f57f3a,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""AdFind.exe"" or process.pe.original_file_name == ""AdFind.exe"") and
  process.args : (""objectcategory=computer"", ""(objectcategory=computer)"",
                  ""objectcategory=person"", ""(objectcategory=person)"",
                  ""objectcategory=subnet"", ""(objectcategory=subnet)"",
                  ""objectcategory=group"", ""(objectcategory=group)"",
                  ""objectcategory=organizationalunit"", ""(objectcategory=organizationalunit)"",
                  ""objectcategory=attributeschema"", ""(objectcategory=attributeschema)"",
                  ""domainlist"", ""dcmodes"", ""adinfo"", ""dclist"", ""computers_pwnotreqd"", ""trustdmp"")
",now-9m,,"## Triage and analysis

### Investigating AdFind Command Activity

[AdFind](http://www.joeware.net/freetools/tools/adfind/) is a freely available command-line tool used to retrieve information
from Active Directory (AD). Network discovery and enumeration tools like `AdFind` are useful to adversaries in the same
ways they are effective for network administrators. This tool provides quick ability to scope AD person/computer objects
and understand subnets and domain information. There are many [examples](https://thedfirreport.com/category/adfind/) of
this tool being adopted by ransomware and criminal groups and used in compromises.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Examine the command line to determine what information was retrieved by the tool.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- This rule has a high chance to produce false positives as it is a legitimate tool used by network administrators.
- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination
of user and command line conditions.
- Malicious behavior with `AdFind` should be investigated as part of a step within an attack chain. It doesn't happen in
isolation, so reviewing previous logs/activity from impacted machines can be very telling.

### Related rules

- Windows Network Enumeration - 7b8bfc26-81d2-435e-965c-d722ee397ef1
- Enumeration of Administrator Accounts - 871ea072-1b71-4def-b016-6278b505138d
- Enumeration Command Spawned via WMIPrvSE - 770e0c4d-b998-41e5-a62e-c7901fd7f470

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1018', 'name': 'Remote System Discovery', 'reference': 'https://attack.mitre.org/techniques/T1018/'}, {'id': 'T1069', 'name': 'Permission Groups Discovery', 'reference': 'https://attack.mitre.org/techniques/T1069/', 'subtechnique': [{'id': 'T1069.002', 'name': 'Domain Groups', 'reference': 'https://attack.mitre.org/techniques/T1069/002/'}]}, {'id': 'T1087', 'name': 'Account Discovery', 'reference': 'https://attack.mitre.org/techniques/T1087/', 'subtechnique': [{'id': 'T1087.002', 'name': 'Domain Account', 'reference': 'https://attack.mitre.org/techniques/T1087/002/'}]}, {'id': 'T1482', 'name': 'Domain Trust Discovery', 'reference': 'https://attack.mitre.org/techniques/T1482/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
342,2020/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies instances of lower privilege accounts enumerating Administrator accounts or groups using built-in Windows
tools.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Enumeration of Administrator Accounts,,21,871ea072-1b71-4def-b016-6278b505138d,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (((process.name : ""net.exe"" or process.pe.original_file_name == ""net.exe"") or
    ((process.name : ""net1.exe"" or process.pe.original_file_name == ""net1.exe"") and
        not process.parent.name : ""net.exe"")) and
   process.args : (""group"", ""user"", ""localgroup"") and
   process.args : (""admin"", ""Domain Admins"", ""Remote Desktop Users"", ""Enterprise Admins"", ""Organization Management"") and
   not process.args : ""/add"")

   or

  ((process.name : ""wmic.exe"" or process.pe.original_file_name == ""wmic.exe"") and
     process.args : (""group"", ""useraccount""))
",now-9m,,"## Triage and analysis

### Investigating Enumeration of Administrator Accounts

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `net` and `wmic` utilities to enumerate administrator-related users or groups
in the domain and local machine scope. Attackers can use this information to plan their next steps of the attack, such
as mapping targets for credential compromise and other post-exploitation activities.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Related rules

- AdFind Command Activity - eda499b8-a073-4e35-9733-22ec71f57f3a

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1069', 'name': 'Permission Groups Discovery', 'reference': 'https://attack.mitre.org/techniques/T1069/', 'subtechnique': [{'id': 'T1069.002', 'name': 'Domain Groups', 'reference': 'https://attack.mitre.org/techniques/T1069/002/'}]}, {'id': 'T1087', 'name': 'Account Discovery', 'reference': 'https://attack.mitre.org/techniques/T1087/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
343,2020/03/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies when the SYSTEM account uses an account discovery utility. This could be a sign of discovery activity after
an adversary has achieved privilege escalation.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Account Discovery Command via SYSTEM Account,,21,2856446a-34e6-435b-9fb5-f8f040bfa7ed,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (?process.Ext.token.integrity_level_name : ""System"" or
  ?winlog.event_data.IntegrityLevel : ""System"") and
  (process.name : ""whoami.exe"" or
  (process.name : ""net1.exe"" and not process.parent.name : ""net.exe""))
",now-9m,,"## Triage and analysis

### Investigating Account Discovery Command via SYSTEM Account

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of account discovery utilities using the SYSTEM account, which is commonly observed
after attackers successfully perform privilege escalation or exploit web applications.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
  - If the process tree includes a web-application server process such as w3wp, httpd.exe, nginx.exe and alike,
  investigate any suspicious file creation or modification in the last 48 hours to assess the presence of any potential
  webshell backdoor.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Determine how the SYSTEM account is being used. For example, users with administrator privileges can spawn a system
shell using Windows services, scheduled tasks or other third party utilities.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection via the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
- Use the data collected through the analysis to investigate other machines affected in the environment.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1033', 'name': 'System Owner/User Discovery', 'reference': 'https://attack.mitre.org/techniques/T1033/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
344,2022/05/31,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the use of nltest.exe for domain trust discovery purposes. Adversaries may use this command-line utility to
enumerate domain trusts and gain insight into trust relationships, as well as the state of Domain Controller (DC)
replication in a Microsoft Windows NT Domain.
","['    Domain administrators may use this command-line utility for legitimate information gathering purposes, but it is not\n    common for environments with Windows Server 2012 and newer.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Enumerating Domain Trusts via NLTEST.EXE,"['https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731935(v=ws.11)', 'https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/']",21,84da2554-e12a-11ec-b896-f661ea17fbcd,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery']",event.ingested,eql,"process where event.type == ""start"" and
    process.name : ""nltest.exe"" and process.args : (
        ""/DCLIST:*"", ""/DCNAME:*"", ""/DSGET*"",
        ""/LSAQUERYFTI:*"", ""/PARENTDOMAIN"",
        ""/DOMAIN_TRUSTS"", ""/BDC_QUERY:*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1482', 'name': 'Domain Trust Discovery', 'reference': 'https://attack.mitre.org/techniques/T1482/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
345,2020/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.,,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Windows Network Enumeration,,47,7b8bfc26-81d2-435e-965c-d722ee397ef1,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  ((process.name : ""net.exe"" or process.pe.original_file_name == ""net.exe"") or
   ((process.name : ""net1.exe"" or process.pe.original_file_name == ""net1.exe"") and
       not process.parent.name : ""net.exe"")) and
  (process.args : ""view"" or (process.args : ""time"" and process.args : ""\\\\*""))


  /* expand when ancestry is available
  and not descendant of [process where event.type == ""start"" and process.name : ""cmd.exe"" and
                           ((process.parent.name : ""userinit.exe"") or
                            (process.parent.name : ""gpscript.exe"") or
                            (process.parent.name : ""explorer.exe"" and
                               process.args : ""C:\\*\\Start Menu\\Programs\\Startup\\*.bat*""))]
  */
",now-9m,,"## Triage and analysis

### Investigating Windows Network Enumeration

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `net` utility to enumerate servers in the environment that hosts shared drives
or printers. This information is useful to attackers as they can identify targets for lateral movements and search for
valuable shared data.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1018', 'name': 'Remote System Discovery', 'reference': 'https://attack.mitre.org/techniques/T1018/'}, {'id': 'T1135', 'name': 'Network Share Discovery', 'reference': 'https://attack.mitre.org/techniques/T1135/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
346,2020/11/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies use of the Windows file system utility (fsutil.exe) to gather information about attached peripheral devices
and components connected to a computer system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Peripheral Device Discovery,,21,0c7ca5c2-728d-4ad9-b1c5-bbba83ecb1f4,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""fsutil.exe"" or process.pe.original_file_name == ""fsutil.exe"") and
  process.args : ""fsinfo"" and process.args : ""drives""
",now-9m,,"## Triage and analysis

### Investigating Peripheral Device Discovery

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `fsutil` utility with the `fsinfo` subcommand to enumerate drives attached to
the computer, which can be used to identify secondary drives used for backups, mapped network drives, and removable
media. These devices can contain valuable information for attackers.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Determine whether this activity was followed by suspicious file access/copy operations or uploads to file storage
services.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1120', 'name': 'Peripheral Device Discovery', 'reference': 'https://attack.mitre.org/techniques/T1120/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
347,2022/08/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Detects scripts that contain PowerShell functions, structures, or Windows API functions related to windows share
enumeration activities. Attackers, mainly ransomware groups, commonly identify and inspect network shares, looking for
critical information for encryption and/or exfiltration.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Share Enumeration Script,"['https://www.advintel.io/post/hunting-for-corporate-insurance-policies-indicators-of-ransom-exfiltrations', 'https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware/', 'https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md']",47,4c59cff1-b78a-41b8-a9f1-4231984d1fb6,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text:(
    ""Invoke-ShareFinder"" or
    ""Invoke-ShareFinderThreaded"" or
    (
      ""shi1_netname"" and
      ""shi1_remark""
    ) or
    (
      ""NetShareEnum"" and
      ""NetApiBufferFree""
    )
  )
",now-9m,,"## Triage and analysis

### Investigating PowerShell Share Enumeration Script

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can use PowerShell to enumerate shares to search for sensitive data like documents, scripts, and other kinds
of valuable data for encryption, exfiltration, and lateral movement.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Check for additional PowerShell and command line logs that indicate that imported functions were run.
  - Evaluate which information was potentially mapped and accessed by the attacker.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be configured (Enable).

Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1135', 'name': 'Network Share Discovery', 'reference': 'https://attack.mitre.org/techniques/T1135/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'id': 'T1059', 'subtechnique': [{'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/', 'id': 'T1059.001'}]}, {'name': 'Native API', 'reference': 'https://attack.mitre.org/techniques/T1106/', 'id': 'T1106'}], 'tactic': {'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'id': 'TA0002'}}]",,,,,,,,,,,,,,,,,,,
348,2021/10/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule detects the use of discovery-related Windows API functions in PowerShell Scripts. Attackers can use these
functions to perform various situational awareness related activities, like enumerating users, shares, sessions, domain
trusts, groups, etc.
",['Legitimate PowerShell scripts that make use of these functions.'],"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Suspicious Discovery Related Windows API Functions,"['https://github.com/BC-SECURITY/Empire/blob/9259e5106986847d2bb770c4289c0c0f1adf2344/data/module_source/situational_awareness/network/powerview.ps1#L21413', 'https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md']",47,61ac3638-40a3-44b2-855a-985636ca985e,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    NetShareEnum or
    NetWkstaUserEnum or
    NetSessionEnum or
    NetLocalGroupEnum or
    NetLocalGroupGetMembers or
    DsGetSiteName or
    DsEnumerateDomainTrusts or
    WTSEnumerateSessionsEx or
    WTSQuerySessionInformation or
    LsaGetLogonSessionData or
    QueryServiceObjectSecurity
  )
",now-9m,,"## Triage and analysis

### Investigating PowerShell Suspicious Discovery Related Windows API Functions

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can use PowerShell to interact with the Win32 API to bypass command line based detections, using libraries
like PSReflect or Get-ProcAddress Cmdlet.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine file or network events from the involved PowerShell process for suspicious behavior.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Check for additional PowerShell and command-line logs that indicate that imported functions were run.

### False positive analysis

- Discovery activities themselves are not inherently malicious if occurring in isolation, as long as the script does not
contain other capabilities, and there are no other alerts related to the user or host; such alerts can be dismissed.
However, analysts should keep in mind that this is not a common way of getting information, making it suspicious.

### Related rules

- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1135', 'name': 'Network Share Discovery', 'reference': 'https://attack.mitre.org/techniques/T1135/'}, {'id': 'T1069', 'name': 'Permission Groups Discovery', 'reference': 'https://attack.mitre.org/techniques/T1069/', 'subtechnique': [{'id': 'T1069.001', 'name': 'Local Groups', 'reference': 'https://attack.mitre.org/techniques/T1069/001/'}]}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}, {'id': 'T1106', 'name': 'Native API', 'reference': 'https://attack.mitre.org/techniques/T1106/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
349,2020/09/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies domains commonly used by adversaries for post-exploitation IP lookups. It is common for adversaries to
test for Internet access and acquire their external IP address after they have gained access to a system. Among others,
this has been observed in campaigns leveraging the information stealer, Trickbot.
","['    If the domains listed in this rule are used as part of an authorized workflow, this rule will be triggered by those\n    events. Validate that this is expected activity and tune the rule to fit your environment variables.\n    ']",['logs-endpoint.events.*'],eql,Elastic License v2,External IP Lookup from Non-Browser Process,"['https://community.jisc.ac.uk/blogs/csirt/article/trickbot-analysis-and-mitigation', 'https://www.cybereason.com/blog/dropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware']",21,1d72d014-e2ab-4707-b056-9b96abe7b511,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"network where network.protocol == ""dns"" and
    process.name != null and user.id not in (""S-1-5-19"", ""S-1-5-20"") and
    event.action == ""lookup_requested"" and
    /* Add new external IP lookup services here */
    dns.question.name :
    (
        ""*api.ipify.org"",
        ""*freegeoip.app"",
        ""*checkip.amazonaws.com"",
        ""*checkip.dyndns.org"",
        ""*freegeoip.app"",
        ""*icanhazip.com"",
        ""*ifconfig.*"",
        ""*ipecho.net"",
        ""*ipgeoapi.com"",
        ""*ipinfo.io"",
        ""*ip.anysrc.net"",
        ""*myexternalip.com"",
        ""*myipaddress.com"",
        ""*showipaddress.com"",
        ""*whatismyipaddress.com"",
        ""*wtfismyip.com"",
        ""*ipapi.co"",
        ""*ip-lookup.net"",
        ""*ipstack.com""
    ) and
    /* Insert noisy false positives here */
    not process.executable :
    (
      ""?:\\Program Files\\*.exe"",
      ""?:\\Program Files (x86)\\*.exe"",
      ""?:\\Windows\\System32\\WWAHost.exe"",
      ""?:\\Windows\\System32\\smartscreen.exe"",
      ""?:\\Windows\\System32\\MicrosoftEdgeCP.exe"",
      ""?:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*\\MsMpEng.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Programs\\Fiddler\\Fiddler.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"",
      ""?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe""
    )
",now-9m,,"## Triage and analysis

### Investigating External IP Lookup from Non-Browser Process

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for connections to known IP lookup services through non-browser processes or non-installed programs.
Using only the IP address of the compromised system, attackers can obtain valuable information such as the system's
geographic location, the company that owns the IP, whether the system is cloud-hosted, and more.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.
- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination
of user and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Use the data collected through the analysis to investigate other machines affected in the environment.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection via the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1614', 'name': 'System Location Discovery', 'reference': 'https://attack.mitre.org/techniques/T1614/'}, {'id': 'T1016', 'name': 'System Network Configuration Discovery', 'reference': 'https://attack.mitre.org/techniques/T1016/', 'subtechnique': [{'id': 'T1016.001', 'name': 'Internet Connection Discovery', 'reference': 'https://attack.mitre.org/techniques/T1016/001/'}]}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
350,2020/10/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies instances of an unusual process enumerating built-in Windows privileged local groups membership like
Administrators or Remote Desktop users.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Enumeration of Privileged Local Groups Membership,,47,291a0de9-937a-4189-94c0-3e847c8b13e4,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"iam where event.action == ""user-member-enumerated"" and

  /* excluding machine account */
  not winlog.event_data.SubjectUserName: (""*$"", ""LOCAL SERVICE"", ""NETWORK SERVICE"") and

  /* noisy and usual legit processes excluded */
  not winlog.event_data.CallerProcessName:
               (""-"",
                ""?:\\Windows\\System32\\VSSVC.exe"",
                ""?:\\Windows\\System32\\SearchIndexer.exe"",
                ""?:\\Windows\\System32\\CompatTelRunner.exe"",
                ""?:\\Windows\\System32\\oobe\\msoobe.exe"",
                ""?:\\Windows\\System32\\net1.exe"",
                ""?:\\Windows\\System32\\svchost.exe"",
                ""?:\\Windows\\System32\\Netplwiz.exe"",
                ""?:\\Windows\\System32\\msiexec.exe"",
                ""?:\\Windows\\SysWOW64\\msiexec.exe"",
                ""?:\\Windows\\System32\\CloudExperienceHostBroker.exe"",
                ""?:\\Windows\\System32\\wbem\\WmiPrvSE.exe"",
                ""?:\\Windows\\System32\\SrTasks.exe"",
                ""?:\\Windows\\System32\\lsass.exe"",
                ""?:\\Windows\\System32\\diskshadow.exe"",
                ""?:\\Windows\\System32\\dfsrs.exe"",
                ""?:\\Program Files\\*.exe"",
                ""?:\\Program Files (x86)\\*.exe"",
                ""?:\\WindowsAzure\\*\\WaAppAgent.exe"",
                ""?:\\Windows\\System32\\vssadmin.exe"",
                ""?:\\Windows\\VeeamVssSupport\\VeeamGuestHelper.exe"",
                ""?:\\Windows\\System32\\dllhost.exe"",
                ""?:\\Windows\\System32\\mmc.exe"",
                ""?:\\Windows\\System32\\SettingSyncHost.exe"",
                ""?:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe"",
                ""?:\\Windows\\System32\\SystemSettingsAdminFlows.exe"",
                ""?:\\Windows\\Temp\\rubrik_vmware???\\snaptool.exe"",
                ""?:\\Windows\\System32\\inetsrv\\w3wp.exe"",
                ""?:\\$WINDOWS.~BT\\Sources\\*.exe"",
                ""?:\\Windows\\System32\\wsmprovhost.exe"",
                ""?:\\Windows\\System32\\spool\\drivers\\x64\\3\\x3jobt3?.exe"",
                ""?:\\Windows\\System32\\mstsc.exe"",
                ""?:\\Windows\\System32\\esentutl.exe"",
                ""?:\\Windows\\System32\\RecoveryDrive.exe"",
                ""?:\\Windows\\System32\\SystemPropertiesComputerName.exe"") and

  /* privileged local groups */
  (group.name:(""admin*"",""RemoteDesktopUsers"") or
   winlog.event_data.TargetSid:(""S-1-5-32-544"",""S-1-5-32-555""))
",now-9m,,"## Triage and analysis

### Investigating Enumeration of Privileged Local Groups Membership

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the enumeration of privileged local groups' membership by suspicious processes, and excludes known
legitimate utilities and programs installed. Attackers can use this information to decide the next steps of the attack,
such as mapping targets for credential compromise and other post-exploitation activities.

#### Possible investigation steps

- Identify the process, host and user involved on the event.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Retrieve the process executable and determine if it is malicious:
  - Check if the file belongs to the operating system or has a valid digital signature.
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.
- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination
of user and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Security Group Management' audit policy must be configured (Success).
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Account Management >
Audit Security Group Management (Success)
```

Microsoft introduced the [event used](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4799) in this detection rule on Windows 10 and Windows Server 2016 or later operating systems.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1069/', 'id': 'T1069', 'name': 'Permission Groups Discovery', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1069/001/', 'id': 'T1069.001', 'name': 'Local Groups'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0007/', 'id': 'TA0007', 'name': 'Discovery'}}]",,,,,,,,,,,,,,,,,,,
351,2020/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Discovery of remote system information using built-in commands, which may be used to move laterally.",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Remote System Discovery Commands,,21,0635c542-1b96-4335-9b47-126582d2c19a,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  ((process.name : ""nbtstat.exe"" and process.args : (""-n"", ""-s"")) or
  (process.name : ""arp.exe"" and process.args : ""-a""))
",now-9m,,"## Triage and analysis

### Investigating Remote System Discovery Commands

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `arp` or `nbstat` utilities to enumerate remote systems in the environment,
which is useful for attackers to identify lateral movement targets.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1016', 'name': 'System Network Configuration Discovery', 'reference': 'https://attack.mitre.org/techniques/T1016/'}, {'id': 'T1018', 'name': 'Remote System Discovery', 'reference': 'https://attack.mitre.org/techniques/T1018/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
352,2020/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the use of Windows Management Instrumentation Command (WMIC) to discover certain System Security Settings
such as AntiVirus or Host Firewall details.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Security Software Discovery using WMIC,,47,6ea55c81-e2ba-42f2-a134-bccf857ba922,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
   (process.name:""wmic.exe"" or process.pe.original_file_name:""wmic.exe"") and
    process.args:""/namespace:\\\\root\\SecurityCenter2"" and process.args:""Get""
",now-9m,,"## Triage and analysis

### Investigating Security Software Discovery using WMIC

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `wmic` utility with arguments compatible to the enumeration of the security
software installed on the host. Attackers can use this information to decide whether or not to infect a system, disable
protections, use bypasses, etc.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1518', 'name': 'Software Discovery', 'reference': 'https://attack.mitre.org/techniques/T1518/', 'subtechnique': [{'id': 'T1518.001', 'name': 'Security Software Discovery', 'reference': 'https://attack.mitre.org/techniques/T1518/001/'}]}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
353,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious use of whoami.exe which displays user, group, and privileges information for the user who is currently logged
on to the local system.
","['    Some normal use of this program, at varying levels of frequency, may originate from scripts, automation tools and\n    frameworks. Usage by non-engineers and ordinary users is unusual.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*', 'logs-system.*']",eql,Elastic License v2,Whoami Process Activity,,21,ef862985-3f13-4262-a686-5f357bbb9bc2,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and process.name : ""whoami.exe"" and
(

 (/* scoped for whoami execution under system privileges */
  (user.domain : (""NT AUTHORITY"", ""NT-AUTORITÄT"", ""AUTORITE NT"", ""IIS APPPOOL"") or user.id : (""S-1-5-18"", ""S-1-5-19"", ""S-1-5-20"")) and

   not (process.parent.name : ""cmd.exe"" and
        process.parent.args : (""chcp 437>nul 2>&1 & C:\\WINDOWS\\System32\\whoami.exe  /groups"",
                               ""chcp 437>nul 2>&1 & %systemroot%\\system32\\whoami /user"",
                               ""C:\\WINDOWS\\System32\\whoami.exe /groups"",
                               ""*WINDOWS\\system32\\config\\systemprofile*"")) and
   not (process.parent.executable : ""C:\\Windows\\system32\\inetsrv\\appcmd.exe"" and process.parent.args : ""LIST"") and
   not process.parent.executable : (""C:\\Program Files\\Microsoft Monitoring Agent\\Agent\\MonitoringHost.exe"",
                                    ""C:\\Program Files\\Cohesity\\cohesity_windows_agent_service.exe"")) or

  process.parent.name : (""wsmprovhost.exe"", ""w3wp.exe"", ""wmiprvse.exe"", ""rundll32.exe"", ""regsvr32.exe"")

)
",now-9m,,"## Triage and analysis

### Investigating Whoami Process Activity

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of the `whoami` utility. Attackers commonly use this utility to measure their current
privileges, discover the current user, determine if a privilege escalation was successful, etc.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Related rules

- Account Discovery Command via SYSTEM Account - 2856446a-34e6-435b-9fb5-f8f040bfa7ed

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1033', 'name': 'System Owner/User Discovery', 'reference': 'https://attack.mitre.org/techniques/T1033/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
354,2020/12/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],A suspicious SolarWinds child process (Cmd.exe or Powershell.exe) was detected.,['Trusted SolarWinds child processes. Verify process details such as network connections and file writes.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Command Execution via SolarWinds Process,"['https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html', 'https://github.com/mandiant/sunburst_countermeasures/blob/main/rules/SUNBURST/hxioc/SUNBURST%20SUSPICIOUS%20FILEWRITES%20(METHODOLOGY).ioc']",47,d72e33fc-6e91-42ff-ac8b-e573268c5a87,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and process.name: (""cmd.exe"", ""powershell.exe"") and
process.parent.name: (
     ""ConfigurationWizard*.exe"",
     ""NetflowDatabaseMaintenance*.exe"",
     ""NetFlowService*.exe"",
     ""SolarWinds.Administration*.exe"",
     ""SolarWinds.Collector.Service*.exe"",
     ""SolarwindsDiagnostics*.exe""
     )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1195', 'name': 'Supply Chain Compromise', 'reference': 'https://attack.mitre.org/techniques/T1195/', 'subtechnique': [{'id': 'T1195.002', 'name': 'Compromise Software Supply Chain', 'reference': 'https://attack.mitre.org/techniques/T1195/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
355,2020/12/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"A suspicious SolarWinds child process was detected, which may indicate an attempt to execute malicious programs.","['Trusted SolarWinds child processes, verify process details such as network connections and file writes.']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious SolarWinds Child Process,"['https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html', 'https://github.com/mandiant/sunburst_countermeasures/blob/main/rules/SUNBURST/hxioc/SUNBURST%20SUSPICIOUS%20CHILD%20PROCESSES%20(METHODOLOGY).ioc']",47,93b22c0a-06a0-4131-b830-b10d5e166ff4,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name: (""SolarWinds.BusinessLayerHost.exe"", ""SolarWinds.BusinessLayerHostx64.exe"") and
 not process.name : (
        ""APMServiceControl*.exe"",
        ""ExportToPDFCmd*.Exe"",
        ""SolarWinds.Credentials.Orion.WebApi*.exe"",
        ""SolarWinds.Orion.Topology.Calculator*.exe"",
        ""Database-Maint.exe"",
        ""SolarWinds.Orion.ApiPoller.Service.exe"",
        ""WerFault.exe"",
        ""WerMgr.exe"",
        ""SolarWinds.BusinessLayerHost.exe"",
        ""SolarWinds.BusinessLayerHostx64.exe"") and
 not process.executable : (""?:\\Windows\\SysWOW64\\ARP.EXE"", ""?:\\Windows\\SysWOW64\\lodctr.exe"", ""?:\\Windows\\SysWOW64\\unlodctr.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1106', 'name': 'Native API', 'reference': 'https://attack.mitre.org/techniques/T1106/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1195', 'name': 'Supply Chain Compromise', 'reference': 'https://attack.mitre.org/techniques/T1195/', 'subtechnique': [{'id': 'T1195.002', 'name': 'Compromise Software Supply Chain', 'reference': 'https://attack.mitre.org/techniques/T1195/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
356,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies cmd.exe making a network connection. Adversaries could abuse cmd.exe to download or execute malware from a
remote URL.
","[""    Administrators may use the command prompt for regular administrative tasks. It's important to baseline your\n    environment for network connections being made from the command prompt to determine any abnormal use of this tool.\n    ""]","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Command Prompt Network Connection,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],21,89f9a4b0-9f8f-4ee0-8823-c4751a6d6696,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",,eql,"sequence by process.entity_id
  [process where process.name : ""cmd.exe"" and event.type == ""start""]
  [network where process.name : ""cmd.exe"" and
     not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
                                  ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"",
                                  ""192.0.0.171/32"", ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"",
                                  ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"", ""100.64.0.0/10"", ""192.175.48.0/24"",
                                  ""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
                                  ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1105', 'name': 'Ingress Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1105/'}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,,,
357,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Identifies a suspicious parent child process relationship with cmd.exe descending from svchost.exe,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Svchost spawning Cmd,['https://nasbench.medium.com/demystifying-the-svchost-exe-process-and-its-command-line-options-508e9114e747'],21,fd7a6052-58fa-4397-93c3-4795249ccfa2,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and

  process.parent.name : ""svchost.exe"" and process.name : ""cmd.exe"" and

  not process.args :
         (""??:\\Program Files\\Npcap\\CheckStatus.bat?"",
          ""?:\\Program Files\\Npcap\\CheckStatus.bat"",
          ""\\system32\\cleanmgr.exe"",
          ""?:\\Windows\\system32\\silcollector.cmd"",
          ""\\system32\\AppHostRegistrationVerifier.exe"",
          ""\\system32\\ServerManagerLauncher.exe"",
          ""dir"",
          ""?:\\Program Files\\*"",
          ""?:\\Program Files (x86)\\*"",
          ""?:\\Windows\\LSDeployment\\Lspush.exe"",
          ""(x86)\\FMAuditOnsite\\watchdog.bat"",
          ""?:\\ProgramData\\chocolatey\\bin\\choco-upgrade-all.bat"",
          ""Files\\Npcap\\CheckStatus.bat"") and

   /* very noisy pattern - bat or cmd script executed via scheduled tasks */
  not (process.parent.args : ""netsvcs"" and process.args : (""?:\\*.bat"", ""?:\\*.cmd""))
",now-9m,,"## Triage and analysis

### Investigating Svchost spawning Cmd

The Service Host process (SvcHost) is a system process that can host one, or multiple, Windows services in the Windows
NT family of operating systems. Note that `Svchost.exe` is reserved for use by the operating system and should not be
used by non-Windows services.

This rule looks for the creation of the `cmd.exe` process with `svchost.exe` as its parent process. This is an unusual
behavior that can indicate the masquerading of a malicious process as `svchost.exe` or exploitation for privilege
escalation.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,e70679c2-6cde-4510-9764-4823df18f7db,Comprehensive Process Timeline,,,,,,,,,,,,,,,,
358,2020/08/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],Identifies a suspicious parent child process relationship with cmd.exe descending from an unusual process.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Parent Process for cmd.exe,,47,3b47900d-e793-49e8-968f-c90dc3526aa1,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""cmd.exe"" and
  process.parent.name : (""lsass.exe"",
                         ""csrss.exe"",
                         ""epad.exe"",
                         ""regsvr32.exe"",
                         ""dllhost.exe"",
                         ""LogonUI.exe"",
                         ""wermgr.exe"",
                         ""spoolsv.exe"",
                         ""jucheck.exe"",
                         ""jusched.exe"",
                         ""ctfmon.exe"",
                         ""taskhostw.exe"",
                         ""GoogleUpdate.exe"",
                         ""sppsvc.exe"",
                         ""sihost.exe"",
                         ""slui.exe"",
                         ""SIHClient.exe"",
                         ""SearchIndexer.exe"",
                         ""SearchProtocolHost.exe"",
                         ""FlashPlayerUpdateService.exe"",
                         ""WerFault.exe"",
                         ""WUDFHost.exe"",
                         ""unsecapp.exe"",
                         ""wlanext.exe"" )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
359,2020/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies command shell activity started via RunDLL32, which is commonly abused by attackers to host malicious code.",['Microsoft Windows installers leveraging RunDLL32 for installation.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Command Shell Activity Started via RunDLL32,,21,9ccf3ce0-0057-440a-91f5-870c6ad39093,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
 process.name : (""cmd.exe"", ""powershell.exe"") and
  process.parent.name : ""rundll32.exe"" and process.parent.command_line != null and
  /* common FPs can be added here */
  not process.parent.args : (""C:\\Windows\\System32\\SHELL32.dll,RunAsNewUser_RunDLL"",
                             ""C:\\WINDOWS\\*.tmp,zzzzInvokeManagedCustomActionOutOfProc"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
360,2021/01/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Windows Component Object Model (COM) is an inter-process communication (IPC) component of the native Windows application
programming interface (API) that enables interaction between software objects or executable code. Xwizard can be used to
run a COM object created in registry to evade defensive counter measures.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Execution of COM object via Xwizard,"['https://lolbas-project.github.io/lolbas/Binaries/Xwizard/', 'http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/']",47,1a6075b0-7479-450e-8fe7-b8b8438ac570,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
 process.pe.original_file_name : ""xwizard.exe"" and
 (
   (process.args : ""RunWizard"" and process.args : ""{*}"") or
   (process.executable != null and
     not process.executable : (""C:\\Windows\\SysWOW64\\xwizard.exe"", ""C:\\Windows\\System32\\xwizard.exe"")
   )
 )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1559', 'name': 'Inter-Process Communication', 'reference': 'https://attack.mitre.org/techniques/T1559/', 'subtechnique': [{'id': 'T1559.001', 'name': 'Component Object Model', 'reference': 'https://attack.mitre.org/techniques/T1559/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
361,2020/09/02,development,,,2022/08/24,['Elastic'],"Identifies .lnk shortcut file downloaded from outside the local network. These shortcut files are commonly used in
phishing campaigns.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Downloaded Shortcut Files,,21,6b1fd8e8-cefe-444c-bc4d-feaa2c497347,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",,eql,"/* leaving in development pending `file.Ext.windows.zone_identifier` landing in ECS then endpoint */

sequence by process.entity_id with maxspan=2s
                                           /* file.extension added to endpoint fields for 7.10 */
  [file where event.type == ""creation"" and file.extension == ""lnk""]
                                           /* not sure yet how the update will capture ADS */
  [file where event.type == ""creation"" and file.extension == ""lnk:Zone.Identifier"" and
     /* non-ECS field - may disqualify conversion */
     file.Ext.windows.zone_identifier > 1]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/', 'subtechnique': [{'id': 'T1204.002', 'name': 'Malicious File', 'reference': 'https://attack.mitre.org/techniques/T1204/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}, {'id': 'T1566.002', 'name': 'Spearphishing Link', 'reference': 'https://attack.mitre.org/techniques/T1566/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,False,,,
362,2020/09/02,development,,,2022/08/24,['Elastic'],"Identifies .url shortcut files downloaded from outside the local network. These shortcut files are commonly used in
phishing campaigns.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Downloaded URL Files,,47,cd82e3d6-1346-4afd-8f22-38388bbf34cb,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",,eql,"/* leaving in development pending `file.Ext.windows.zone_identifier` landing in ECS then endpoint */

sequence by process.entity_id with maxspan=2s
  [file where event.type == ""creation"" and file.extension == ""url"" and
     not process.name == ""explorer.exe""]
  [file where event.type == ""creation"" and file.extension == ""url:Zone.Identifier"" and
      /* non-ECS field - may disqualify conversion */
     file.Ext.windows.zone_identifier > 1 and not process.name == ""explorer.exe""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}, {'id': 'T1566.002', 'name': 'Spearphishing Link', 'reference': 'https://attack.mitre.org/techniques/T1566/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,False,,,
363,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies native Windows host and network enumeration commands spawned by the Windows Management Instrumentation
Provider Service (WMIPrvSE).
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Enumeration Command Spawned via WMIPrvSE,,21,770e0c4d-b998-41e5-a62e-c7901fd7f470,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
  process.name:
  (
    ""arp.exe"",
    ""dsquery.exe"",
    ""dsget.exe"",
    ""gpresult.exe"",
    ""hostname.exe"",
    ""ipconfig.exe"",
    ""nbtstat.exe"",
    ""net.exe"",
    ""net1.exe"",
    ""netsh.exe"",
    ""netstat.exe"",
    ""nltest.exe"",
    ""ping.exe"",
    ""qprocess.exe"",
    ""quser.exe"",
    ""qwinsta.exe"",
    ""reg.exe"",
    ""sc.exe"",
    ""systeminfo.exe"",
    ""tasklist.exe"",
    ""tracert.exe"",
    ""whoami.exe""
  ) and
  process.parent.name:""wmiprvse.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1047', 'name': 'Windows Management Instrumentation', 'reference': 'https://attack.mitre.org/techniques/T1047/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1018', 'name': 'Remote System Discovery', 'reference': 'https://attack.mitre.org/techniques/T1018/'}, {'id': 'T1087', 'name': 'Account Discovery', 'reference': 'https://attack.mitre.org/techniques/T1087/'}, {'id': 'T1518', 'name': 'Software Discovery', 'reference': 'https://attack.mitre.org/techniques/T1518/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,,,
364,2020/10/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies process execution from suspicious default Windows directories. This may be abused by adversaries to hide
malware in trusted paths.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Execution from Unusual Directory - Command Line,,47,cff92c41-2225-4763-b4ce-6f71e5bda5e6,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'Defense Evasion']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : (""wscript.exe"",
                  ""cscript.exe"",
                  ""rundll32.exe"",
                  ""regsvr32.exe"",
                  ""cmstp.exe"",
                  ""RegAsm.exe"",
                  ""installutil.exe"",
                  ""mshta.exe"",
                  ""RegSvcs.exe"",
                  ""powershell.exe"",
                  ""pwsh.exe"",
                  ""cmd.exe"") and

  /* add suspicious execution paths here */
  process.args : (""C:\\PerfLogs\\*"",
                  ""C:\\Users\\Public\\*"",
                  ""C:\\Windows\\Tasks\\*"",
                  ""C:\\Intel\\*"",
                  ""C:\\AMD\\Temp\\*"",
                  ""C:\\Windows\\AppReadiness\\*"",
                  ""C:\\Windows\\ServiceState\\*"",
                  ""C:\\Windows\\security\\*"",
                  ""C:\\Windows\\IdentityCRL\\*"",
                  ""C:\\Windows\\Branding\\*"",
                  ""C:\\Windows\\csc\\*"",
                  ""C:\\Windows\\DigitalLocker\\*"",
                  ""C:\\Windows\\en-US\\*"",
                  ""C:\\Windows\\wlansvc\\*"",
                  ""C:\\Windows\\Prefetch\\*"",
                  ""C:\\Windows\\Fonts\\*"",
                  ""C:\\Windows\\diagnostics\\*"",
                  ""C:\\Windows\\TAPI\\*"",
                  ""C:\\Windows\\INF\\*"",
                  ""C:\\Windows\\System32\\Speech\\*"",
                  ""C:\\windows\\tracing\\*"",
                  ""c:\\windows\\IME\\*"",
                  ""c:\\Windows\\Performance\\*"",
                  ""c:\\windows\\intel\\*"",
                  ""c:\\windows\\ms\\*"",
                  ""C:\\Windows\\dot3svc\\*"",
                  ""C:\\Windows\\panther\\*"",
                  ""C:\\Windows\\RemotePackages\\*"",
                  ""C:\\Windows\\OCR\\*"",
                  ""C:\\Windows\\appcompat\\*"",
                  ""C:\\Windows\\apppatch\\*"",
                  ""C:\\Windows\\addins\\*"",
                  ""C:\\Windows\\Setup\\*"",
                  ""C:\\Windows\\Help\\*"",
                  ""C:\\Windows\\SKB\\*"",
                  ""C:\\Windows\\Vss\\*"",
                  ""C:\\Windows\\servicing\\*"",
                  ""C:\\Windows\\CbsTemp\\*"",
                  ""C:\\Windows\\Logs\\*"",
                  ""C:\\Windows\\WaaS\\*"",
                  ""C:\\Windows\\twain_32\\*"",
                  ""C:\\Windows\\ShellExperiences\\*"",
                  ""C:\\Windows\\ShellComponents\\*"",
                  ""C:\\Windows\\PLA\\*"",
                  ""C:\\Windows\\Migration\\*"",
                  ""C:\\Windows\\debug\\*"",
                  ""C:\\Windows\\Cursors\\*"",
                  ""C:\\Windows\\Containers\\*"",
                  ""C:\\Windows\\Boot\\*"",
                  ""C:\\Windows\\bcastdvr\\*"",
                  ""C:\\Windows\\TextInput\\*"",
                  ""C:\\Windows\\security\\*"",
                  ""C:\\Windows\\schemas\\*"",
                  ""C:\\Windows\\SchCache\\*"",
                  ""C:\\Windows\\Resources\\*"",
                  ""C:\\Windows\\rescache\\*"",
                  ""C:\\Windows\\Provisioning\\*"",
                  ""C:\\Windows\\PrintDialog\\*"",
                  ""C:\\Windows\\PolicyDefinitions\\*"",
                  ""C:\\Windows\\media\\*"",
                  ""C:\\Windows\\Globalization\\*"",
                  ""C:\\Windows\\L2Schemas\\*"",
                  ""C:\\Windows\\LiveKernelReports\\*"",
                  ""C:\\Windows\\ModemLogs\\*"",
                  ""C:\\Windows\\ImmersiveControlPanel\\*"",
                  ""C:\\$Recycle.Bin\\*"") and

  /* noisy FP patterns */

  not process.parent.executable : (""C:\\WINDOWS\\System32\\DriverStore\\FileRepository\\*\\igfxCUIService*.exe"",
                                   ""C:\\Windows\\System32\\spacedeskService.exe"",
                                   ""C:\\Program Files\\Dell\\SupportAssistAgent\\SRE\\SRE.exe"") and
  not (process.name : ""rundll32.exe"" and
       process.args : (""uxtheme.dll,#64"",
                       ""PRINTUI.DLL,PrintUIEntry"",
                       ""?:\\Windows\\System32\\FirewallControlPanel.dll,ShowNotificationDialog"",
                       ""?:\\WINDOWS\\system32\\Speech\\SpeechUX\\sapi.cpl"",
                       ""?:\\Windows\\system32\\shell32.dll,OpenAs_RunDLL"")) and

  not (process.name : ""cscript.exe"" and process.args : ""?:\\WINDOWS\\system32\\calluxxprovider.vbs"") and

  not (process.name : ""cmd.exe"" and process.args : ""?:\\WINDOWS\\system32\\powercfg.exe"" and process.args : ""?:\\WINDOWS\\inf\\PowerPlan.log"") and

  not (process.name : ""regsvr32.exe"" and process.args : ""?:\\Windows\\Help\\OEM\\scripts\\checkmui.dll"") and

  not (process.name : ""cmd.exe"" and
       process.parent.executable : (""?:\\Windows\\System32\\oobe\\windeploy.exe"",
                                    ""?:\\Program Files (x86)\\ossec-agent\\wazuh-agent.exe"",
                                    ""?:\\Windows\\System32\\igfxCUIService.exe"",
                                    ""?:\\Windows\\Temp\\IE*.tmp\\IE*-support\\ienrcore.exe""))
",now-9m,,"## Triage and analysis

### Investigating Execution from Unusual Directory - Command Line

This rule looks for the execution of scripts from unusual directories. Attackers can use system or application paths to
hide malware and make the execution less suspicious.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Examine the command line to determine which commands or scripts were executed.
- Retrieve the script and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- If this activity is expected and noisy in your environment, consider adding exceptions — preferably with a combination
of parent process executable and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


This is related to the `Process Execution from an Unusual Directory rule`.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1036', 'name': 'Masquerading', 'reference': 'https://attack.mitre.org/techniques/T1036/', 'subtechnique': [{'id': 'T1036.005', 'name': 'Match Legitimate Name or Location', 'reference': 'https://attack.mitre.org/techniques/T1036/005/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
365,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal
malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable
program (hh.exe).
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Network Connection via Compiled HTML File,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],21,b29ee2be-bf99-446c-ab1a-2dc0183394b8,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",,eql,"sequence by process.entity_id
  [process where process.name : ""hh.exe"" and event.type == ""start""]
  [network where process.name : ""hh.exe"" and
     not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
       ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"",
       ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"",
       ""100.64.0.0/10"", ""192.175.48.0/24"",""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
       ""FE80::/10"", ""FF00::/8"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/', 'subtechnique': [{'id': 'T1204.002', 'name': 'Malicious File', 'reference': 'https://attack.mitre.org/techniques/T1204/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.001', 'name': 'Compiled HTML File', 'reference': 'https://attack.mitre.org/techniques/T1218/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
366,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies an executable created by a Microsoft Office application and subsequently executed. These processes are often
launched via scripts inside documents or during exploitation of Microsoft Office applications.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Execution of File Written or Modified by Microsoft Office,,73,0d8ad79f-9025-45d8-80c1-4f0cd3c5e8e5,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",,eql,"sequence with maxspan=2h
  [file where event.type != ""deletion"" and file.extension : ""exe"" and
     (process.name : ""WINWORD.EXE"" or
      process.name : ""EXCEL.EXE"" or
      process.name : ""OUTLOOK.EXE"" or
      process.name : ""POWERPNT.EXE"" or
      process.name : ""eqnedt32.exe"" or
      process.name : ""fltldr.exe"" or
      process.name : ""MSPUB.EXE"" or
      process.name : ""MSACCESS.EXE"")
  ] by host.id, file.path
  [process where event.type == ""start""] by host.id, process.executable
",now-120m,,"## Triage and analysis

### Investigating Execution of File Written or Modified by Microsoft Office

Microsoft Office is a suite of applications designed to help with productivity and completing common tasks on a computer.
You can create and edit documents containing text and images, work with data in spreadsheets and databases, and create
presentations and posters. As it is some of the most-used software across companies, MS Office is frequently
targeted for initial access. It also has a wide variety of capabilities that attackers can take advantage of.

This rule searches for executable files written by MS Office applications executed in sequence. This is most likely the result
of the execution of malicious documents or exploitation for initial access or privilege escalation. This rule can also detect
suspicious processes masquerading as the MS Office applications.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve MS Office documents received and opened by the user that could cause this behavior. Common locations include,
but are not limited to, the Downloads and Document folders and the folder configured at the email client.
- Determine if the collected files are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
  - If the malicious file was delivered via phishing:
    - Block the email sender from sending future emails.
    - Block the malicious web pages.
    - Remove emails from the sender from mailboxes.
    - Consider improvements to the security awareness program.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}, {'id': 'T1566.002', 'name': 'Spearphishing Link', 'reference': 'https://attack.mitre.org/techniques/T1566/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,60m,,,,,,,,,,,,,,,
367,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies a suspicious file that was written by a PDF reader application and subsequently executed. These processes are
often launched via exploitation of PDF applications.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Execution of File Written or Modified by PDF Reader,,73,1defdd62-cd8d-426e-a246-81a37751bb2b,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",,eql,"sequence with maxspan=2h
  [file where event.type != ""deletion"" and file.extension : ""exe"" and
     (process.name : ""AcroRd32.exe"" or
      process.name : ""rdrcef.exe"" or
      process.name : ""FoxitPhantomPDF.exe"" or
      process.name : ""FoxitReader.exe"") and
     not (file.name : ""FoxitPhantomPDF.exe"" or
          file.name : ""FoxitPhantomPDFUpdater.exe"" or
          file.name : ""FoxitReader.exe"" or
          file.name : ""FoxitReaderUpdater.exe"" or
          file.name : ""AcroRd32.exe"" or
          file.name : ""rdrcef.exe"")
  ] by host.id, file.path
  [process where event.type == ""start""] by host.id, process.executable
",now-120m,,"## Triage and analysis

### Investigating Execution of File Written or Modified by PDF Reader

PDF is a common file type used in corporate environments and most machines have software to
handle these files. This creates a vector where attackers can exploit the engines and technology behind this class of
software for initial access or privilege escalation.

This rule searches for executable files written by PDF reader software and executed in sequence. This is most likely the
result of exploitation for privilege escalation or initial access. This rule can also detect suspicious processes masquerading as
PDF readers.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve the PDF documents received and opened by the user that could cause this behavior. Common locations include,
but are not limited to, the Downloads and Document folders and the folder configured at the email client.
- Determine if the collected files are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
  - If the malicious file was delivered via phishing:
    - Block the email sender from sending future emails.
    - Block the malicious web pages.
    - Remove emails from the sender from mailboxes.
    - Consider improvements to the security awareness program.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}, {'id': 'T1566.002', 'name': 'Spearphishing Link', 'reference': 'https://attack.mitre.org/techniques/T1566/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,60m,,,,,,,,,,,,,,,
368,2021/10/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Detects the presence of a portable executable (PE) in a PowerShell script by looking for its encoded header. Attackers
embed PEs into PowerShell scripts to inject them into memory, avoiding defences by not writing to disk.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,Suspicious Portable Executable Encoded in Powershell Script,['https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md'],47,ad84d445-b1ce-4377-82d9-7c633f28bf9a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text : (
    TVqQAAMAAAAEAAAA
  )
",now-9m,,"## Triage and analysis

### Investigating Suspicious Portable Executable Encoded in Powershell Script

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can abuse PowerShell in-memory capabilities to inject executables into memory without touching the disk,
bypassing file-based security protections. These executables are generally base64 encoded.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Retrieve the script and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad
- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a
- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Reimage the host operating system or restore the compromised files to clean versions.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
369,2021/10/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Detects the use of PSReflect in PowerShell scripts. Attackers leverage PSReflect as a library that enables
PowerShell to access win32 API functions.
",['Legitimate PowerShell scripts that make use of PSReflect to access the win32 API'],"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell PSReflect Script,"['https://github.com/mattifestation/PSReflect/blob/master/PSReflect.psm1', 'https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md']",47,56f2e9b5-4803-4e44-a0a4-a52dc79d57fe,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text:(
    ""New-InMemoryModule"" or
    ""Add-Win32Type"" or
    psenum or
    DefineDynamicAssembly or
    DefineDynamicModule or
    ""Reflection.TypeAttributes"" or
    ""Reflection.Emit.OpCodes"" or
    ""Reflection.Emit.CustomAttributeBuilder"" or
    ""Runtime.InteropServices.DllImportAttribute""
  )
",now-9m,,"## Triage and analysis

### Investigating PowerShell PSReflect Script

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

PSReflect is a library that enables PowerShell to access win32 API functions in an uncomplicated way. It also helps to
create enums and structs easily—all without touching the disk.

Although this is an interesting project for every developer and admin out there, it is mainly used in the red team and
malware tooling for its capabilities.

Detecting the core implementation of PSReflect means detecting most of the tooling that uses Windows API through
PowerShell, enabling defenders to discover tools being dropped in the environment.

#### Possible investigation steps

- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration
capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics. The
script content that may be split into multiple script blocks (you can use the field `powershell.file.script_block_id`
for filtering).
- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Check for additional PowerShell and command-line logs that indicate that imported functions were run.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Evaluate whether the user needs to use PowerShell to complete tasks.
- Retrieve the script and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- PowerShell Suspicious Discovery Related Windows API Functions - 61ac3638-40a3-44b2-855a-985636ca985e
- PowerShell Keylogging Script - bd2c86a0-8b61-4457-ab38-96943984e889
- PowerShell Suspicious Script with Audio Capture Capabilities - 2f2f4939-0b34-40c2-a0a3-844eb7889f43
- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d
- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad
- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a
- PowerShell Suspicious Script with Screenshot Capabilities - 959a7353-1129-4aa7-9084-30746b256a70

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be configured (Enable).

Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'id': 'T1059', 'subtechnique': [{'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/', 'id': 'T1059.001'}]}, {'name': 'Native API', 'reference': 'https://attack.mitre.org/techniques/T1106/', 'id': 'T1106'}], 'tactic': {'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'id': 'TA0002'}}]",,,,,,,,,,,,,,,,,,,
370,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies use of the SysInternals tool PsExec.exe making a network connection. This could be an indication of lateral
movement.
","[""    PsExec is a dual-use tool that can be used for benign or malicious activity. It's important to baseline your\n    environment to determine the amount of noise to expect from this tool.\n    ""]","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,PsExec Network Connection,,21,55d551c6-333b-4665-ab7e-5d14a59715ce,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",,eql,"sequence by process.entity_id
  [process where process.name : ""PsExec.exe"" and event.type == ""start"" and

   /* This flag suppresses the display of the license dialog and may
      indicate that psexec executed for the first time in the machine */
   process.args : ""-accepteula"" and

   not process.executable : (""?:\\ProgramData\\Docusnap\\Discovery\\discovery\\plugins\\17\\Bin\\psexec.exe"",
                             ""?:\\Docusnap 11\\Bin\\psexec.exe"",
                             ""?:\\Program Files\\Docusnap X\\Bin\\psexec.exe"",
                             ""?:\\Program Files\\Docusnap X\\Tools\\dsDNS.exe"") and
   not process.parent.executable : ""?:\\Program Files (x86)\\Cynet\\Cynet Scanner\\CynetScanner.exe""]
  [network where process.name : ""PsExec.exe""]
",now-9m,,"## Triage and analysis

### Investigating PsExec Network Connection

PsExec is a remote administration tool that enables the execution of commands with both regular and SYSTEM privileges
on Windows systems. Microsoft develops it as part of the Sysinternals Suite. Although commonly used by administrators,
PsExec is frequently used by attackers to enable lateral movement and execute commands as SYSTEM to disable defenses and
bypass security protections.

This rule identifies PsExec execution by looking for the creation of `PsExec.exe`, the default name for the
utility, followed by a network connection done by the process.

#### Possible investigation steps

- Check if the usage of this tool complies with the organization's administration policy.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Identify the target computer and its role in the IT environment.
- Investigate what commands were run, and assess whether this behavior is prevalent in the environment by looking for
similar occurrences across hosts.

### False positive analysis

- This mechanism can be used legitimately. As long as the analyst did not identify suspicious activity related to the
user or involved hosts, and the tool is allowed by the organization's policy, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
  - Prioritize accordingly with the role of the servers and users involved.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1569', 'name': 'System Services', 'reference': 'https://attack.mitre.org/techniques/T1569/', 'subtechnique': [{'id': 'T1569.002', 'name': 'Service Execution', 'reference': 'https://attack.mitre.org/techniques/T1569/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
371,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the native Windows tools regsvr32.exe, regsvr64.exe, RegSvcs.exe, or RegAsm.exe making a network connection.
This may be indicative of an attacker bypassing allowlists or running arbitrary scripts via a signed Microsoft binary.
",['    Security testing may produce events like this. Activity of this kind performed by non-engineers and ordinary users\n    is unusual.\n    '],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Network Connection via Registration Utility,['https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'],21,fb02b8d3-71ee-4af1-bacd-215d23f17efa,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",,eql,"sequence by process.entity_id
  [process where event.type == ""start"" and
   process.name : (""regsvr32.exe"", ""RegAsm.exe"", ""RegSvcs.exe"") and
   not (
         (?process.Ext.token.integrity_level_name : ""System"" or ?winlog.event_data.IntegrityLevel : ""System"") and
         (process.parent.name : ""msiexec.exe"" or process.parent.executable : (""C:\\Program Files (x86)\\*.exe"", ""C:\\Program Files\\*.exe""))
       )
   ]
  [network where process.name : (""regsvr32.exe"", ""RegAsm.exe"", ""RegSvcs.exe"")  and
   not cidrmatch(destination.ip, ""10.0.0.0/8"", ""127.0.0.0/8"", ""169.254.0.0/16"", ""172.16.0.0/12"", ""192.0.0.0/24"",
       ""192.0.0.0/29"", ""192.0.0.8/32"", ""192.0.0.9/32"", ""192.0.0.10/32"", ""192.0.0.170/32"", ""192.0.0.171/32"",
       ""192.0.2.0/24"", ""192.31.196.0/24"", ""192.52.193.0/24"", ""192.168.0.0/16"", ""192.88.99.0/24"", ""224.0.0.0/4"",
       ""100.64.0.0/10"", ""192.175.48.0/24"",""198.18.0.0/15"", ""198.51.100.0/24"", ""203.0.113.0/24"", ""240.0.0.0/4"", ""::1"",
       ""FE80::/10"", ""FF00::/8"") and network.protocol != ""dns""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.010', 'name': 'Regsvr32', 'reference': 'https://attack.mitre.org/techniques/T1218/010/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
372,2020/12/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the PowerShell process loading the Task Scheduler COM DLL followed by an outbound RPC network connection
within a short time period. This may indicate lateral movement or remote discovery via scheduled tasks.
",['Legitimate scheduled tasks may be created during installation of new software.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Outbound Scheduled Task Activity via PowerShell,['https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/'],47,5cd55388-a19c-47c7-8ec4-f41656c2fded,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",,eql,"sequence by host.id, process.entity_id with maxspan = 5s
 [any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
  (dll.name : ""taskschd.dll"" or file.name : ""taskschd.dll"") and process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"")]
 [network where process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and destination.port == 135 and not destination.address in (""127.0.0.1"", ""::1"")]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
373,2020/10/28,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation, change, or deletion of a DLL module within a Windows SxS local folder. Adversaries may abuse
shared modules to execute malicious payloads by instructing the Windows module loader to load DLLs from arbitrary local
paths.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Execution via local SxS Shared Module,['https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-redirection'],47,a3ea12f3-0d4e-4667-8b44-4230c63f3c75,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"file where file.extension : ""dll"" and file.path : ""C:\\*\\*.exe.local\\*.dll""
",now-9m,,"## Triage and analysis

The SxS DotLocal folder is a legitimate feature that can be abused to hijack standard modules loading order by forcing an executable on the same application.exe.local folder to load a malicious DLL module from the same directory.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1129', 'name': 'Shared Modules', 'reference': 'https://attack.mitre.org/techniques/T1129/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
374,2020/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies suspicious command execution (cmd) via Windows Management Instrumentation (WMI) on a remote host. This could
be indicative of adversary lateral movement.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Cmd Execution via WMI,,47,12f07955-1674-44f7-86b5-c35da0a6f41a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name : ""WmiPrvSE.exe"" and process.name : ""cmd.exe"" and
 process.args : ""\\\\127.0.0.1\\*"" and process.args : (""2>&1"", ""1>"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1047', 'name': 'Windows Management Instrumentation', 'reference': 'https://attack.mitre.org/techniques/T1047/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
375,2020/11/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a suspicious image load (wmiutils.dll) from Microsoft Office processes. This behavior may indicate
adversarial activity where child processes are spawned via Windows Management Instrumentation (WMI). This technique can
be used to execute code and evade traditional parent/child processes spawned from Microsoft Office products.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious WMI Image Load from MS Office,['https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16'],21,891cb88e-441a-4c3e-be2d-120d99fe7b0d,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"any where
 (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
  process.name : (""WINWORD.EXE"", ""EXCEL.EXE"", ""POWERPNT.EXE"", ""MSPUB.EXE"", ""MSACCESS.EXE"") and
  (dll.name : ""wmiutils.dll"" or file.name : ""wmiutils.dll"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1047', 'name': 'Windows Management Instrumentation', 'reference': 'https://attack.mitre.org/techniques/T1047/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
376,2020/03/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious child processes of PDF reader applications. These child processes are often launched via
exploitation of PDF applications or social engineering.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious PDF Reader Child Process,,21,53a26770-9cbd-40c5-8b57-61d01a325e14,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : (""AcroRd32.exe"",
                         ""Acrobat.exe"",
                         ""FoxitPhantomPDF.exe"",
                         ""FoxitReader.exe"") and
  process.name : (""arp.exe"", ""dsquery.exe"", ""dsget.exe"", ""gpresult.exe"", ""hostname.exe"", ""ipconfig.exe"", ""nbtstat.exe"",
                  ""net.exe"", ""net1.exe"", ""netsh.exe"", ""netstat.exe"", ""nltest.exe"", ""ping.exe"", ""qprocess.exe"",
                  ""quser.exe"", ""qwinsta.exe"", ""reg.exe"", ""sc.exe"", ""systeminfo.exe"", ""tasklist.exe"", ""tracert.exe"",
                  ""whoami.exe"", ""bginfo.exe"", ""cdb.exe"", ""cmstp.exe"", ""csi.exe"", ""dnx.exe"", ""fsi.exe"", ""ieexec.exe"",
                  ""iexpress.exe"", ""installutil.exe"", ""Microsoft.Workflow.Compiler.exe"", ""msbuild.exe"", ""mshta.exe"",
                  ""msxsl.exe"", ""odbcconf.exe"", ""rcsi.exe"", ""regsvr32.exe"", ""xwizard.exe"", ""atbroker.exe"",
                  ""forfiles.exe"", ""schtasks.exe"", ""regasm.exe"", ""regsvcs.exe"", ""cmd.exe"", ""cscript.exe"",
                  ""powershell.exe"", ""pwsh.exe"", ""wmic.exe"", ""wscript.exe"", ""bitsadmin.exe"", ""certutil.exe"", ""ftp.exe"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious PDF Reader Child Process

PDF is a common file type used in corporate environments and most machines have software to handle these files. This
creates a vector where attackers can exploit the engines and technology behind this class of software for initial access
or privilege escalation.

This rule looks for commonly abused built-in utilities spawned by a PDF reader process, which is likely a malicious behavior.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve PDF documents received and opened by the user that could cause this behavior. Common locations include, but
are not limited to, the Downloads and Document folders and the folder configured at the email client.
- Determine if the collected files are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.


### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
  - If the malicious file was delivered via phishing:
    - Block the email sender from sending future emails.
    - Block the malicious web pages.
    - Remove emails from the sender from mailboxes.
    - Consider improvements to the security awareness program.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
377,2020/11/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the PowerShell engine being invoked by unexpected processes. Rather than executing PowerShell functionality
with powershell.exe, some attackers do this to operate more stealthily.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious PowerShell Engine ImageLoad,,47,852c1f19-68e8-43a6-9dce-340771fe1be3,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",event.ingested,eql,"any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
 (dll.name : (""System.Management.Automation.ni.dll"", ""System.Management.Automation.dll"") or
  file.name : (""System.Management.Automation.ni.dll"", ""System.Management.Automation.dll"")) and

/* add false positives relevant to your environment here */
not process.executable : (""C:\\Windows\\System32\\RemoteFXvGPUDisablement.exe"", ""C:\\Windows\\System32\\sdiagnhost.exe"") and
not process.executable regex~ """"""C:\\Program Files( \(x86\))?\\*\.exe"""""" and
  not process.name :
  (
    ""Altaro.SubAgent.exe"",
    ""AppV_Manage.exe"",
    ""azureadconnect.exe"",
    ""CcmExec.exe"",
    ""configsyncrun.exe"",
    ""choco.exe"",
    ""ctxappvservice.exe"",
    ""DVLS.Console.exe"",
    ""edgetransport.exe"",
    ""exsetup.exe"",
    ""forefrontactivedirectoryconnector.exe"",
    ""InstallUtil.exe"",
    ""JenkinsOnDesktop.exe"",
    ""Microsoft.EnterpriseManagement.ServiceManager.UI.Console.exe"",
    ""mmc.exe"",
    ""mscorsvw.exe"",
    ""msexchangedelivery.exe"",
    ""msexchangefrontendtransport.exe"",
    ""msexchangehmworker.exe"",
    ""msexchangesubmission.exe"",
    ""msiexec.exe"",
    ""MsiExec.exe"",
    ""noderunner.exe"",
    ""NServiceBus.Host.exe"",
    ""NServiceBus.Host32.exe"",
    ""NServiceBus.Hosting.Azure.HostProcess.exe"",
    ""OuiGui.WPF.exe"",
    ""powershell.exe"",
    ""powershell_ise.exe"",
    ""pwsh.exe"",
    ""SCCMCliCtrWPF.exe"",
    ""ScriptEditor.exe"",
    ""ScriptRunner.exe"",
    ""sdiagnhost.exe"",
    ""servermanager.exe"",
    ""setup100.exe"",
    ""ServiceHub.VSDetouredHost.exe"",
    ""SPCAF.Client.exe"",
    ""SPCAF.SettingsEditor.exe"",
    ""SQLPS.exe"",
    ""telemetryservice.exe"",
    ""UMWorkerProcess.exe"",
    ""w3wp.exe"",
    ""wsmprovhost.exe""
  )
",now-9m,,"## Triage and analysis

### Investigating Suspicious PowerShell Engine ImageLoad

PowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This
makes it available for use in various environments, and creates an attractive way for attackers to execute code.

Attackers can use PowerShell without having to execute `PowerShell.exe` directly. This technique, often called
""PowerShell without PowerShell,"" works by using the underlying System.Management.Automation namespace and can bypass
application allowlisting and PowerShell security features.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Retrieve the implementation (DLL, executable, etc.) and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity can happen legitimately. Some vendors have their own PowerShell implementations that are shipped with
some products. These benign true positives (B-TPs) can be added as exceptions if necessary after analysis.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
378,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies suspicious psexec activity which is executing from the psexec service that has been renamed, possibly to
evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Process Execution via Renamed PsExec Executable,,47,e2f9fdf5-8076-45ad-9427-41e0e03dc9c2,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
  process.pe.original_file_name : ""psexesvc.exe"" and not process.name : ""PSEXESVC.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1569', 'name': 'System Services', 'reference': 'https://attack.mitre.org/techniques/T1569/', 'subtechnique': [{'id': 'T1569.002', 'name': 'Service Execution', 'reference': 'https://attack.mitre.org/techniques/T1569/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
379,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal
malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable
program (hh.exe).
","['    The HTML Help executable program (hh.exe) runs whenever a user clicks a compiled help (.chm) file or menu item that\n    opens the help file inside the Help Viewer. This is not always malicious, but adversaries may abuse this technology\n    to conceal malicious code.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Process Activity via Compiled HTML File,,47,e3343ab9-4245-4715-b344-e11c56b0a47f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name : ""hh.exe"" and
 process.name : (""mshta.exe"", ""cmd.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"", ""cscript.exe"", ""wscript.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1204', 'name': 'User Execution', 'reference': 'https://attack.mitre.org/techniques/T1204/', 'subtechnique': [{'id': 'T1204.002', 'name': 'Malicious File', 'reference': 'https://attack.mitre.org/techniques/T1204/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.001', 'name': 'Compiled HTML File', 'reference': 'https://attack.mitre.org/techniques/T1218/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
380,2020/08/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Detects when the Console Window Host (conhost.exe) process is spawned by a suspicious parent process, which could be
indicative of code injection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Conhost Spawned By Suspicious Parent Process,['https://www.fireeye.com/blog/threat-research/2017/08/monitoring-windows-console-activity-part-one.html'],73,05b358de-aa6d-4f6c-89e6-78f74018b43b,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""conhost.exe"" and
  process.parent.name : (""lsass.exe"", ""services.exe"", ""smss.exe"", ""winlogon.exe"", ""explorer.exe"", ""dllhost.exe"", ""rundll32.exe"",
                         ""regsvr32.exe"", ""userinit.exe"", ""wininit.exe"", ""spoolsv.exe"", ""ctfmon.exe"") and
  not (process.parent.name : ""rundll32.exe"" and
       process.parent.args : (""?:\\Windows\\Installer\\MSI*.tmp,zzzzInvokeManagedCustomActionOutOfProc"",
                              ""?:\\WINDOWS\\system32\\PcaSvc.dll,PcaPatchSdbTask"",
                              ""?:\\WINDOWS\\system32\\davclnt.dll,DavSetCookie""))
",now-9m,,"## Triage and analysis

### Investigating Conhost Spawned By Suspicious Parent Process

The Windows Console Host, or `conhost.exe`, is both the server application for all of the Windows Console APIs as well as
the classic Windows user interface for working with command-line applications.

Attackers often rely on custom shell implementations to avoid using built-in command interpreters like `cmd.exe` and
`PowerShell.exe` and bypass application allowlisting and security features. Attackers commonly inject these implementations into
legitimate system processes.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Retrieve the parent process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- Suspicious Process from Conhost - 28896382-7d4f-4d50-9b72-67091901fd26
- Suspicious PowerShell Engine ImageLoad - 852c1f19-68e8-43a6-9dce-340771fe1be3

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
381,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies execution via MSSQL xp_cmdshell stored procedure. Malicious users may attempt to elevate their privileges by
using xp_cmdshell, which is disabled by default, thus, it's important to review the context of it's use.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Execution via MSSQL xp_cmdshell Stored Procedure,['https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/'],73,4ed493fc-d637-4a36-80ff-ac84937e5461,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : ""cmd.exe"" and process.parent.name : ""sqlservr.exe"" and
  not process.args : (""\\\\*"", ""diskfree"", ""rmdir"", ""mkdir"", ""dir"", ""del"", ""rename"", ""bcp"", ""*XMLNAMESPACES*"",
                      ""?:\\MSSQL\\Backup\\Jobs\\sql_agent_backup_job.ps1"", ""K:\\MSSQL\\Backup\\msdb"", ""K:\\MSSQL\\Backup\\Logins"")
",now-9m,,"## Triage and analysis

### Investigating Execution via MSSQL xp_cmdshell Stored Procedure

Microsoft SQL Server (MSSQL) has procedures meant to extend its functionality, the Extended Stored Procedures. These
procedures are external functions written in C/C++; some provide interfaces for external programs. This is the case for
xp_cmdshell, which spawns a Windows command shell and passes in a string for execution. Attackers can use this to
execute commands on the system running the SQL server, commonly to escalate their privileges and establish persistence.

The xp_cmdshell procedure is disabled by default, but when used, it has the same security context as the MSSQL Server
service account, which is often privileged.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network
connections.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Examine the command line to determine if the command executed is potentially harmful or malicious.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.

### False positive analysis

- This mechanism can be used legitimately, but it brings inherent risk. The security team must monitor any activity of
it. If recurrent tasks are being executed using this mechanism, consider adding exceptions — preferably with a full
command line.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Ensure that SQL servers are not directly exposed to the internet. If there is a business justification for such, use
an allowlist to allow only connections from known legitimate sources.
- Disable the xp_cmdshell stored procedure.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
382,2021/10/01,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies the deletion of backup files, saved using third-party software, by a process outside of the backup suite.
Adversaries may delete Backup files to ensure that recovery from a ransomware attack is less likely.
",['Certain utilities that delete files for disk cleanup or Administrators manually removing backup files.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Third-party Backup Files Deleted via Unexpected Process,['https://www.advintel.io/post/backup-removal-solutions-from-conti-ransomware-with-love'],47,11ea6bec-ebde-4d71-a8e9-784948f8e3e9,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",event.ingested,eql,"file where event.type == ""deletion"" and
  (
  /* Veeam Related Backup Files */
  (file.extension : (""VBK"", ""VIB"", ""VBM"") and
  not process.executable : (""?:\\Windows\\Veeam\\Backup\\*"",
                            ""?:\\Program Files\\Veeam\\Backup and Replication\\*"",
                            ""?:\\Program Files (x86)\\Veeam\\Backup and Replication\\*"")) or

  /* Veritas Backup Exec Related Backup File */
  (file.extension : ""BKF"" and
  not process.executable : (""?:\\Program Files\\Veritas\\Backup Exec\\*"",
                            ""?:\\Program Files (x86)\\Veritas\\Backup Exec\\*""))
  )
",now-9m,,"## Triage and analysis

### Investigating Third-party Backup Files Deleted via Unexpected Process

Backups are a significant obstacle for any ransomware operation. They allow the victim to resume business by performing
data recovery, making them a valuable target.

Attackers can delete backups from the host and gain access to backup servers to remove centralized backups for the
environment, ensuring that victims have no alternatives to paying the ransom.

This rule identifies file deletions performed by a process that does not belong to the backup suite and aims to delete
Veritas or Veeam backups.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check if any files on the host machine have been encrypted.

### False positive analysis

- This rule can be triggered by the manual removal of backup files and by removal using other third-party tools that are
not from the backup suite. Exceptions can be added for specific accounts and executables, preferably tied together.

### Related rules

- Deleting Backup Catalogs with Wbadmin - 581add16-df76-42bb-af8e-c979bfb39a59
- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921
- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4
- Volume Shadow Copy Deletion via WMIC - dc9c1f74-dac3-48e3-b47f-eb79db358f57

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.
- Perform data recovery locally or restore the backups from replicated copies (Cloud, other servers, etc.).
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1490', 'name': 'Inhibit System Recovery', 'reference': 'https://attack.mitre.org/techniques/T1490/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]",,,,,,,,,,,,,,,,,,,
383,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of the wbadmin.exe to delete the backup catalog. Ransomware and other malware may do this to prevent
system recovery.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Deleting Backup Catalogs with Wbadmin,,21,581add16-df76-42bb-af8e-c979bfb39a59,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""wbadmin.exe"" or process.pe.original_file_name == ""WBADMIN.EXE"") and
  process.args : ""catalog"" and process.args : ""delete""
",now-9m,,"## Triage and analysis

### Investigating Deleting Backup Catalogs with Wbadmin

Windows Server Backup stores the details about your backups (what volumes are backed up and where the backups are
located) in a file called a backup catalog, which ransomware victims can use to recover corrupted backup files.
Deleting these files is a common step in threat actor playbooks.

This rule identifies the deletion of the backup catalog using the `wbadmin.exe` utility.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Check if any files on the host machine have been encrypted.

### False positive analysis

- Administrators can use this command to delete corrupted catalogs, but overall the activity is unlikely to be legitimate.

### Related rules

- Third-party Backup Files Deleted via Unexpected Process - 11ea6bec-ebde-4d71-a8e9-784948f8e3e9
- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921
- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4
- Volume Shadow Copy Deletion via WMIC - dc9c1f74-dac3-48e3-b47f-eb79db358f57

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If any other destructive action was identified on the host, it is recommended to prioritize the investigation and look
for ransomware preparation and execution activities.
- If any backups were affected:
  - Perform data recovery locally or restore the backups from replicated copies (cloud, other servers, etc.).
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1490', 'name': 'Inhibit System Recovery', 'reference': 'https://attack.mitre.org/techniques/T1490/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]",,,,,,,,,,,,,,,,,,,
384,2020/03/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of bcdedit.exe to delete boot configuration data. This tactic is sometimes used as by malware or an
attacker as a destructive technique.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Modification of Boot Configuration,,21,69c251fb-a5d6-4035-b5ec-40438bd829ff,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""bcdedit.exe"" or process.pe.original_file_name == ""bcdedit.exe"") and
    (
      (process.args : ""/set"" and process.args : ""bootstatuspolicy"" and process.args : ""ignoreallfailures"") or
      (process.args : ""no"" and process.args : ""recoveryenabled"")
    )
",now-9m,,"## Triage and analysis

### Investigating Modification of Boot Configuration

Boot entry parameters, or boot parameters, are optional, system-specific settings that represent configuration options.
These are stored in a boot configuration data (BCD) store, and administrators can use utilities like `bcdedit.exe` to
configure these.

This rule identifies the usage of `bcdedit.exe` to:

- Disable Windows Error Recovery (recoveryenabled).
- Ignore errors if there is a failed boot, failed shutdown, or failed checkpoint (bootstatuspolicy ignoreallfailures).

These are common steps in destructive attacks by adversaries leveraging ransomware.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Check if any files on the host machine have been encrypted.

### False positive analysis

- The usage of these options is not inherently malicious. Administrators can modify these configurations to force a
machine to boot for troubleshooting or data recovery purposes.

### Related rules

- Deleting Backup Catalogs with Wbadmin - 581add16-df76-42bb-af8e-c979bfb39a59

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If any other destructive action was identified on the host, it is recommended to prioritize the investigation and look
for ransomware preparation and execution activities.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1490', 'name': 'Inhibit System Recovery', 'reference': 'https://attack.mitre.org/techniques/T1490/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]",,,,,,,,,,,,,,,,,,,
385,2020/12/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"This rule identifies a high number (10) of process terminations (stop, delete, or suspend) from the same host within a
short time period.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",kuery,Elastic License v2,High Number of Process and/or Service Terminations,,47,035889c4-2686-4583-a7df-67f89c292f2c,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",,threshold,"event.category:process and event.type:start and process.name:(net.exe or sc.exe or taskkill.exe) and
 process.args:(stop or pause or delete or ""/PID"" or ""/IM"" or ""/T"" or ""/F"" or ""/t"" or ""/f"" or ""/im"" or ""/pid"")
",now-9m,,"## Triage and analysis

### Investigating High Number of Process and/or Service Terminations

Attackers can stop services and kill processes for a variety of purposes. For example, they can stop services associated
with business applications and databases to release the lock on files used by these applications so they may be encrypted,
or stop security and backup solutions, etc.

This rule identifies a high number (10) of service and/or process terminations (stop, delete, or suspend) from the same
host within a short time period.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check if any files on the host machine have been encrypted.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further destructive behavior, which is commonly associated with this activity.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reimage the host operating system or restore it to the operational state.
- If any other destructive action was identified on the host, it is recommended to prioritize the investigation and look
for ransomware preparation and execution activities.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1489', 'name': 'Service Stop', 'reference': 'https://attack.mitre.org/techniques/T1489/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]","{'field': ['host.id'], 'value': 10}",,,,,,,,,,,,,,,,,,
386,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies use of vssadmin.exe for shadow copy deletion or resizing on endpoints. This commonly occurs in tandem with
ransomware or other destructive attacks.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Volume Shadow Copy Deleted or Resized via VssAdmin,,73,b5ea4bfe-a1b2-421f-9d47-22a75a6f2921,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",event.ingested,eql,"process where event.type == ""start""
  and (process.name : ""vssadmin.exe"" or process.pe.original_file_name == ""VSSADMIN.EXE"") and
  process.args in (""delete"", ""resize"") and process.args : ""shadows*""
",now-9m,,"## Triage and analysis

### Investigating Volume Shadow Copy Deleted or Resized via VssAdmin

The Volume Shadow Copy Service (VSS) is a Windows feature that enables system administrators to take snapshots of volumes
that can later be restored or mounted to recover specific files or folders.

A typical step in the playbook of an attacker attempting to deploy ransomware is to delete Volume Shadow
Copies to ensure that victims have no alternative to paying the ransom, making any action that deletes shadow
copies worth monitoring.

This rule monitors the execution of Vssadmin.exe to either delete or resize shadow copies.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- In the case of a resize operation, check if the resize value is equal to suspicious values, like 401MB.
- Investigate other alerts associated with the user/host during the past 48 hours.
- If unsigned files are found on the process tree, retrieve them and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Use process name, command line, and file hash to search for occurrences in other hosts.
- Check if any files on the host machine have been encrypted.


### False positive analysis

- This rule may produce benign true positives (B-TPs). If this activity is expected and noisy in your
environment, consider adding exceptions — preferably with a combination of user and command line conditions.

### Related rules

- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921
- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.
- Priority should be given due to the advanced stage of this activity on the attack.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- If data was encrypted, deleted, or modified, activate your data recovery plan.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Perform data recovery locally or restore the backups from replicated copies (cloud, other servers, etc.).
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1490', 'name': 'Inhibit System Recovery', 'reference': 'https://attack.mitre.org/techniques/T1490/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]",,,,,,,,,,,,,,,,,,,
387,2021/07/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,"['Elastic', 'Austin Songer']","Identifies the use of the Win32_ShadowCopy class and related cmdlets to achieve shadow copy deletion. This commonly
occurs in tandem with ransomware or other destructive attacks.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Volume Shadow Copy Deletion via PowerShell,"['https://docs.microsoft.com/en-us/previous-versions/windows/desktop/vsswmi/win32-shadowcopy', 'https://powershell.one/wmi/root/cimv2/win32_shadowcopy', 'https://www.fortinet.com/blog/threat-research/stomping-shadow-copies-a-second-look-into-deletion-methods']",73,d99a037b-c8e2-47a5-97b9-170d076827c4,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and
  process.args : (""*Get-WmiObject*"", ""*gwmi*"", ""*Get-CimInstance*"", ""*gcim*"") and
  process.args : (""*Win32_ShadowCopy*"") and
  process.args : (""*.Delete()*"", ""*Remove-WmiObject*"", ""*rwmi*"", ""*Remove-CimInstance*"", ""*rcim*"")
",now-9m,,"## Triage and analysis

### Investigating Volume Shadow Copy Deletion via PowerShell

The Volume Shadow Copy Service (VSS) is a Windows feature that enables system administrators to take snapshots of volumes
that can later be restored or mounted to recover specific files or folders.

A typical step in the playbook of an attacker attempting to deploy ransomware is to delete Volume Shadow
Copies to ensure that victims have no alternative to paying the ransom, making any action that deletes shadow
copies worth monitoring.

This rule monitors the execution of PowerShell cmdlets to interact with the Win32_ShadowCopy WMI class, retrieve shadow
copy objects, and delete them.

#### Possible investigation steps

- Investigate the program execution chain (parent process tree).
- Check whether the account is authorized to perform this operation.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- If unsigned files are found on the process tree, retrieve them and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Use process name, command line, and file hash to search for occurrences in other hosts.
- Check if any files on the host machine have been encrypted.


### False positive analysis

- This rule has chances of producing benign true positives (B-TPs). If this activity is expected and noisy in your
environment, consider adding exceptions — preferably with a combination of user and command line conditions.

### Related rules

- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921
- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.
- Priority should be given due to the advanced stage of this activity on the attack.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- If data was encrypted, deleted, or modified, activate your data recovery plan.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Perform data recovery locally or restore the backups from replicated copies (cloud, other servers, etc.).
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1490', 'name': 'Inhibit System Recovery', 'reference': 'https://attack.mitre.org/techniques/T1490/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]",,,,,,,,,,,,,,,,,,,
388,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies use of wmic.exe for shadow copy deletion on endpoints. This commonly occurs in tandem with ransomware or
other destructive attacks.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Volume Shadow Copy Deletion via WMIC,,73,dc9c1f74-dac3-48e3-b47f-eb79db358f57,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Impact', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""WMIC.exe"" or process.pe.original_file_name == ""wmic.exe"") and
  process.args : ""delete"" and process.args : ""shadowcopy""
",now-9m,,"## Triage and analysis

### Investigating Volume Shadow Copy Deletion via WMIC

The Volume Shadow Copy Service (VSS) is a Windows feature that enables system administrators to take snapshots of volumes
that can later be restored or mounted to recover specific files or folders.

A typical step in the playbook of an attacker attempting to deploy ransomware is to delete Volume Shadow
Copies to ensure that victims have no alternative to paying the ransom, making any action that deletes shadow
copies worth monitoring.

This rule monitors the execution of `wmic.exe` to interact with VSS via the `shadowcopy` alias and delete parameter.

#### Possible investigation steps

- Investigate the program execution chain (parent process tree).
- Check whether the account is authorized to perform this operation.
- Contact the account owner and confirm whether they are aware of this activity.
- In the case of a resize operation, check if the resize value is equal to suspicious values, like 401MB.
- Investigate other alerts associated with the user/host during the past 48 hours.
- If unsigned files are found on the process tree, retrieve them and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Use process name, command line, and file hash to search for occurrences in other hosts.
- Check if any files on the host machine have been encrypted.


### False positive analysis

- This rule has chances of producing benign true positives (B-TPs). If this activity is expected and noisy in your
environment, consider adding exceptions — preferably with a combination of user and command line conditions.

### Related rules

- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921
- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Priority should be given due to the advanced stage of this activity on the attack.
- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- If data was encrypted, deleted, or modified, activate your data recovery plan.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Perform data recovery locally or restore the backups from replicated copies (cloud, other servers, etc.).
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1490', 'name': 'Inhibit System Recovery', 'reference': 'https://attack.mitre.org/techniques/T1490/'}], 'tactic': {'id': 'TA0040', 'name': 'Impact', 'reference': 'https://attack.mitre.org/tactics/TA0040/'}}]",,,,,,,,,,,,,,,,,,,
389,2022/07/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the execution of a browser process to open an HTML file with high entropy and size. Adversaries may smuggle
data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious HTML File Creation,,47,f0493cb4-9b15-43a9-9359-68c23a7f2cf3,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",,eql,"sequence by user.id with maxspan=5m
 [file where event.action in (""creation"", ""rename"") and
  file.extension : (""htm"", ""html"") and
   file.path : (""?:\\Users\\*\\Downloads\\*"",
                ""?:\\Users\\*\\Content.Outlook\\*"",
                ""?:\\Users\\*\\AppData\\Local\\Temp\\Temp?_*"",
                ""?:\\Users\\*\\AppData\\Local\\Temp\\7z*"",
                ""?:\\Users\\*\\AppData\\Local\\Temp\\Rar$*"") and
   ((file.Ext.entropy >= 5 and file.size >= 150000) or file.size >= 1000000)]
 [process where event.action == ""start"" and
  (
   (process.name in (""chrome.exe"", ""msedge.exe"", ""brave.exe"", ""whale.exe"", ""browser.exe"", ""dragon.exe"", ""vivaldi.exe"", ""opera.exe"")
    and process.args == ""--single-argument"") or
   (process.name == ""iexplore.exe"" and process.args_count == 2) or
   (process.name in (""firefox.exe"", ""waterfox.exe"") and process.args == ""-url"")
  )
  and process.args : (""?:\\Users\\*\\Downloads\\*.htm*"",
                      ""?:\\Users\\*\\Content.Outlook\\*.htm*"",
                      ""?:\\Users\\*\\AppData\\Local\\Temp\\Temp?_*.htm*"",
                      ""?:\\Users\\*\\AppData\\Local\\Temp\\7z*.htm*"",
                      ""?:\\Users\\*\\AppData\\Local\\Temp\\Rar$*.htm*"")]
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}, {'id': 'T1566.002', 'name': 'Spearphishing Link', 'reference': 'https://attack.mitre.org/techniques/T1566/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/', 'subtechnique': [{'id': 'T1027.006', 'name': 'HTML Smuggling', 'reference': 'https://attack.mitre.org/techniques/T1027/006/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
390,2020/11/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of the built-in Windows script interpreters (cscript.exe or wscript.exe) being used to execute a process
via Windows Management Instrumentation (WMI). This may be indicative of malicious activity.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Windows Script Interpreter Executing Process via WMI,,47,b64b183e-1a76-422d-9179-7b389513e74d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",,eql,"sequence by host.id with maxspan = 5s
    [any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
     (dll.name : ""wmiutils.dll"" or file.name : ""wmiutils.dll"") and process.name : (""wscript.exe"", ""cscript.exe"")]
    [process where event.type == ""start"" and
     process.parent.name : ""wmiprvse.exe"" and
     user.domain != ""NT AUTHORITY"" and
     (process.pe.original_file_name :
        (
          ""cscript.exe"",
          ""wscript.exe"",
          ""PowerShell.EXE"",
          ""Cmd.Exe"",
          ""MSHTA.EXE"",
          ""RUNDLL32.EXE"",
          ""REGSVR32.EXE"",
          ""MSBuild.exe"",
          ""InstallUtil.exe"",
          ""RegAsm.exe"",
          ""RegSvcs.exe"",
          ""msxsl.exe"",
          ""CONTROL.EXE"",
          ""EXPLORER.EXE"",
          ""Microsoft.Workflow.Compiler.exe"",
          ""msiexec.exe""
        ) or
      process.executable : (""C:\\Users\\*.exe"", ""C:\\ProgramData\\*.exe"")
     )
    ]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
391,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies a PowerShell process launched by either cscript.exe or wscript.exe. Observing Windows scripting processes
executing a PowerShell script, may be indicative of malicious activity.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Windows Script Executing PowerShell,,21,f545ff26-3c94-4fd0-bd33-3c7f95a3a0fc,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : (""cscript.exe"", ""wscript.exe"") and process.name : ""powershell.exe""
",now-9m,,"## Triage and analysis

### Investigating Windows Script Executing PowerShell

The Windows Script Host (WSH) is an Windows automation technology, which is ideal for non-interactive scripting needs,
such as logon scripting, administrative scripting, and machine automation.

Attackers commonly use WSH scripts as their initial access method, acting like droppers for second stage payloads, but
can also use them to download tools and utilities needed to accomplish their goals.

This rule looks for the spawn of the `powershell.exe` process with `cscript.exe` or `wscript.exe` as its parent process.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate commands executed by the spawned PowerShell process.
- If unsigned files are found on the process tree, retrieve them and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Determine how the script file was delivered (email attachment, dropped by other processes, etc.).
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- The usage of these script engines by regular users is unlikely. In the case of authorized benign true positives
(B-TPs), exceptions can be added.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- If the malicious file was delivered via phishing:
  - Block the email sender from sending future emails.
  - Block the malicious web pages.
  - Remove emails from the sender from mailboxes.
  - Consider improvements to the security awareness program.
- Reimage the host operating system and restore compromised files to clean versions.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
392,2021/03/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,"['Elastic', 'Austin Songer']","Identifies suspicious files being written by the Microsoft Exchange Server Unified Messaging (UM) service. This activity
has been observed exploiting CVE-2021-26858.
","['    Files generated during installation will generate a lot of noise, so the rule should only be enabled after the fact.\n    ', '    This rule was tuned using the following baseline:\n    https://raw.githubusercontent.com/microsoft/CSS-Exchange/main/Security/Baselines/baseline_15.2.792.5.csv from\n    Microsoft. Depending on version, consult https://github.com/microsoft/CSS-Exchange/tree/main/Security/Baselines to\n    help determine normalcy.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Exchange Server UM Writing Suspicious Files,"['https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers', 'https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities']",47,6cd1779c-560f-4b68-a8f1-11009b27fe63,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",event.ingested,eql,"file where event.type == ""creation"" and
  process.name : (""UMWorkerProcess.exe"", ""umservice.exe"") and
  file.extension : (""php"", ""jsp"", ""js"", ""aspx"", ""asmx"", ""asax"", ""cfm"", ""shtml"") and
  (
    file.path : ""?:\\inetpub\\wwwroot\\aspnet_client\\*"" or

    (file.path : ""?:\\*\\Microsoft\\Exchange Server*\\FrontEnd\\HttpProxy\\owa\\auth\\*"" and
       not (file.path : ""?:\\*\\Microsoft\\Exchange Server*\\FrontEnd\\HttpProxy\\owa\\auth\\version\\*"" or
            file.name : (""errorFE.aspx"", ""expiredpassword.aspx"", ""frowny.aspx"", ""GetIdToken.htm"", ""logoff.aspx"",
                        ""logon.aspx"", ""OutlookCN.aspx"", ""RedirSuiteServiceProxy.aspx"", ""signout.aspx""))) or

    (file.path : ""?:\\*\\Microsoft\\Exchange Server*\\FrontEnd\\HttpProxy\\ecp\\auth\\*"" and
       not file.name : ""TimeoutLogoff.aspx"")
  )
",now-9m,,"## Triage and analysis

Positive hits can be checked against the established Microsoft [baselines](https://github.com/microsoft/CSS-Exchange/tree/main/Security/Baselines).

Microsoft highly recommends that the best course of action is patching, but this may not protect already compromised systems
from existing intrusions. Other tools for detecting and mitigating can be found within their Exchange support
[repository](https://github.com/microsoft/CSS-Exchange/tree/main/Security)


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
393,2021/03/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,"['Elastic', 'Austin Songer']","Identifies suspicious processes being spawned by the Microsoft Exchange Server Unified Messaging (UM) service. This
activity has been observed exploiting CVE-2021-26857.
","['    Legitimate processes may be spawned from the Microsoft Exchange Server Unified Messaging (UM) service. If known\n    processes are causing false positives, they can be exempted from the rule.\n    ']","['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Exchange Server UM Spawning Suspicious Processes,"['https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers', 'https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities']",47,483c4daf-b0c6-49e0-adf3-0bfa93231d6b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : (""UMService.exe"", ""UMWorkerProcess.exe"") and
    not process.executable :
              (""?:\\Windows\\System32\\werfault.exe"",
               ""?:\\Windows\\System32\\wermgr.exe"",
               ""?:\\Program Files\\Microsoft\\Exchange Server\\V??\\Bin\\UMWorkerProcess.exe"",
               ""D:\\Exchange 2016\\Bin\\UMWorkerProcess.exe"",
               ""E:\\ExchangeServer\\Bin\\UMWorkerProcess.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
394,2021/03/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious processes being spawned by the Microsoft Exchange Server worker process (w3wp). This activity may
indicate exploitation activity or access to an existing web shell backdoor.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Microsoft Exchange Worker Spawning Suspicious Processes,"['https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers', 'https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities', 'https://discuss.elastic.co/t/detection-and-response-for-hafnium-activity/266289']",73,f81ee52c-297e-46d9-9205-07e66931df26,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""w3wp.exe"" and process.parent.args : ""MSExchange*AppPool"" and
  (process.name : (""cmd.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") or
  process.pe.original_file_name in (""cmd.exe"", ""powershell.exe"", ""pwsh.dll"", ""powershell_ise.exe""))
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
395,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, Excel).
These child processes are often launched during exploitation of Office applications or from documents with malicious
macros.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious MS Office Child Process,,47,a624863f-a70d-417f-a7d2-7a404638d47f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : (""eqnedt32.exe"", ""excel.exe"", ""fltldr.exe"", ""msaccess.exe"", ""mspub.exe"", ""powerpnt.exe"", ""winword.exe"", ""outlook.exe"") and
  process.name : (""Microsoft.Workflow.Compiler.exe"", ""arp.exe"", ""atbroker.exe"", ""bginfo.exe"", ""bitsadmin.exe"", ""cdb.exe"", ""certutil.exe"",
                ""cmd.exe"", ""cmstp.exe"", ""control.exe"", ""cscript.exe"", ""csi.exe"", ""dnx.exe"", ""dsget.exe"", ""dsquery.exe"", ""forfiles.exe"",
                ""fsi.exe"", ""ftp.exe"", ""gpresult.exe"", ""hostname.exe"", ""ieexec.exe"", ""iexpress.exe"", ""installutil.exe"", ""ipconfig.exe"",
                ""mshta.exe"", ""msxsl.exe"", ""nbtstat.exe"", ""net.exe"", ""net1.exe"", ""netsh.exe"", ""netstat.exe"", ""nltest.exe"", ""odbcconf.exe"",
                ""ping.exe"", ""powershell.exe"", ""pwsh.exe"", ""qprocess.exe"", ""quser.exe"", ""qwinsta.exe"", ""rcsi.exe"", ""reg.exe"", ""regasm.exe"",
                ""regsvcs.exe"", ""regsvr32.exe"", ""sc.exe"", ""schtasks.exe"", ""systeminfo.exe"", ""tasklist.exe"", ""tracert.exe"", ""whoami.exe"",
                ""wmic.exe"", ""wscript.exe"", ""xwizard.exe"", ""explorer.exe"", ""rundll32.exe"", ""hh.exe"", ""msdt.exe"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious MS Office Child Process

Microsoft Office (MS Office) is a suite of applications designed to help with productivity and completing common tasks on a computer.
You can create and edit documents containing text and images, work with data in spreadsheets and databases, and create
presentations and posters. As it is some of the most-used software across companies, MS Office is frequently targeted
for initial access. It also has a wide variety of capabilities that attackers can take advantage of.

This rule looks for suspicious processes spawned by MS Office programs. This is generally the result of the execution of
malicious documents.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve MS Office documents received and opened by the user that could cause this behavior. Common locations include,
but are not limited to, the Downloads and Document folders and the folder configured at the email client.
- Determine if the collected files are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
  - If the malicious file was delivered via phishing:
    - Block the email sender from sending future emails.
    - Block the malicious web pages.
    - Remove emails from the sender from mailboxes.
    - Consider improvements to the security awareness program.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
396,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious child processes of Microsoft Outlook. These child processes are often associated with spear
phishing activity.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious MS Outlook Child Process,,21,32f4675e-6c49-4ace-80f9-97c9259dca2e,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""outlook.exe"" and
  process.name : (""Microsoft.Workflow.Compiler.exe"", ""arp.exe"", ""atbroker.exe"", ""bginfo.exe"", ""bitsadmin.exe"",
                  ""cdb.exe"", ""certutil.exe"", ""cmd.exe"", ""cmstp.exe"", ""cscript.exe"", ""csi.exe"", ""dnx.exe"", ""dsget.exe"",
                  ""dsquery.exe"", ""forfiles.exe"", ""fsi.exe"", ""ftp.exe"", ""gpresult.exe"", ""hostname.exe"", ""ieexec.exe"",
                  ""iexpress.exe"", ""installutil.exe"", ""ipconfig.exe"", ""mshta.exe"", ""msxsl.exe"", ""nbtstat.exe"", ""net.exe"",
                  ""net1.exe"", ""netsh.exe"", ""netstat.exe"", ""nltest.exe"", ""odbcconf.exe"", ""ping.exe"", ""powershell.exe"",
                  ""pwsh.exe"", ""qprocess.exe"", ""quser.exe"", ""qwinsta.exe"", ""rcsi.exe"", ""reg.exe"", ""regasm.exe"",
                  ""regsvcs.exe"", ""regsvr32.exe"", ""sc.exe"", ""schtasks.exe"", ""systeminfo.exe"", ""tasklist.exe"",
                  ""tracert.exe"", ""whoami.exe"", ""wmic.exe"", ""wscript.exe"", ""xwizard.exe"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious MS Outlook Child Process

Microsoft Outlook is an email client that provides contact, email calendar, and task management features. Outlook is
widely used, either standalone or as part of the Office suite.

This rule looks for suspicious processes spawned by MS Outlook, which can be the result of the execution of malicious
documents and/or exploitation for initial access.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve recently opened files received via email and opened by the user that could cause this behavior. Common
locations include but are not limited to, the Downloads and Document folders and the folder configured at the email client.
- Determine if the collected files are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
  - If the malicious file was delivered via phishing:
    - Block the email sender from sending future emails.
    - Block the malicious web pages.
    - Remove emails from the sender from mailboxes.
    - Consider improvements to the security awareness program.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
397,2020/07/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies an unexpected process spawning from dns.exe, the process responsible for Windows DNS server services, which
may indicate activity related to remote code execution or other forms of exploitation.
","['    Werfault.exe will legitimately spawn when dns.exe crashes, but the DNS service is very stable and so this is a low\n    occurring event. Denial of Service (DoS) attempts by intentionally crashing the service will also cause werfault.exe\n    to spawn.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Child Process of dns.exe,"['https://research.checkpoint.com/2020/resolving-your-way-into-domain-admin-exploiting-a-17-year-old-bug-in-windows-dns-servers/', 'https://msrc-blog.microsoft.com/2020/07/14/july-2020-security-update-cve-2020-1350-vulnerability-in-windows-domain-name-system-dns-server/', 'https://github.com/maxpl0it/CVE-2020-1350-DoS']",73,8c37dc0e-e3ac-4c97-8aa0-cf6a9122de45,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and process.parent.name : ""dns.exe"" and
  not process.name : ""conhost.exe""
",now-9m,,"## Triage and analysis

### Investigating Unusual Child Process of dns.exe

SIGRed (CVE-2020-1350) is a wormable, critical vulnerability in the Windows DNS server that affects Windows Server
versions 2003 to 2019 and can be triggered by a malicious DNS response. Because the service is running in elevated
privileges (SYSTEM), an attacker that successfully exploits it is granted Domain Administrator rights. This can
effectively compromise the entire corporate infrastructure.

This rule looks for unusual children of the `dns.exe` process, which can indicate the exploitation of the SIGRed or a
similar remote code execution vulnerability in the DNS server.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes.
  - Any suspicious or abnormal child process spawned from dns.exe should be carefully reviewed and investigated. It's
  impossible to predict what an adversary may deploy as the follow-on process after the exploit, but built-in
  discovery/enumeration utilities should be top of mind (`whoami.exe`, `netstat.exe`, `systeminfo.exe`, `tasklist.exe`).
  - Built-in Windows programs that contain capabilities used to download and execute additional payloads should also be
  considered. This is not an exhaustive list, but ideal candidates to start out would be: `mshta.exe`, `powershell.exe`,
  `regsvr32.exe`, `rundll32.exe`, `wscript.exe`, `wmic.exe`.
  - If a denial-of-service (DoS) exploit is successful and DNS Server service crashes, be mindful of potential child processes related to
  `werfault.exe` occurring.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Investigate other alerts associated with the host during the past 48 hours.
- Check whether the server is vulnerable to CVE-2020-1350.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Reimage the host operating system or restore the compromised server to a clean state.
- Install the latest patches on systems that run Microsoft DNS Server.
- Consider the implementation of a patch management system, such as the Windows Server Update Services (WSUS).
- Run a full scan using the antimalware tool in place. This scan can reveal additional artifacts left in the system,
persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1133', 'name': 'External Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1133/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
398,2020/07/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies an unexpected file being modified by dns.exe, the process responsible for Windows DNS Server services, which
may indicate activity related to remote code execution or other forms of exploitation.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual File Modification by dns.exe,"['https://research.checkpoint.com/2020/resolving-your-way-into-domain-admin-exploiting-a-17-year-old-bug-in-windows-dns-servers/', 'https://msrc-blog.microsoft.com/2020/07/14/july-2020-security-update-cve-2020-1350-vulnerability-in-windows-domain-name-system-dns-server/']",73,c7ce36c0-32ff-4f9a-bfc2-dcb242bf99f9,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",event.ingested,eql,"file where process.name : ""dns.exe"" and event.type in (""creation"", ""deletion"", ""change"") and
  not file.name : ""dns.log""
",now-9m,,"## Triage and analysis

### Investigating Unusual File Write
Detection alerts from this rule indicate potential unusual/abnormal file writes from the DNS Server service process (`dns.exe`) after exploitation from CVE-2020-1350 (SigRed) has occurred. Here are some possible avenues of investigation:
- Post-exploitation, adversaries may write additional files or payloads to the system as additional discovery/exploitation/persistence mechanisms.
- Any suspicious or abnormal files written from `dns.exe` should be reviewed and investigated with care.

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1133', 'name': 'External Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1133/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
399,2020/10/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies a suspicious Windows explorer child process. Explorer.exe can be abused to launch malicious scripts or
executables from a trusted parent process.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Explorer Child Process,,47,9a5b4e31-6cde-4295-9ff7-6be1b8567e1b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Initial Access']",event.ingested,eql,"process where event.type == ""start"" and
  (
   process.name : (""cscript.exe"", ""wscript.exe"", ""powershell.exe"", ""rundll32.exe"", ""cmd.exe"", ""mshta.exe"", ""regsvr32.exe"") or
   process.pe.original_file_name in (""cscript.exe"", ""wscript.exe"", ""PowerShell.EXE"", ""RUNDLL32.EXE"", ""Cmd.Exe"", ""MSHTA.EXE"", ""REGSVR32.EXE"")
  ) and
  /* Explorer started via DCOM */
  process.parent.name : ""explorer.exe"" and process.parent.args : ""-Embedding"" and
  not process.parent.args:
          (
            /* Noisy CLSID_SeparateSingleProcessExplorerHost Explorer COM Class IDs   */
            ""/factory,{5BD95610-9434-43C2-886C-57852CC8A120}"",
            ""/factory,{ceff45ee-c862-41de-aee2-a022c81eda92}""
          )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1566', 'name': 'Phishing', 'reference': 'https://attack.mitre.org/techniques/T1566/', 'subtechnique': [{'id': 'T1566.001', 'name': 'Spearphishing Attachment', 'reference': 'https://attack.mitre.org/techniques/T1566/001/'}, {'id': 'T1566.002', 'name': 'Spearphishing Link', 'reference': 'https://attack.mitre.org/techniques/T1566/002/'}]}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
400,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of sc.exe to create, modify, or start services on remote hosts. This could be indicative of adversary
lateral movement but will be noisy if commonly done by admins.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Service Command Lateral Movement,,21,d61cbcf8-1bc1-4cff-85ba-e7b21c5beedc,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by process.entity_id with maxspan = 1m
  [process where event.type == ""start"" and
     (process.name : ""sc.exe"" or process.pe.original_file_name : ""sc.exe"") and
      process.args : ""\\\\*"" and process.args : (""binPath=*"", ""binpath=*"") and
      process.args : (""create"", ""config"", ""failure"", ""start"")]
  [network where process.name : ""sc.exe"" and destination.ip != ""127.0.0.1""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1569', 'name': 'System Services', 'reference': 'https://attack.mitre.org/techniques/T1569/', 'subtechnique': [{'id': 'T1569.002', 'name': 'Service Execution', 'reference': 'https://attack.mitre.org/techniques/T1569/002/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
401,2020/11/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the use of Distributed Component Object Model (DCOM) to execute commands from a remote host, which are
launched via the HTA Application COM Object. This behavior may indicate an attacker abusing a DCOM application to move
laterally while attempting to evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Incoming DCOM Lateral Movement via MSHTA,['https://codewhitesec.blogspot.com/2018/07/lethalhta.html'],73,622ecb68-fa81-4601-90b5-f8cd661e4520,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence with maxspan=1m
  [process where event.type == ""start"" and
     process.name : ""mshta.exe"" and process.args : ""-Embedding""
  ] by host.id, process.entity_id
  [network where event.type == ""start"" and process.name : ""mshta.exe"" and
     network.direction : (""incoming"", ""ingress"") and network.transport == ""tcp"" and
     source.port > 49151 and destination.port > 49151 and source.ip != ""127.0.0.1"" and source.ip != ""::1""
  ] by host.id, process.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.003', 'name': 'Distributed Component Object Model', 'reference': 'https://attack.mitre.org/techniques/T1021/003/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'System Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.005', 'name': 'Mshta', 'reference': 'https://attack.mitre.org/techniques/T1218/005/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
402,2020/11/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the use of Distributed Component Object Model (DCOM) to run commands from a remote host, which are launched
via the MMC20 Application COM Object. This behavior may indicate an attacker abusing a DCOM application to move
laterally.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Incoming DCOM Lateral Movement with MMC,['https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/'],73,51ce96fb-9e52-4dad-b0ba-99b54440fc9a,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by host.id with maxspan=1m
 [network where event.type == ""start"" and process.name : ""mmc.exe"" and source.port >= 49152 and
 destination.port >= 49152 and source.ip != ""127.0.0.1"" and source.ip != ""::1"" and
  network.direction : (""incoming"", ""ingress"") and network.transport == ""tcp""
 ] by process.entity_id
 [process where event.type == ""start"" and process.parent.name : ""mmc.exe""
 ] by process.parent.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.003', 'name': 'Distributed Component Object Model', 'reference': 'https://attack.mitre.org/techniques/T1021/003/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
403,2020/11/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies use of Distributed Component Object Model (DCOM) to run commands from a remote host, which are launched via
the ShellBrowserWindow or ShellWindows Application COM Object. This behavior may indicate an attacker abusing a DCOM
application to stealthily move laterally.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Incoming DCOM Lateral Movement with ShellBrowserWindow or ShellWindows,['https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/'],47,8f919d4b-a5af-47ca-a594-6be59cd924a4,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by host.id with maxspan=5s
 [network where event.type == ""start"" and process.name : ""explorer.exe"" and
  network.direction : (""incoming"", ""ingress"") and network.transport == ""tcp"" and
  source.port > 49151 and destination.port > 49151 and source.ip != ""127.0.0.1"" and source.ip != ""::1""
 ] by process.entity_id
 [process where event.type == ""start"" and
  process.parent.name : ""explorer.exe""
 ] by process.parent.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.003', 'name': 'Distributed Component Object Model', 'reference': 'https://attack.mitre.org/techniques/T1021/003/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
404,2021/03/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies NullSessionPipe registry modifications that specify which pipes can be accessed anonymously. This could
be indicative of adversary lateral movement preparation by making the added pipe available to everyone.
",,['logs-endpoint.events.*'],eql,Elastic License v2,NullSessionPipe Registry Modification,"['https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-access-restrict-anonymous-access-to-named-pipes-and-shares']",47,ddab1f5f-7089-44f5-9fda-de5b11322e77,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"registry where
registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\services\\LanmanServer\\Parameters\\NullSessionPipes"" and
registry.data.strings != null
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
405,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies unexpected processes making network connections over port 445. Windows File Sharing is typically implemented
over Server Message Block (SMB), which communicates between hosts using port 445. When legitimate, these network
connections are established by the kernel. Processes making 445/tcp connections may be port scanners, exploits, or
suspicious user-level processes moving laterally.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Direct Outbound SMB Connection,,47,c82c7d8f-fb9e-4874-a4bd-fd9e3f9becf1,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'has_guide']",,eql,"sequence by process.entity_id
  [process where event.type == ""start"" and host.os.name == ""Windows"" and process.pid != 4 and
   not (process.executable : ""D:\\EnterpriseCare\\tools\\jre.1\\bin\\java.exe"" and process.args : ""com.emeraldcube.prism.launcher.Invoker"") and
   not (process.executable : ""C:\\Docusnap 11\\Tools\\nmap\\nmap.exe"" and process.args : ""smb-os-discovery.nse"") and
   not process.executable :
              (""?:\\Program Files\\SentinelOne\\Sentinel Agent *\\Ranger\\SentinelRanger.exe"",
               ""?:\\Program Files\\Ivanti\\Security Controls\\ST.EngineHost.exe"",
               ""?:\\Program Files (x86)\\Fortinet\\FSAE\\collectoragent.exe"",
               ""?:\\Program Files (x86)\\Nmap\\nmap.exe"",
               ""?:\\Program Files\\Azure Advanced Threat Protection Sensor\\*\\Microsoft.Tri.Sensor.exe"",
               ""?:\\Program Files\\CloudMatters\\auvik\\AuvikService-release-*\\AuvikService.exe"",
               ""?:\\Program Files\\uptime software\\uptime\\UptimeDataCollector.exe"",
               ""?:\\Program Files\\CloudMatters\\auvik\\AuvikAgentService.exe"",
               ""?:\\Program Files\\Rumble\\rumble-agent-*.exe"")]
  [network where destination.port == 445 and process.pid != 4 and
     not cidrmatch(destination.ip, ""127.0.0.1"", ""::1"")]
",now-9m,,"## Triage and analysis

### Investigating Direct Outbound SMB Connection

This rule looks for unexpected processes making network connections over port 445. Windows file sharing is typically
implemented over Server Message Block (SMB), which communicates between hosts using port 445. When legitimate, these
network connections are established by the kernel (PID 4). Occurrences of non-system processes using this port can indicate
port scanners, exploits, and tools used to move laterally on the environment.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination
of user and command line conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Remote Services', 'id': 'T1021', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'name': 'SMB/Windows Admin Shares', 'id': 'T1021.002', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
406,2020/07/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Specially crafted DNS requests can manipulate a known overflow vulnerability in some Windows DNS servers, resulting in
Remote Code Execution (RCE) or a Denial of Service (DoS) from crashing the service.
","['    Environments that leverage DNS responses over 60k bytes will result in false positives - if this traffic is\n    predictable and expected, it should be filtered out. Additionally, this detection rule could be triggered by an\n    authorized vulnerability scan or compromise assessment.\n    ']","['packetbeat-*', 'filebeat-*']",kuery,Elastic License v2,Abnormally Large DNS Response,"['https://research.checkpoint.com/2020/resolving-your-way-into-domain-admin-exploiting-a-17-year-old-bug-in-windows-dns-servers/', 'https://msrc-blog.microsoft.com/2020/07/14/july-2020-security-update-cve-2020-1350-vulnerability-in-windows-domain-name-system-dns-server/', 'https://github.com/maxpl0it/CVE-2020-1350-DoS']",47,11013227-0301-4a8c-b150-4db924484475,medium,"['Elastic', 'Network', 'Threat Detection', 'Lateral Movement', 'has_guide']",event.ingested,query,"event.category:(network or network_traffic) and destination.port:53 and
  (event.dataset:zeek.dns or type:dns or event.type:connection) and network.bytes > 60000
",,,"## Triage and analysis

### Investigating Abnormally Large DNS Response

Detection alerts from this rule indicate possible anomalous activity around large byte DNS responses from a Windows DNS
server. This detection rule was created based on activity represented in exploitation of vulnerability (CVE-2020-1350)
also known as [SigRed](https://www.elastic.co/blog/detection-rules-for-sigred-vulnerability) during July 2020.

#### Possible investigation steps

- This specific rule is sourced from network log activity such as DNS or network level data. It's important to validate
the source of the incoming traffic and determine if this activity has been observed previously within an environment.
- Activity can be further investigated and validated by reviewing any associated Intrusion Detection Signatures (IDS) alerts.
- Further examination can include a review of the `dns.question_type` network fieldset with a protocol analyzer, such as
Zeek, Packetbeat, or Suricata, for `SIG` or `RRSIG` data.
- Validate the patch level and OS of the targeted DNS server to validate the observed activity was not large-scale
internet vulnerability scanning.
- Validate that the source of the network activity was not from an authorized vulnerability scan or compromise assessment.

#### False positive analysis

- Based on this rule, which looks for a threshold of 60k bytes, it is possible for activity to be generated under 65k bytes
and related to legitimate behavior.  In packet capture files received by the [SANS Internet Storm Center](https://isc.sans.edu/forums/diary/PATCH+NOW+SIGRed+CVE20201350+Microsoft+DNS+Server+Vulnerability/26356/), byte responses
were all observed as greater than 65k bytes.
- This activity can be triggered by compliance/vulnerability scanning or compromise assessment; it's important to
determine the source of the activity and potentially allowlist the source host.

### Related rules

- Unusual Child Process of dns.exe - 8c37dc0e-e3ac-4c97-8aa0-cf6a9122de45
- Unusual File Modification by dns.exe - c7ce36c0-32ff-4f9a-bfc2-dcb242bf99f9

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Ensure that you have deployed the latest Microsoft [Security Update](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1350)
(Monthly Rollup or Security Only) and restarted the patched machines. If unable to patch immediately, Microsoft [released](https://support.microsoft.com/en-us/help/4569509/windows-dns-server-remote-code-execution-vulnerability)
a registry-based workaround that doesn’t require a restart. This can be used as a temporary solution before the patch is applied.
- Maintain backups of your critical systems to aid in quick recovery.
- Perform routine vulnerability scans of your systems, monitor [CISA advisories](https://us-cert.cisa.gov/ncas/current-activity) and patch identified vulnerabilities.
- If you observe a true positive, implement a remediation plan and monitor host-based artifacts for additional post-exploitation behavior.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1210', 'name': 'Exploitation of Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1210/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
407,2021/04/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the modification of the Remote Desktop Protocol (RDP) Shadow registry or the execution of processes
indicative of an active RDP shadowing session. An adversary may abuse the RDP Shadowing feature to spy on or control
other users active RDP sessions.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Remote Desktop Shadowing Activity,"['https://bitsadm.in/blog/spying-on-users-using-rdp-shadowing', 'https://swarm.ptsecurity.com/remote-desktop-services-shadowing/']",73,c57f8579-e2a5-4804-847f-f2732edc5156,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"/* Identifies the modification of RDP Shadow registry or
  the execution of processes indicative of active shadow RDP session */

any where
  (event.category == ""registry"" and
     registry.path : ""HKLM\\Software\\Policies\\Microsoft\\Windows NT\\Terminal Services\\Shadow""
  ) or
  (event.category == ""process"" and
     (process.name : (""RdpSaUacHelper.exe"", ""RdpSaProxy.exe"") and process.parent.name : ""svchost.exe"") or
     (process.pe.original_file_name : ""mstsc.exe"" and process.args : ""/shadow:*"")
  )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
408,2020/11/10,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the creation or change of a Windows executable file over network shares. Adversaries may transfer tools or
other files between systems in a compromised environment.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Potential Lateral Tool Transfer via SMB Share,,47,58bc134c-e8d2-4291-a552-b4b3e537c60b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'has_guide']",,eql,"sequence by host.id with maxspan=30s
  [network where event.type == ""start"" and process.pid == 4 and destination.port == 445 and
   network.direction : (""incoming"", ""ingress"") and
   network.transport == ""tcp"" and source.ip != ""127.0.0.1"" and source.ip != ""::1""
  ] by process.entity_id
  /* add more executable extensions here if they are not noisy in your environment */
  [file where event.type in (""creation"", ""change"") and process.pid == 4 and file.extension : (""exe"", ""dll"", ""bat"", ""cmd"")] by process.entity_id
",now-9m,,"## Triage and analysis

### Investigating Potential Lateral Tool Transfer via SMB Share

Adversaries can use network shares to host tooling to support the compromise of other hosts in the environment. These tools
can include discovery utilities, credential dumpers, malware, etc. Attackers can also leverage file shares that employees
frequently access to host malicious files to gain a foothold in other machines.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve the created file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity can happen legitimately. Consider adding exceptions if it is expected and noisy in your environment.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Review the privileges needed to write to the network share and restrict write access as needed.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1570', 'name': 'Lateral Tool Transfer', 'reference': 'https://attack.mitre.org/techniques/T1570/'}, {'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
409,2020/11/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies execution from the Remote Desktop Protocol (RDP) shared mountpoint tsclient on the target host. This may
indicate a lateral movement attempt.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Execution via TSClient Mountpoint,['https://posts.specterops.io/revisiting-remote-desktop-lateral-movement-8fb905cb46c3'],73,4fe9d835-40e1-452d-8230-17c147cafad8,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"process where event.type == ""start"" and process.executable : ""\\Device\\Mup\\tsclient\\*.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
410,2020/11/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the execution of a file that was created by the virtual system process. This may indicate lateral movement
via network file shares.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Remote Execution via File Shares,['https://blog.menasec.net/2020/08/new-trick-to-detect-lateral-movement.html'],47,ab75c24b-2502-43a0-bf7c-e60e662c811e,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence with maxspan=1m
  [file where event.type in (""creation"", ""change"") and process.pid == 4 and file.extension : ""exe""] by host.id, file.path
  [process where event.type == ""start""] by host.id, process.executable
",now-9m,,"## Triage and analysis

### Investigating Remote Execution via File Shares

Adversaries can use network shares to host tooling to support the compromise of other hosts in the environment. These
tools can include discovery utilities, credential dumpers, malware, etc.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Review adjacent login events (e.g., 4624) in the alert timeframe to identify the account used to perform this action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled tasks creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity can happen legitimately. Consider adding exceptions if it is expected and noisy in your environment.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Review the privileges needed to write to the network share and restrict write access as needed.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
411,2020/11/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies remote execution via Windows Remote Management (WinRM) remote shell on a target host. This could be an
indication of lateral movement.
","[""    WinRM is a dual-use protocol that can be used for benign or malicious activity. It's important to baseline your\n    environment to determine the amount of noise to expect from this tool.\n    ""]","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Incoming Execution via WinRM Remote Shell,,47,1cd01db9-be24-4bef-8e7c-e923f0ff78ab,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by host.id with maxspan=30s
   [network where process.pid == 4 and network.direction : (""incoming"", ""ingress"") and
    destination.port in (5985, 5986) and network.protocol == ""http"" and source.ip != ""127.0.0.1"" and source.ip != ""::1""
   ]
   [process where event.type == ""start"" and process.parent.name : ""winrshost.exe"" and not process.name : ""conhost.exe""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
412,2020/11/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies processes executed via Windows Management Instrumentation (WMI) on a remote host. This could be indicative of
adversary lateral movement, but could be noisy if administrators use WMI to remotely manage hosts.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,WMI Incoming Lateral Movement,,47,f3475224-b179-4f78-8877-c2bd64c26b88,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by host.id with maxspan = 2s

 /* Accepted Incoming RPC connection by Winmgmt service */

  [network where process.name : ""svchost.exe"" and network.direction : (""incoming"", ""ingress"") and
   source.ip != ""127.0.0.1"" and source.ip != ""::1"" and source.port >= 49152 and destination.port >= 49152
  ]

  /* Excluding Common FPs Nessus and SCCM */

  [process where event.type == ""start"" and process.parent.name : ""WmiPrvSE.exe"" and
   not process.args : (""C:\\windows\\temp\\nessus_*.txt"", 
                       ""C:\\windows\\TEMP\\nessus_*.TMP"", 
                       ""C:\\Windows\\CCM\\SystemTemp\\*"", 
                       ""C:\\Windows\\CCMCache\\*"",
                       ""C:\\CCM\\Cache\\*"")
   ]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1047', 'name': 'Windows Management Instrumentation', 'reference': 'https://attack.mitre.org/techniques/T1047/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
413,2020/11/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the use of net.exe to mount a WebDav or hidden remote share. This may indicate lateral movement or
preparation for data exfiltration.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Mounting Hidden or WebDav Remote Shares,,47,c4210e1c-64f2-4f48-b67e-b5a8ffe3aa14,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"process where event.type == ""start"" and
 ((process.name : ""net.exe"" or process.pe.original_file_name == ""net.exe"") or ((process.name : ""net1.exe"" or process.pe.original_file_name == ""net1.exe"") and
 not process.parent.name : ""net.exe"")) and
 process.args : ""use"" and
 /* including hidden and webdav based online shares such as onedrive  */
 process.args : (""\\\\*\\*$*"", ""\\\\*@SSL\\*"", ""http*"") and
 /* excluding shares deletion operation */
 not process.args : ""/d*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
414,2020/11/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies remote execution via Windows PowerShell remoting. Windows PowerShell remoting allows a user to run any Windows
PowerShell command on one or more remote computers. This could be an indication of lateral movement.
","[""    PowerShell remoting is a dual-use protocol that can be used for benign or malicious activity. It's important to\n    baseline your environment to determine the amount of noise to expect from this tool.\n    ""]","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Incoming Execution via PowerShell Remoting,['https://docs.microsoft.com/en-us/powershell/scripting/learn/remoting/running-remote-commands?view=powershell-7.1'],47,2772264c-6fb9-4d9d-9014-b416eed21254,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence by host.id with maxspan = 30s
   [network where network.direction : (""incoming"", ""ingress"") and destination.port in (5985, 5986) and
    network.protocol == ""http"" and source.ip != ""127.0.0.1"" and source.ip != ""::1""
   ]
   [process where event.type == ""start"" and process.parent.name : ""wsmprovhost.exe"" and not process.name : ""conhost.exe""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
415,2020/11/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies registry write modifications to enable Remote Desktop Protocol (RDP) access. This could be indicative of
adversary lateral movement preparation.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,RDP Enabled via Registry,,47,58aa72ca-d968-4f34-b9f7-bea51d75eb50,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'has_guide']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\Control\\Terminal Server\\fDenyTSConnections"" and
  registry.data.strings : (""0"", ""0x00000000"") and not (process.name : ""svchost.exe"" and user.domain == ""NT AUTHORITY"") and
  not process.executable : ""C:\\Windows\\System32\\SystemPropertiesRemote.exe""
",now-9m,,"## Triage and analysis

### Investigating RDP Enabled via Registry

Microsoft Remote Desktop Protocol (RDP) is a proprietary Microsoft protocol that enables remote connections to other
computers, typically over TCP port 3389.

Attackers can use RDP to conduct their actions interactively. Ransomware operators frequently use RDP to access
victim servers, often using privileged accounts.

This rule detects modification of the fDenyTSConnections registry key to the value `0`, which specifies that remote
desktop connections are enabled. Attackers can abuse remote registry, use psexec, etc., to enable RDP and move laterally.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the user to check if they are aware of the operation.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check whether it makes sense to enable RDP to this host, given its role in the environment.
- Check if the host is directly exposed to the internet.
- Check whether privileged accounts accessed the host shortly after the modification.
- Review network events within a short timespan of this alert for incoming RDP connection attempts.

### False positive analysis

- This mechanism can be used legitimately. Check whether the user should be performing this kind of activity, whether
they are aware of it, whether RDP should be open, and whether the action exposes the environment to unnecessary risks.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If RDP is needed, make sure to secure it using firewall rules:
  - Allowlist RDP traffic to specific trusted hosts.
  - Restrict RDP logins to authorized non-administrator accounts, where possible.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.001', 'name': 'Remote Desktop Protocol', 'reference': 'https://attack.mitre.org/techniques/T1021/001/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
416,2020/11/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies potential behavior of SharpRDP, which is a tool that can be used to perform authenticated command execution
against a remote target via Remote Desktop Protocol (RDP) for the purposes of lateral movement.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Potential SharpRDP Behavior,"['https://posts.specterops.io/revisiting-remote-desktop-lateral-movement-8fb905cb46c3', 'https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Lateral%20Movement/LM_sysmon_3_12_13_1_SharpRDP.evtx']",73,8c81e506-6e82-4884-9b9a-75d3d252f967,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"/* Incoming RDP followed by a new RunMRU string value set to cmd, powershell, taskmgr or tsclient, followed by process execution within 1m */

sequence by host.id with maxspan=1m
  [network where event.type == ""start"" and process.name : ""svchost.exe"" and destination.port == 3389 and
   network.direction : (""incoming"", ""ingress"") and network.transport == ""tcp"" and
   source.ip != ""127.0.0.1"" and source.ip != ""::1""
  ]

  [registry where process.name : ""explorer.exe"" and
   registry.path : (""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU\\*"") and
   registry.data.strings : (""cmd.exe*"", ""powershell.exe*"", ""taskmgr*"", ""\\\\tsclient\\*.exe\\*"")
  ]

  [process where event.type == ""start"" and
   (process.parent.name : (""cmd.exe"", ""powershell.exe"", ""taskmgr.exe"") or process.args : (""\\\\tsclient\\*.exe"")) and
   not process.name : ""conhost.exe""
   ]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.001', 'name': 'Remote Desktop Protocol', 'reference': 'https://attack.mitre.org/techniques/T1021/001/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
417,2020/11/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies a remote file copy attempt to a hidden network share. This may indicate lateral movement or data staging
activity.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Remote File Copy to a Hidden Share,,47,fa01341d-6662-426b-9d0c-6d81e33c8a9d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : (""cmd.exe"", ""powershell.exe"", ""robocopy.exe"", ""xcopy.exe"") and
  process.args : (""copy*"", ""move*"", ""cp"", ""mv"") and process.args : ""*$*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/', 'subtechnique': [{'id': 'T1021.002', 'name': 'SMB/Windows Admin Shares', 'reference': 'https://attack.mitre.org/techniques/T1021/002/'}]}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
418,2020/11/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies remote execution of Windows services over remote procedure call (RPC). This could be indicative of lateral
movement, but will be noisy if commonly done by administrators.""
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Remotely Started Services via RPC,['https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-scmr/705b624a-13de-43cc-b8a2-99573da3635f'],47,aa9a274d-6b53-424d-ac5e-cb8ca4251650,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"sequence with maxspan=1s
   [network where process.name : ""services.exe"" and
      network.direction : (""incoming"", ""ingress"") and network.transport == ""tcp"" and
      source.port >= 49152 and destination.port >= 49152 and source.ip != ""127.0.0.1"" and source.ip != ""::1""
   ] by host.id, process.entity_id

   [process where event.type == ""start"" and process.parent.name : ""services.exe"" and 
       not (process.name : ""svchost.exe"" and process.args : ""tiledatamodelsvc"") and
       not (process.name : ""msiexec.exe"" and process.args : ""/V"") and
       not process.executable :
               (""?:\\Windows\\ADCR_Agent\\adcrsvc.exe"",
                ""?:\\Windows\\System32\\VSSVC.exe"",
                ""?:\\Windows\\servicing\\TrustedInstaller.exe"",
                ""?:\\Windows\\System32\\svchost.exe"",
                ""?:\\Program Files (x86)\\*.exe"",
                ""?:\\Program Files\\*.exe"",
                ""?:\\Windows\\PSEXESVC.EXE"",
                ""?:\\Windows\\System32\\sppsvc.exe"",
                ""?:\\Windows\\System32\\wbem\\WmiApSrv.exe"",
                ""?:\\WINDOWS\\RemoteAuditService.exe"",
                ""?:\\Windows\\VeeamVssSupport\\VeeamGuestHelper.exe"",
                ""?:\\Windows\\VeeamLogShipper\\VeeamLogShipper.exe"",
                ""?:\\Windows\\CAInvokerService.exe"",
                ""?:\\Windows\\System32\\upfc.exe"",
                ""?:\\Windows\\AdminArsenal\\PDQ*.exe"",
                ""?:\\Windows\\System32\\vds.exe"",
                ""?:\\Windows\\Veeam\\Backup\\VeeamDeploymentSvc.exe"",
                ""?:\\Windows\\ProPatches\\Scheduler\\STSchedEx.exe"",
                ""?:\\Windows\\System32\\certsrv.exe"",
                ""?:\\Windows\\eset-remote-install-service.exe"",
                ""?:\\Pella Corporation\\Pella Order Management\\GPAutoSvc.exe"",
                ""?:\\Pella Corporation\\OSCToGPAutoService\\OSCToGPAutoSvc.exe"",
                ""?:\\Pella Corporation\\Pella Order Management\\GPAutoSvc.exe"",
                ""?:\\Windows\\SysWOW64\\NwxExeSvc\\NwxExeSvc.exe"",
                ""?:\\Windows\\System32\\taskhostex.exe"")
   ] by host.id, process.parent.entity_id
",now-9m,,"## Triage and analysis

### Investigating Remotely Started Services via RPC

The Service Control Manager Remote Protocol is a client/server protocol used for configuring and controlling service
programs running on a remote computer. A remote service management session begins with the client initiating the
connection request to the server. If the server grants the request, the connection is established. The client can then
make multiple requests to modify, query the configuration, or start and stop services on the server by using the same
session until the session is terminated.

This rule detects the remote creation or start of a service by correlating a `services.exe` network connection and the
spawn of a child process.

#### Possible investigation steps

- Review login events (e.g., 4624) in the alert timeframe to identify the account used to perform this action. Use the
`source.address` field to help identify the source system.
- Review network events from the source system using the source port identified on the alert and try to identify the
program used to initiate the action.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Validate if the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- Remote management software like SCCM may trigger this rule. If noisy on your environment, consider adding exceptions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
419,2022/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Identifies a remote logon followed by a scheduled task creation on the target host. This could be indicative of
adversary lateral movement.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Remote Logon followed by Scheduled Task Creation,,47,9c865691-5599-447a-bac9-b3f2df5f9a9d,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",,eql,"/* Network Logon followed by Scheduled Task creation  */

sequence by host.id with maxspan=1m
  [authentication where event.action == ""logged-in"" and
   winlog.logon.type == ""Network"" and event.outcome == ""success"" and
   not user.name == ""ANONYMOUS LOGON"" and not winlog.event_data.SubjectUserName : ""*$"" and
   not user.domain == ""NT AUTHORITY"" and source.ip != ""127.0.0.1"" and source.ip !=""::1""] by winlog.event_data.TargetLogonId

  [iam where event.action == ""scheduled-task-created""] by winlog.event_data.SubjectLogonId
",now-9m,,"## Triage and analysis

### Investigating Remote Scheduled Task Creation

[Scheduled tasks](https://docs.microsoft.com/en-us/windows/win32/taskschd/about-the-task-scheduler) are a great mechanism
for persistence and program execution. These features can be used remotely for a variety of legitimate reasons, but at
the same time used by malware and adversaries. When investigating scheduled tasks that were set up remotely, one of the
first steps should be to determine the original intent behind the configuration and to verify if the activity is tied to
benign behavior such as software installation or any kind of network administrator work. One objective for these alerts
is to understand the configured action within the scheduled task. This is captured within the registry event data for
this rule and can be base64 decoded to view the value.

#### Possible investigation steps

- Review the TaskContent value to investigate the task configured action.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate software
installations.
- Further examination should include review of host-based artifacts and network logs from around when the scheduled task
was created, on both the source and target machines.

### False positive analysis

- There is a high possibility of benign activity tied to the creation of remote scheduled tasks as it is a general feature
within Windows and used for legitimate purposes for a wide range of activity. Any kind of context should be found to
further understand the source of the activity and determine the intent based on the scheduled task's contents.

### Related rules

- Service Command Lateral Movement - d61cbcf8-1bc1-4cff-85ba-e7b21c5beedc
- Remotely Started Services via RPC - aa9a274d-6b53-424d-ac5e-cb8ca4251650
- Remote Scheduled Task Creation - 954ee7c8-5437-49ae-b2d6-2960883898e9

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Remove scheduled task and any other related artifacts.
- Review privileged account management and user account management settings. Consider implementing group policy object (GPO) policies to further
restrict activity, or configuring settings that only allow administrators to create remote scheduled tasks.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
420,2020/11/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],Identifies remote scheduled task creations on a target host. This could be indicative of adversary lateral movement.,,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Remote Scheduled Task Creation,,47,954ee7c8-5437-49ae-b2d6-2960883898e9,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement', 'has_guide']",,eql,"/* Task Scheduler service incoming connection followed by TaskCache registry modification  */

sequence by host.id, process.entity_id with maxspan = 1m
   [network where process.name : ""svchost.exe"" and
   network.direction : (""incoming"", ""ingress"") and source.port >= 49152 and destination.port >= 49152 and
   source.ip != ""127.0.0.1"" and source.ip != ""::1""
   ]
   [registry where registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\*\\Actions""]
",now-9m,,"## Triage and analysis

### Investigating Remote Scheduled Task Creation

[Scheduled tasks](https://docs.microsoft.com/en-us/windows/win32/taskschd/about-the-task-scheduler) are a great mechanism
for persistence and program execution. These features can be used remotely for a variety of legitimate reasons, but at
the same time used by malware and adversaries. When investigating scheduled tasks that were set up remotely, one of the
first steps should be to determine the original intent behind the configuration and to verify if the activity is tied to
benign behavior such as software installation or any kind of network administrator work. One objective for these alerts
is to understand the configured action within the scheduled task. This is captured within the registry event data for
this rule and can be base64 decoded to view the value.

#### Possible investigation steps

- Review the base64 encoded tasks actions registry value to investigate the task configured action.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate software
installations.
- Further examination should include review of host-based artifacts and network logs from around when the scheduled task
was created, on both the source and target machines.

### False positive analysis

- There is a high possibility of benign activity tied to the creation of remote scheduled tasks as it is a general feature
within Windows and used for legitimate purposes for a wide range of activity. Any kind of context should be found to
further understand the source of the activity and determine the intent based on the scheduled task's contents.

### Related rules

- Service Command Lateral Movement - d61cbcf8-1bc1-4cff-85ba-e7b21c5beedc
- Remotely Started Services via RPC - aa9a274d-6b53-424d-ac5e-cb8ca4251650

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Remove scheduled task and any other related artifacts.
- Review privileged account management and user account management settings. Consider implementing group policy object (GPO) policies to further
restrict activity, or configuring settings that only allow administrators to create remote scheduled tasks.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
421,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies Service Control (sc.exe) spawning from script interpreter processes to create, modify, or start services.
This could be indicative of adversary lateral movement but will be noisy if commonly done by admins.
",,"['logs-endpoint.events.*', 'logs-system.*', 'winlogbeat-*']",eql,Elastic License v2,Service Control Spawned via Script Interpreter,,21,e8571d5f-bea1-46c2-9f56-998de2d3ed95,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"/* This rule is not compatible with Sysmon due to user.id issues */

process where event.type == ""start"" and
  (process.name : ""sc.exe"" or process.pe.original_file_name == ""sc.exe"") and
  process.parent.name : (""cmd.exe"", ""wscript.exe"", ""rundll32.exe"", ""regsvr32.exe"",
                         ""wmic.exe"", ""mshta.exe"",""powershell.exe"", ""pwsh.exe"") and
  process.args:(""config"", ""create"", ""start"", ""delete"", ""stop"", ""pause"") and
  /* exclude SYSTEM SID - look for service creations by non-SYSTEM user */
  not user.id : ""S-1-5-18""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
422,2020/11/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious Image Loading of the Remote Desktop Services ActiveX Client (mstscax), this may indicate the
presence of RDP lateral movement capability.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Suspicious RDP ActiveX Client Loaded,['https://posts.specterops.io/revisiting-remote-desktop-lateral-movement-8fb905cb46c3'],47,71c5cb27-eca5-4151-bb47-64bc3f883270,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
 (dll.name : ""mstscax.dll"" or file.name : ""mstscax.dll"") and
   /* depending on noise in your env add here extra paths  */
  process.executable :
    (
    ""C:\\Windows\\*"",
    ""C:\\Users\\Public\\*"",
    ""C:\\Users\\Default\\*"",
    ""C:\\Intel\\*"",
    ""C:\\PerfLogs\\*"",
    ""C:\\ProgramData\\*"",
    ""\\Device\\Mup\\*"",
    ""\\\\*""
    ) and
    /* add here FPs */
  not process.executable : (""C:\\Windows\\System32\\mstsc.exe"", ""C:\\Windows\\SysWOW64\\mstsc.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}]",,,,,,,,,,,,,,,,,,,
423,2020/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies suspicious file creations in the startup folder of a remote system. An adversary could abuse this to move
laterally by dropping a malicious script or executable that will be executed after a reboot or user logon.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Lateral Movement via Startup Folder,['https://www.mdsec.co.uk/2017/06/rdpinception/'],73,25224a80-5a4a-4b8a-991e-6ab390465c4f,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Lateral Movement']",event.ingested,eql,"file where event.type in (""creation"", ""change"") and

 /* via RDP TSClient mounted share or SMB */
  (process.name : ""mstsc.exe"" or process.pid == 4) and

   file.path : (""?:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*"",
                ""?:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
424,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],Detects writing executable files that will be automatically launched by Adobe on launch.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Adobe Hijack Persistence,['https://twitter.com/pabraeken/status/997997818362155008'],21,2bf78aa2-9c56-48de-b139-f169bf99cf86,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"file where event.type == ""creation"" and
  file.path : (""?:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroCEF\\RdrCEF.exe"",
               ""?:\\Program Files\\Adobe\\Acrobat Reader DC\\Reader\\AcroCEF\\RdrCEF.exe"") and
  not process.name : ""msiexec.exe""
",now-9m,,"## Triage and analysis

### Investigating Adobe Hijack Persistence

Attackers can replace the `RdrCEF.exe` executable with their own to maintain their access, which will be launched
whenever Adobe Acrobat Reader is executed.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.010', 'name': 'Services File Permissions Weakness', 'reference': 'https://attack.mitre.org/techniques/T1574/010/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
425,2022/01/31,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects modifications in the AdminSDHolder object. Attackers can abuse the SDProp process to implement a persistent
backdoor in Active Directory. SDProp compares the permissions on protected objects with those defined on the
AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on
the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, regaining their
Administrative Privileges.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,AdminSDHolder Backdoor,"['https://adsecurity.org/?p=1906', 'https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-c--protected-accounts-and-groups-in-active-directory#adminsdholder']",73,6e9130a5-9be6-48e5-943a-9628bfc74b18,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Active Directory']",event.ingested,query,"event.action:""Directory Service Changes"" and event.code:5136 and winlog.event_data.ObjectDN:CN=AdminSDHolder,CN=System*
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'reference': 'https://attack.mitre.org/tactics/TA0003/', 'name': 'Persistence'}}]",,,,,,,,,,,,,,,,,,,
426,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects attempts to maintain persistence by creating registry keys using AppCert DLLs. AppCert DLLs are loaded by every
process using the common API functions to create processes.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Registry Persistence via AppCert DLL,,47,513f0ffd-b317-4b9c-9494-92ce861f22c7,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where
/* uncomment once stable length(bytes_written_string) > 0 and */
  registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\Control\\Session Manager\\AppCertDLLs\\*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.009', 'name': 'AppCert DLLs', 'reference': 'https://attack.mitre.org/techniques/T1546/009/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
427,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Attackers may maintain persistence by creating registry keys using AppInit DLLs. AppInit DLLs are loaded by every
process using the common library, user32.dll.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Registry Persistence via AppInit DLL,,47,d0e159cf-73e9-40d1-a9ed-077e3158a855,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where
   registry.path : (""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls"",
                    ""HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls"") and
   not process.executable : (""C:\\Windows\\System32\\msiexec.exe"",
                             ""C:\\Windows\\SysWOW64\\msiexec.exe"",
                             ""C:\\Program Files\\Commvault\\ContentStore*\\Base\\cvd.exe"",
                             ""C:\\Program Files (x86)\\Commvault\\ContentStore*\\Base\\cvd.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.010', 'name': 'AppInit DLLs', 'reference': 'https://attack.mitre.org/techniques/T1546/010/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
428,2020/09/02,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the installation of custom Application Compatibility Shim databases. This Windows functionality has been
abused by attackers to stealthily gain persistence and arbitrary code execution in legitimate Windows processes.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Installation of Custom Shim Databases,,47,c5ce48a6-7f57-4ee8-9313-3d0024caee10,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",,eql,"sequence by process.entity_id with maxspan = 5m
  [process where event.type == ""start"" and
    not (process.name : ""sdbinst.exe"" and process.parent.name : ""msiexec.exe"")]
  [registry where event.type in (""creation"", ""change"") and
    registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\*.sdb""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.011', 'name': 'Application Shimming', 'reference': 'https://attack.mitre.org/techniques/T1546/011/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
429,2022/02/22,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects the creation and modification of an account with the ""Don't Expire Password"" option Enabled. Attackers can abuse
this misconfiguration to persist in the domain and maintain long-term access using compromised accounts with this
property.
","['    User accounts can be used as service accounts and have their password set never to expire. This is a bad security\n    practice that exposes the account to Credential Access attacks. For cases in which user accounts cannot be avoided,\n    Microsoft provides the Group Managed Service Accounts (gMSA) feature, which ensures that the account password is\n    robust and changed regularly and automatically.\n    ']","['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Account Configured with Never-Expiring Password,"['https://www.cert.ssi.gouv.fr/uploads/guide-ad.html#dont_expire', 'https://blog.menasec.net/2019/02/threat-hunting-26-persistent-password.html']",47,62a70f6f-3c37-43df-a556-f64fa475fba2,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Active Directory', 'has_guide']",event.ingested,query,"event.action:""modified-user-account"" and event.code:""4738"" and message:""'Don't Expire Password' - Enabled"" and not user.id:""S-1-5-18""
",now-9m,,"## Triage and analysis

### Investigating Account Configured with Never-Expiring Password

Active Directory provides a setting that prevents users' passwords from expiring. Enabling this setting is bad practice and can expose
environments to vulnerabilities that weaken security posture, especially when these accounts are privileged.

The setting is usually configured so a user account can act as a service account. Attackers can abuse these accounts to
persist in the domain and maintain long-term access using compromised accounts with a never-expiring password set.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/source host during the past 48 hours.
- Inspect the account for suspicious or abnormal behaviors in the alert timeframe.

### False positive analysis

- This activity should not happen legitimately. The security team should address any potential benign true positive
(B-TP), as this configuration can put the user and the domain at risk.
- Using user accounts as service accounts is a bad security practice and should not be allowed in the domain. The
security team should map and monitor potential benign true positives (B-TPs), especially if the account is privileged.
For cases in which user accounts cannot be avoided, Microsoft provides the Group Managed Service Accounts (gMSA) feature,
which ensures that the account password is robust and changed regularly and automatically.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.
- Reset the password of the account and update its password settings.
- Search for other occurrences on the domain.
    - Using the [Active Directory PowerShell module](https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduser):
        - `get-aduser -filter { passwordNeverExpires -eq $true  -and enabled -eq $true } | ft`
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts, if
any, are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email,
business systems, and web services.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'name': 'Account Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1098/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
430,2020/12/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies the creation of a hidden local user account by appending the dollar sign to the account name. This is
sometimes done by attackers to increase access to a system and avoid appearing in the results of accounts listing using
the net users command.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Creation of a Hidden Local User Account,"['https://blog.menasec.net/2019/02/threat-hunting-6-hiding-in-plain-sights_8.html', 'https://github.com/CyberMonitor/APT_CyberCriminal_Campagin_Collections/tree/master/2020/2020.12.15.Lazarus_Campaign']",73,2edc8076-291e-41e9-81e4-e3fcbc97ae5e,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"registry where registry.path : ""HKLM\\SAM\\SAM\\Domains\\Account\\Users\\Names\\*$\\""
",now-9m,,"## Triage and analysis

### Investigating Creation of a Hidden Local User Account

Attackers can create accounts ending with a `$` symbol to make the account hidden to user enumeration utilities and
bypass detections that identify computer accounts by this pattern to apply filters.

This rule uses registry events to identify the creation of local hidden accounts.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for
prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positive (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Delete the hidden account.
- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1136', 'name': 'Create Account', 'reference': 'https://attack.mitre.org/techniques/T1136/', 'subtechnique': [{'id': 'T1136.001', 'name': 'Local Account', 'reference': 'https://attack.mitre.org/techniques/T1136/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
431,2020/11/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"The Debugger and SilentProcessExit registry keys can allow an adversary to intercept the execution of files, causing a
different process to be executed. This functionality can be abused by an adversary to establish persistence.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Image File Execution Options Injection,['https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/'],47,6839c821-011d-43bd-bd5b-acff00257226,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where length(registry.data.strings) > 0 and
 registry.path : (""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*.exe\\Debugger"",
                  ""HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*\\Debugger"",
                  ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*\\MonitorProcess"",
                  ""HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*\\MonitorProcess"") and
   /* add FPs here */
 not registry.data.strings regex~ (""""""C:\\Program Files( \(x86\))?\\ThinKiosk\\thinkiosk\.exe"""""", """""".*\\PSAppDeployToolkit\\.*"""""")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.012', 'name': 'Image File Execution Options Injection', 'reference': 'https://attack.mitre.org/techniques/T1546/012/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
432,2021/03/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious startup shell folder modifications to change the default Startup directory in order to bypass
detections monitoring file creation in the Windows Startup folder.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious Startup Shell Folder Modification,,73,c8b150f0-0164-475b-a75e-74b47800a9ff,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"registry where
 registry.path : (
     ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Common Startup"",
     ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Common Startup"",
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Startup"",
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Startup""
     ) and
  registry.data.strings != null and
  /* Normal Startup Folder Paths */
  not registry.data.strings : (
           ""C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"",
           ""%ProgramData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"",
           ""%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"",
           ""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup""
           )
",now-9m,,"## Triage and analysis

### Investigating Suspicious Startup Shell Folder Modification

Techniques used within malware and by adversaries often leverage the Windows registry to store malicious programs for
persistence. Startup shell folders are often targeted as they are not as prevalent as normal Startup folder paths so this
behavior may evade existing AV/EDR solutions. These programs may also run with higher privileges which can be ideal for
an attacker.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Review the source process and related file tied to the Windows Registry entry.
- Validate the activity is not related to planned patches, updates, network administrator activity or legitimate software
installations.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- There is a high possibility of benign legitimate programs being added to shell folders. This activity could be based
on new software installations, patches, or other network administrator activity. Before undertaking further investigation,
it should be verified that this activity is not benign.

### Related rules

- Startup or Run Key Registry Modification - 97fc44d3-8dae-4019-ae83-298c3015600f
- Persistent Scripts in the Startup Directory - f7c4dc5a-a58d-491d-9f14-9b66507121c0

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- If the malicious file was delivered via phishing:
  - Block the email sender from sending future emails.
  - Block the malicious web pages.
  - Remove emails from the sender from mailboxes.
  - Consider improvements to the security awareness program.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
433,2020/08/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/26,['Elastic'],"Detects the creation or modification of a new Group Policy based scheduled task or service. These methods are used for
legitimate system administration, but can also be abused by an attacker with domain admin permissions to execute a
malicious payload remotely on all or a subset of the domain joined machines.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Creation or Modification of a new GPO Scheduled Task or Service,,21,c0429aa8-9974-42da-bfb6-53a0a515a145,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
  file.path : (""?:\\Windows\\SYSVOL\\domain\\Policies\\*\\MACHINE\\Preferences\\ScheduledTasks\\ScheduledTasks.xml"",
               ""?:\\Windows\\SYSVOL\\domain\\Policies\\*\\MACHINE\\Preferences\\Services\\Services.xml"") and
  not process.name : ""dfsrs.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
434,2021/03/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A job can be used to schedule programs or scripts to be executed at a specified date and time. Adversaries may abuse
task scheduling functionality to facilitate initial or recurring execution of malicious code.
",['Legitimate scheduled jobs may be created during installation of new software.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Persistence via Scheduled Job Creation,,47,1327384f-00f3-44d5-9a8c-2373ba071e92,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
 file.path : ""?:\\Windows\\Tasks\\*"" and file.extension : ""job""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
435,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Indicates the creation of a scheduled task. Adversaries can use these to establish persistence, move laterally, and/or
escalate privileges.
",['Legitimate scheduled tasks may be created during installation of new software.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Local Scheduled Task Creation,,21,afcce5ad-65de-4ed2-8516-5e093d3ac99a,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",,eql,"sequence with maxspan=1m
  [process where event.type != ""end"" and
    ((process.name : (""cmd.exe"", ""wscript.exe"", ""rundll32.exe"", ""regsvr32.exe"", ""wmic.exe"", ""mshta.exe"",
                      ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"", ""WmiPrvSe.exe"", ""wsmprovhost.exe"", ""winrshost.exe"") or
    process.pe.original_file_name : (""cmd.exe"", ""wscript.exe"", ""rundll32.exe"", ""regsvr32.exe"", ""wmic.exe"", ""mshta.exe"",
                                     ""powershell.exe"", ""pwsh.dll"", ""powershell_ise.exe"", ""WmiPrvSe.exe"", ""wsmprovhost.exe"",
                                     ""winrshost.exe"")) or
    process.code_signature.trusted == false)] by process.entity_id
  [process where event.type == ""start"" and
    (process.name : ""schtasks.exe"" or process.pe.original_file_name == ""schtasks.exe"") and
    process.args : (""/create"", ""-create"") and process.args : (""/RU"", ""/SC"", ""/TN"", ""/TR"", ""/F"", ""/XML"") and
    /* exclude SYSTEM Integrity Level - look for task creations by non-SYSTEM user */
    not (?process.Ext.token.integrity_level_name : ""System"" or ?winlog.event_data.IntegrityLevel : ""System"")
  ] by process.parent.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
436,2020/11/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"A scheduled task was created by a Windows script via cscript.exe, wscript.exe or powershell.exe. This can be abused by
an adversary to establish persistence.
",['Legitimate scheduled tasks may be created during installation of new software.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Scheduled Task Created by a Windows Script,,47,689b9d57-e4d5-4357-ad17-9c334609d79a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",,eql,"sequence by host.id with maxspan = 30s
  [any where (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
   (dll.name : ""taskschd.dll"" or file.name : ""taskschd.dll"") and
   process.name : (""cscript.exe"", ""wscript.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"")]
  [registry where registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\*\\Actions""]
",now-9m,,"## Triage and analysis

Decode the base64 encoded Tasks Actions registry value to investigate the task's configured action.","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
437,2022/01/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the modification of the msDS-AllowedToDelegateTo attribute to KRBTGT. Attackers can use this technique to
maintain persistence to the domain by having the ability to request tickets for the KRBTGT service.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,KRBTGT Delegation Backdoor,"['https://skyblue.team/posts/delegate-krbtgt', 'https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0026_windows_audit_user_account_management.md']",73,e052c845-48d0-4f46-8a13-7d0aba05df82,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Active Directory']",event.ingested,query,"event.action:modified-user-account and event.code:4738 and winlog.event_data.AllowedToDelegateTo:*krbtgt*
",now-9m,,"## Setup

The 'Audit User Account Management' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Account Management >
Audit User Account Management (Success,Failure)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'reference': 'https://attack.mitre.org/techniques/T1098/', 'name': 'Account Manipulation'}], 'tactic': {'id': 'TA0003', 'reference': 'https://attack.mitre.org/tactics/TA0003/', 'name': 'Persistence'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
438,2020/10/16,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Detects attempts to establish persistence on an endpoint by abusing Microsoft Office add-ins.,,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Persistence via Microsoft Office AddIns,['https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/'],73,f44fa4b6-524c-4e87-8d9e-a32599e4fb7c,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
 file.extension : (""wll"",""xll"",""ppa"",""ppam"",""xla"",""xlam"") and
 file.path :
    (
    ""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Word\\Startup\\*"",
    ""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\AddIns\\*"",
    ""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\*""
    )
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1137', 'name': 'Office Application Startup', 'reference': 'https://attack.mitre.org/techniques/T1137/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
439,2020/11/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Detects attempts to establish persistence on an endpoint by installing a rogue Microsoft Outlook VBA Template.,['A legitimate VBA for Outlook is usually configured interactively via OUTLOOK.EXE.'],"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Persistence via Microsoft Outlook VBA,"['https://www.mdsec.co.uk/2020/11/a-fresh-outlook-on-mail-based-persistence/', 'https://www.linkedin.com/pulse/outlook-backdoor-using-vba-samir-b-/']",47,397945f3-d39a-4e6f-8bcb-9656c2031438,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"file where event.type != ""deletion"" and
 file.path : ""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Outlook\\VbaProject.OTM""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1137', 'name': 'Office Application Startup', 'reference': 'https://attack.mitre.org/techniques/T1137/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
440,2020/12/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies the use of the Exchange PowerShell cmdlet, Set-CASMailbox, to add a new ActiveSync allowed device.
Adversaries may target user email to collect sensitive information.
",['Legitimate exchange system administration activity.'],"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,New ActiveSyncAllowedDeviceID Added via PowerShell,"['https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/', 'https://docs.microsoft.com/en-us/powershell/module/exchange/set-casmailbox?view=exchange-ps']",47,ce64d965-6cb0-466d-b74f-8d2c76f47f05,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
  process.name: (""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and process.args : ""Set-CASMailbox*ActiveSyncAllowedDeviceIDs*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'name': 'Account Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1098/', 'subtechnique': [{'id': 'T1098.002', 'name': 'Additional Email Delegate Permissions', 'reference': 'https://attack.mitre.org/techniques/T1098/002/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
441,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Windows contains accessibility features that may be launched with a key combination before a user has logged in. An
adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the
system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Modification of Accessibility Binaries,['https://www.elastic.co/blog/practical-security-engineering-stateful-detection'],73,7405ddf1-6c8e-41ce-818f-48bea6bcaed8,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name : (""Utilman.exe"", ""winlogon.exe"") and user.name == ""SYSTEM"" and
 process.args :
    (
    ""C:\\Windows\\System32\\osk.exe"",
    ""C:\\Windows\\System32\\Magnify.exe"",
    ""C:\\Windows\\System32\\Narrator.exe"",
    ""C:\\Windows\\System32\\Sethc.exe"",
    ""utilman.exe"",
    ""ATBroker.exe"",
    ""DisplaySwitch.exe"",
    ""sethc.exe""
    )
 and not process.pe.original_file_name in
    (
    ""osk.exe"",
    ""sethc.exe"",
    ""utilman2.exe"",
    ""DisplaySwitch.exe"",
    ""ATBroker.exe"",
    ""ScreenMagnifier.exe"",
    ""SR.exe"",
    ""Narrator.exe"",
    ""magnify.exe"",
    ""MAGNIFY.EXE""
    )

/* uncomment once in winlogbeat to avoid bypass with rogue process with matching pe original file name */
/* and process.code_signature.subject_name == ""Microsoft Windows"" and process.code_signature.status == ""trusted"" */
",now-9m,,"## Triage and analysis

### Investigating Potential Modification of Accessibility Binaries

Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by
accessibility features. Windows contains accessibility features that may be launched with a key combination before a
user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs
are launched to get a command prompt or backdoor without logging in to the system.

More details can be found [here](https://attack.mitre.org/techniques/T1546/008/).

This rule looks for the execution of supposed accessibility binaries that don't match any of the accessibility features
binaries' original file names, which is likely a custom binary deployed by the attacker.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account and system owners and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity should not happen legitimately. The security team should address any potential benign true positive
(B-TP), as this configuration can put the user and the domain at risk.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.008', 'name': 'Accessibility Features', 'reference': 'https://attack.mitre.org/techniques/T1546/008/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.008', 'name': 'Accessibility Features', 'reference': 'https://attack.mitre.org/techniques/T1546/008/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
442,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects changes to registry persistence keys that are not commonly used or modified by legitimate programs. This could be
an indication of an adversary's attempt to persist in a stealthy manner.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Uncommon Registry Persistence Change,['https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2'],47,54902e45-3467-49a4-8abc-529f2c8cfb80,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where
  /* uncomment once stable length(registry.data.strings) > 0 and */
 registry.path : (
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\*"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Run"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\IconServiceLib"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AppSetup"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Taskman"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\VmApplet"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\Shell"",
      ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logoff\\Script"",
      ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logon\\Script"",
      ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Shutdown\\Script"",
      ""HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Startup\\Script"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\Shell"",
      ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logoff\\Script"",
      ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logon\\Script"",
      ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Shutdown\\Script"",
      ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Startup\\Script"",
      ""HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\*\\ShellComponent"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnConnect\\MicrosoftActiveSync"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect\\MicrosoftActiveSync"",
      ""HKLM\\SOFTWARE\\Microsoft\\Ctf\\LangBarAddin\\*\\FilePath"",
      ""HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Exec"",
      ""HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Script"",
      ""HKLM\\SOFTWARE\\Microsoft\\Command Processor\\Autorun"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Ctf\\LangBarAddin\\*\\FilePath"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Exec"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Script"",
      ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Command Processor\\Autorun"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*\\VerifierDlls"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GpExtensions\\*\\DllName"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\SafeBoot\\AlternateShell"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\Terminal Server\\Wds\\rdpwd\\StartupPrograms"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\InitialProgram"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\BootExecute"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\SetupExecute"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\Execute"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\S0InitialCommand"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\ServiceControlManagerExtension"",
      ""HKLM\\SYSTEM\\ControlSet*\\Control\\BootVerificationProgram\\ImagePath"",
      ""HKLM\\SYSTEM\\Setup\\CmdLine"",
      ""HKEY_USERS\\*\\Environment\\UserInitMprLogonScript"") and

 not registry.data.strings : (""C:\\Windows\\system32\\userinit.exe"", ""cmd.exe"", ""C:\\Program Files (x86)\\*.exe"",
                              ""C:\\Program Files\\*.exe"") and
 not (process.name : ""rundll32.exe"" and registry.path : ""*\\Software\\Microsoft\\Internet Explorer\\Extensions\\*\\Script"") and
 not process.executable : (""C:\\Windows\\System32\\msiexec.exe"",
                           ""C:\\Windows\\SysWOW64\\msiexec.exe"",
                           ""C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*\\MsMpEng.exe"",
                           ""C:\\Program Files\\*.exe"",
                           ""C:\\Program Files (x86)\\*.exe"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1112', 'name': 'Modify Registry', 'reference': 'https://attack.mitre.org/techniques/T1112/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,3e47ef71-ebfc-4520-975c-cb27fc090799,Comprehensive Registry Timeline,,,,,,,,,,,,,,,,
443,2021/10/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies an attempt to reset a potentially privileged account password remotely. Adversaries may manipulate account
passwords to maintain access or evade password duration policies and preserve compromised credentials.
",['Legitimate remote account administration.'],"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Account Password Reset Remotely,"['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4724', 'https://stealthbits.com/blog/manipulating-user-passwords-with-mimikatz/', 'https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Credential%20Access/remote_pwd_reset_rpc_mimikatz_postzerologon_target_DC.evtx']",47,2820c9c2-bcd7-4d6e-9eba-faf3891ba450,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",,eql,"sequence by host.id with maxspan=5m
  [authentication where event.action == ""logged-in"" and
    /* event 4624 need to be logged */
    winlog.logon.type : ""Network"" and event.outcome == ""success"" and source.ip != null and
    source.ip != ""127.0.0.1"" and source.ip != ""::1""] by winlog.event_data.TargetLogonId
   /* event 4724 need to be logged */
  [iam where event.action == ""reset-password"" and
   (
    /*
       This rule is very noisy if not scoped to privileged accounts, duplicate the
       rule and add your own naming convention and accounts of interest here.
     */
    winlog.event_data.TargetUserName: (""*Admin*"", ""*super*"", ""*SVC*"", ""*DC0*"", ""*service*"", ""*DMZ*"", ""*ADM*"") or
    winlog.event_data.TargetSid : ""S-1-5-21-*-500""
    )
  ] by winlog.event_data.SubjectLogonId
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'reference': 'https://attack.mitre.org/techniques/T1098/', 'name': 'Account Manipulation'}], 'tactic': {'id': 'TA0003', 'reference': 'https://attack.mitre.org/tactics/TA0003/', 'name': 'Persistence'}}]",,,,,,,,,,,,,,,,,,,
444,2020/11/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies execution of suspicious persistent programs (scripts, rundll32, etc.) by looking at process lineage and
command line usage.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Execution of Persistent Suspicious Program,,47,e7125cea-9fe1-42a5-9a05-b0792cf86f5a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",,eql,"/* userinit followed by explorer followed by early child process of explorer (unlikely to be launched interactively) within 1m */
sequence by host.id, user.name with maxspan=1m
  [process where event.type == ""start"" and process.name : ""userinit.exe"" and process.parent.name : ""winlogon.exe""]
  [process where event.type == ""start"" and process.name : ""explorer.exe""]
  [process where event.type == ""start"" and process.parent.name : ""explorer.exe"" and
   /* add suspicious programs here */
   process.pe.original_file_name in (""cscript.exe"",
                                     ""wscript.exe"",
                                     ""PowerShell.EXE"",
                                     ""MSHTA.EXE"",
                                     ""RUNDLL32.EXE"",
                                     ""REGSVR32.EXE"",
                                     ""RegAsm.exe"",
                                     ""MSBuild.exe"",
                                     ""InstallUtil.exe"") and
    /* add potential suspicious paths here */
    process.args : (""C:\\Users\\*"", ""C:\\ProgramData\\*"", ""C:\\Windows\\Temp\\*"", ""C:\\Windows\\Tasks\\*"", ""C:\\PerfLogs\\*"", ""C:\\Intel\\*"")
   ]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
445,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies run key or startup key registry modifications. In order to survive reboots and other system interrupts,
attackers will modify run keys within the registry or leverage startup folder items as a form of persistence.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Startup or Run Key Registry Modification,,21,97fc44d3-8dae-4019-ae83-298c3015600f,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where registry.data.strings != null and
 registry.path : (
     /* Machine Hive */
     ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*"",
     ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*"",
     ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*"",
     ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*"",
     ""HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\\*"",
     /* Users Hive */
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*"",
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*"",
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*"",
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*"",
     ""HKEY_USERS\\*\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\\*""
     ) and
  /* add common legitimate changes without being too restrictive as this is one of the most abused AESPs */
  not registry.data.strings : ""ctfmon.exe /n"" and
  not (registry.value : ""Application Restart #*"" and process.name : ""csrss.exe"") and
  user.id not in (""S-1-5-18"", ""S-1-5-19"", ""S-1-5-20"") and
  not registry.data.strings : (""?:\\Program Files\\*.exe"", ""?:\\Program Files (x86)\\*.exe"") and
  not process.executable : (""?:\\Windows\\System32\\msiexec.exe"", ""?:\\Windows\\SysWOW64\\msiexec.exe"") and
  not (process.name : ""OneDriveSetup.exe"" and
       registry.value : (""Delete Cached Standalone Update Binary"", ""Delete Cached Update Binary"", ""amd64"", ""Uninstall *"") and
       registry.data.strings : ""?:\\Windows\\system32\\cmd.exe /q /c * \""?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\*\"""")
",now-9m,,"## Triage and analysis

### Investigating Startup or Run Key Registry Modification

Adversaries may achieve persistence by referencing a program with a registry run key. Adding an entry to the run keys
in the registry will cause the program referenced to be executed when a user logs in. These programs will executed
under the context of the user and will have the account's permissions. This rule looks for this behavior by monitoring
a range of registry run keys.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- There is a high possibility of benign legitimate programs being added to registry run keys. This activity could be
based on new software installations, patches, or any kind of network administrator related activity. Before undertaking
further investigation, verify that this activity is not benign.

### Related rules

- Suspicious Startup Shell Folder Modification - c8b150f0-0164-475b-a75e-74b47800a9ff
- Persistent Scripts in the Startup Directory - f7c4dc5a-a58d-491d-9f14-9b66507121c0
- Startup Folder Persistence via Unsigned Process - 2fba96c0-ade5-4bce-b92f-a5df2509da3f
- Startup Persistence by a Suspicious Process - 440e2db4-bc7f-4c96-a068-65b78da59bde

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,3e47ef71-ebfc-4520-975c-cb27fc090799,Comprehensive Registry Timeline,,,,,,,,,,,,,,,,
446,2022/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Indicates the creation of a scheduled task using Windows event logs. Adversaries can use these to establish persistence,
move laterally, and/or escalate privileges.
",['Legitimate scheduled tasks may be created during installation of new software.'],"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,A scheduled task was created,['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4698'],21,92a6faf5-78ec-4e25-bea1-73bacc9b59d9,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"iam where event.action == ""scheduled-task-created"" and

 /* excluding tasks created by the computer account */
 not user.name : ""*$"" and

 /* TaskContent is not parsed, exclude by full taskname noisy ones */
 not winlog.event_data.TaskName :
             (""\\OneDrive Standalone Update Task-S-1-5-21*"",
              ""\\Hewlett-Packard\\HP Web Products Detection"",
              ""\\Hewlett-Packard\\HPDeviceCheck"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
447,2022/08/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/29,['Elastic'],"Indicates the update of a scheduled task using Windows event logs. Adversaries can use these to establish persistence,
by changing the configuration of a legit scheduled task. Some changes such as disabling or enabling a scheduled task are
common and may may generate noise.
",['Legitimate scheduled tasks may be created during installation of new software.'],"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,A scheduled task was updated,['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4698'],21,a02cb68e-7c93-48d1-93b2-2c39023308eb,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"iam where event.action == ""scheduled-task-updated"" and

 /* excluding tasks created by the computer account */
 not user.name : ""*$"" and
 not winlog.event_data.TaskName :
          (""\\User_Feed_Synchronization-*"",
           ""\\OneDrive Reporting Task-S-1-5-21*"",
           ""\\Hewlett-Packard\\HP Web Products Detection"",
           ""\\Hewlett-Packard\\HPDeviceCheck"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
448,2022/02/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Identifies a modification on the dsHeuristics attribute on the bit that holds the configuration of groups excluded from
the SDProp process. The SDProp compares the permissions on protected objects with those defined on the AdminSDHolder
object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected
accounts and groups are reset to match those of the domain's AdminSDHolder object, meaning that groups excluded will
remain unchanged. Attackers can abuse this misconfiguration to maintain long-term access to privileged accounts in these
groups.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,AdminSDHolder SDProp Exclusion Added,"['https://www.cert.ssi.gouv.fr/uploads/guide-ad.html#dsheuristics_bad', 'https://petri.com/active-directory-security-understanding-adminsdholder-object']",73,61d29caf-6c15-4d1e-9ccb-7ad12ccc0bc7,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Active Directory', 'has_guide']",event.ingested,eql,"any where event.action == ""Directory Service Changes"" and
  event.code == ""5136"" and
  winlog.event_data.AttributeLDAPDisplayName : ""dSHeuristics"" and
  length(winlog.event_data.AttributeValue) > 15 and
  winlog.event_data.AttributeValue regex~ ""[0-9]{15}([1-9a-f]).*""
",now-9m,,"## Triage and analysis

### Investigating AdminSDHolder SDProp Exclusion Added

The SDProp process compares the permissions on protected objects with those defined on the AdminSDHolder object. If the
permissions on any of the protected accounts and groups do not match, it resets the permissions on the protected
accounts and groups to match those defined in the domain AdminSDHolder object.

The dSHeuristics is a Unicode string attribute, in which each character in the string represents a heuristic that is
used to determine the behavior of Active Directory.

Administrators can use the dSHeuristics attribute to exclude privilege groups from the SDProp process by setting the
16th bit (dwAdminSDExMask) of the string to a certain value, which represents the group(s):

* For example, to exclude the Account Operators group, an administrator would modify the string, so the 16th character
is set to 1 (i.e., 0000000001000001).

The usage of this exclusion can leave the accounts unprotected and facilitate the misconfiguration of privileges for the
excluded groups, enabling attackers to add accounts to these groups to maintain long-term persistence with high
privileges.

This rule matches changes of the dsHeuristics object where the 16th bit is set to a value other than zero.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account and system owners and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check the value assigned to the 16th bit of the string on the `winlog.event_data.AttributeValue` field:
    - Account Operators eq 1
    - Server Operators eq 2
    - Print Operators eq 4
    - Backup Operators eq 8
    The field value can range from 0 to f (15). If more than one group is specified, the values will be summed together;
    for example, Backup Operators and Print Operators will set the `c` value on the bit.

### False positive analysis

- While this modification can be done legitimately, it is not a best practice. Any potential benign true positive (B-TP)
should be mapped and reviewed by the security team for alternatives as this weakens the security of the privileged group.

### Response and remediation

- The change can be reverted by setting the dwAdminSDExMask (16th bit) to 0 in dSHeuristics.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Directory Service Changes' logging policy must be configured for (Success).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success)
```

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
449,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies processes modifying the services registry key directly, instead of through the expected Windows APIs. This
could be an indication of an adversary attempting to stealthily persist through abnormal service creation or
modification of an existing service.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Unusual Persistence via Services Registry,,21,403ef0d3-8259-40c9-a5b6-d48354712e49,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where registry.path : (""HKLM\\SYSTEM\\ControlSet*\\Services\\*\\ServiceDLL"", ""HKLM\\SYSTEM\\ControlSet*\\Services\\*\\ImagePath"") and
  not registry.data.strings : (""?:\\windows\\system32\\Drivers\\*.sys"",
                               ""\\SystemRoot\\System32\\drivers\\*.sys"",
                               ""\\??\\?:\\Windows\\system32\\Drivers\\*.SYS"",
                               ""system32\\DRIVERS\\USBSTOR"") and
  not (process.name : ""procexp??.exe"" and registry.data.strings : ""?:\\*\\procexp*.sys"") and
  not process.executable : (""?:\\Program Files\\*.exe"",
                            ""?:\\Program Files (x86)\\*.exe"",
                            ""?:\\Windows\\System32\\svchost.exe"",
                            ""?:\\Windows\\winsxs\\*\\TiWorker.exe"",
                            ""?:\\Windows\\System32\\drvinst.exe"",
                            ""?:\\Windows\\System32\\services.exe"",
                            ""?:\\Windows\\System32\\msiexec.exe"",
                            ""?:\\Windows\\System32\\regsvr32.exe"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
450,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies files written to or modified in the startup folder by commonly abused processes. Adversaries may use this
technique to maintain persistence.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Startup Persistence by a Suspicious Process,,47,440e2db4-bc7f-4c96-a068-65b78da59bde,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"file where event.type != ""deletion"" and
  user.domain != ""NT AUTHORITY"" and
  file.path : (""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*"",
               ""C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\*"") and
  process.name : (""cmd.exe"",
                  ""powershell.exe"",
                  ""wmic.exe"",
                  ""mshta.exe"",
                  ""pwsh.exe"",
                  ""cscript.exe"",
                  ""wscript.exe"",
                  ""regsvr32.exe"",
                  ""RegAsm.exe"",
                  ""rundll32.exe"",
                  ""EQNEDT32.EXE"",
                  ""WINWORD.EXE"",
                  ""EXCEL.EXE"",
                  ""POWERPNT.EXE"",
                  ""MSPUB.EXE"",
                  ""MSACCESS.EXE"",
                  ""iexplore.exe"",
                  ""InstallUtil.exe"")
",now-9m,,"## Triage and analysis

### Investigating Startup Persistence by a Suspicious Process

The Windows Startup folder is a special folder in Windows. Programs added to this folder are executed during account
logon, without user interaction, providing an excellent way for attackers to maintain persistence.

This rule monitors for commonly abused processes writing to the Startup folder locations.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- Administrators may add programs to this mechanism via command-line shells. Before the further investigation,
verify that this activity is not benign.

### Related rules

- Suspicious Startup Shell Folder Modification - c8b150f0-0164-475b-a75e-74b47800a9ff
- Persistent Scripts in the Startup Directory - f7c4dc5a-a58d-491d-9f14-9b66507121c0

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
451,2020/11/29,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies files written or modified in the startup folder by unsigned processes. Adversaries may abuse this technique
to maintain persistence in an environment.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Startup Folder Persistence via Unsigned Process,,47,2fba96c0-ade5-4bce-b92f-a5df2509da3f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",,eql,"sequence by host.id, process.entity_id with maxspan=5s
  [process where event.type == ""start"" and process.code_signature.trusted == false and
  /* suspicious paths can be added here  */
   process.executable : (""C:\\Users\\*.exe"",
                         ""C:\\ProgramData\\*.exe"",
                         ""C:\\Windows\\Temp\\*.exe"",
                         ""C:\\Windows\\Tasks\\*.exe"",
                         ""C:\\Intel\\*.exe"",
                         ""C:\\PerfLogs\\*.exe"")
   ]
   [file where event.type != ""deletion"" and user.domain != ""NT AUTHORITY"" and
    file.path : (""C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*"",
                 ""C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\*"")
   ]
",now-9m,,"## Triage and analysis

### Investigating Startup Folder Persistence via Unsigned Process

The Windows Startup folder is a special folder in Windows. Programs added to this folder are executed during account
logon, without user interaction, providing an excellent way for attackers to maintain persistence.

This rule looks for unsigned processes writing to the Startup folder locations.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- There is a high possibility of benign legitimate programs being added to Startup folders. This activity could be based
on new software installations, patches, or any kind of network administrator related activity. Before undertaking further
investigation, verify that this activity is not benign.

### Related rules

- Suspicious Startup Shell Folder Modification - c8b150f0-0164-475b-a75e-74b47800a9ff
- Persistent Scripts in the Startup Directory - f7c4dc5a-a58d-491d-9f14-9b66507121c0

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
452,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies script engines creating files in the Startup folder, or the creation of script files in the Startup folder.
Adversaries may abuse this technique to maintain persistence in an environment.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Persistent Scripts in the Startup Directory,,47,f7c4dc5a-a58d-491d-9f14-9b66507121c0,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"file where event.type != ""deletion"" and user.domain != ""NT AUTHORITY"" and

  /* detect shortcuts created by wscript.exe or cscript.exe */
  (file.path : ""C:\\*\\Programs\\Startup\\*.lnk"" and
     process.name : (""wscript.exe"", ""cscript.exe"")) or

  /* detect vbs or js files created by any process */
  file.path : (""C:\\*\\Programs\\Startup\\*.vbs"",
               ""C:\\*\\Programs\\Startup\\*.vbe"",
               ""C:\\*\\Programs\\Startup\\*.wsh"",
               ""C:\\*\\Programs\\Startup\\*.wsf"",
               ""C:\\*\\Programs\\Startup\\*.js"")
",now-9m,,"## Triage and analysis

### Investigating Persistent Scripts in the Startup Directory

The Windows Startup folder is a special folder in Windows. Programs added to this folder are executed during account
logon, without user interaction, providing an excellent way for attackers to maintain persistence.

This rule looks for shortcuts created by wscript.exe or cscript.exe, or js/vbs scripts created by any process.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate
software installations.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Related rules

- Suspicious Startup Shell Folder Modification - c8b150f0-0164-475b-a75e-74b47800a9ff
- Startup Folder Persistence via Unsigned Process - 2fba96c0-ade5-4bce-b92f-a5df2509da3f

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
453,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies Component Object Model (COM) hijacking via registry modification. Adversaries may establish persistence by
executing malicious content triggered by hijacked references to COM objects.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Component Object Model Hijacking,['https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/'],47,16a52c14-7883-47af-8745-9357803f0d4c,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"registry where
 (registry.path : ""HK*}\\InprocServer32\\"" and registry.data.strings: (""scrobj.dll"", ""C:\\*\\scrobj.dll"") and
 not registry.path : ""*\\{06290BD*-48AA-11D2-8432-006008C3FBFC}\\*"")
 or
 /* in general COM Registry changes on Users Hive is less noisy and worth alerting */
 (registry.path : (""HKEY_USERS\\*Classes\\*\\InprocServer32\\"",
                   ""HKEY_USERS\\*Classes\\*\\LocalServer32\\"",
                   ""HKEY_USERS\\*Classes\\*\\DelegateExecute\\"",
                   ""HKEY_USERS\\*Classes\\*\\TreatAs\\"",
                   ""HKEY_USERS\\*Classes\\CLSID\\*\\ScriptletURL\\"") and
 not (process.executable : ""?:\\Program Files*\\Veeam\\Backup and Replication\\Console\\veeam.backup.shell.exe"" and
      registry.path : ""HKEY_USERS\\S-1-5-21-*_Classes\\CLSID\\*\\LocalServer32\\"") and
 /* not necessary but good for filtering privileged installations */
 user.domain != ""NT AUTHORITY""
 ) and
 /* removes false-positives generated by OneDrive and Teams */
 not process.name : (""OneDrive.exe"",""OneDriveSetup.exe"",""FileSyncConfig.exe"",""Teams.exe"") and
 /* Teams DLL loaded by regsvr */
 not (process.name: ""regsvr32.exe"" and
 registry.data.strings : ""*Microsoft.Teams.*.dll"")
",now-9m,,"## Triage and analysis

### Investigating Component Object Model Hijacking

Adversaries can insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means of persistence.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file referenced in the registry and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- Some Microsoft executables will reference the LocalServer32 registry key value for the location of external COM objects.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).


## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.015', 'name': 'Component Object Model Hijacking', 'reference': 'https://attack.mitre.org/techniques/T1546/015/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
454,2020/11/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a suspicious image load (taskschd.dll) from Microsoft Office processes. This behavior may indicate
adversarial activity where a scheduled task is configured via Windows Component Object Model (COM). This technique can
be used to configure persistence and evade monitoring by avoiding the usage of the traditional Windows binary
(schtasks.exe) used to manage scheduled tasks.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Image Load (taskschd.dll) from MS Office,"['https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16', 'https://www.clearskysec.com/wp-content/uploads/2020/10/Operation-Quicksand.pdf']",21,baa5d22c-5e1c-4f33-bfc9-efa73bb53022,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"any where
 (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
  process.name : (""WINWORD.EXE"", ""EXCEL.EXE"", ""POWERPNT.EXE"", ""MSPUB.EXE"", ""MSACCESS.EXE"") and
  (dll.name : ""taskschd.dll"" or file.name : ""taskschd.dll"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
455,2020/11/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],Identifies execution of a suspicious program via scheduled tasks by looking at process lineage and command line usage.,['Legitimate scheduled tasks running third party software.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Execution via Scheduled Task,,47,5d1d6907-0747-4d5d-9b24-e4a18853dc0a,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
    /* Schedule service cmdline on Win10+ */
    process.parent.name : ""svchost.exe"" and process.parent.args : ""Schedule"" and
    /* add suspicious programs here */
    process.pe.original_file_name in
                                (
                                  ""cscript.exe"",
                                  ""wscript.exe"",
                                  ""PowerShell.EXE"",
                                  ""Cmd.Exe"",
                                  ""MSHTA.EXE"",
                                  ""RUNDLL32.EXE"",
                                  ""REGSVR32.EXE"",
                                  ""MSBuild.exe"",
                                  ""InstallUtil.exe"",
                                  ""RegAsm.exe"",
                                  ""RegSvcs.exe"",
                                  ""msxsl.exe"",
                                  ""CONTROL.EXE"",
                                  ""EXPLORER.EXE"",
                                  ""Microsoft.Workflow.Compiler.exe"",
                                  ""msiexec.exe""
                                  ) and
    /* add suspicious paths here */
    process.args : (
       ""C:\\Users\\*"",
       ""C:\\ProgramData\\*"",
       ""C:\\Windows\\Temp\\*"",
       ""C:\\Windows\\Tasks\\*"",
       ""C:\\PerfLogs\\*"",
       ""C:\\Intel\\*"",
       ""C:\\Windows\\Debug\\*"",
       ""C:\\HP\\*"") and

     not (process.name : ""cmd.exe"" and process.args : ""?:\\*.bat"" and process.working_directory : ""?:\\Windows\\System32\\"") and
     not (process.name : ""cscript.exe"" and process.args : ""?:\\Windows\\system32\\calluxxprovider.vbs"") and
     not (process.name : ""powershell.exe"" and process.args : (""-File"", ""-PSConsoleFile"") and user.id : ""S-1-5-18"") and
     not (process.name : ""msiexec.exe"" and user.id : ""S-1-5-18"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
456,2020/11/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of a suspicious ImagePath value. This could be an indication of an adversary attempting to
stealthily persist or escalate privileges through abnormal service creation.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious ImagePath Service Creation,,73,36a8e048-d888-4f61-a8b9-0f9e2e40f317,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where registry.path : ""HKLM\\SYSTEM\\ControlSet*\\Services\\*\\ImagePath"" and
 /* add suspicious registry ImagePath values here */
 registry.data.strings : (""%COMSPEC%*"", ""*\\.\\pipe\\*"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
457,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Windows services typically run as SYSTEM and can be used as a privilege escalation opportunity. Malware or penetration
testers may run a shell as a service to gain SYSTEM permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,System Shells via Services,,47,0022d47d-39c7-4f69-a232-4fe9dc7a3acd,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""services.exe"" and
  process.name : (""cmd.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"") and

  /* Third party FP's */
  not process.args : ""NVDisplay.ContainerLocalSystem""
",now-9m,,"## Triage and analysis

### Investigating System Shells via Services

Attackers may configure existing services or create new ones to execute system shells to elevate their privileges from
administrator to SYSTEM. They can also configure services to execute these shells with persistence payloads.

This rule looks for system shells being spawned by `services.exe`, which is compatible with the above behavior.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify how the service was created or modified. Look for registry changes events or Windows events related to
service activities (for example, 4697 and/or 7045).
  - Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Check for commands executed under the spawned shell.

### False positive analysis

- This activity should not happen legitimately. The security team should address any potential benign true positive
(B-TP), as this configuration can put the user and the domain at risk.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Delete the service or restore it to the original configuration.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
458,2021/01/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies modification of the Time Provider. Adversaries may establish persistence by registering and enabling a
malicious DLL as a time provider. Windows uses the time provider architecture to obtain accurate time stamps from other
network devices or clients in the network. Time providers are implemented in the form of a DLL file which resides in the
System32 folder. The service W32Time initiates during the startup of Windows and loads w32time.dll.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Potential Persistence via Time Provider Modification,['https://pentestlab.blog/2019/10/22/persistence-time-providers/'],47,14ed1aa9-ebfd-4cf9-a463-0ac59ec55204,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where event.type:""change"" and
  registry.path:""HKLM\\SYSTEM\\*ControlSet*\\Services\\W32Time\\TimeProviders\\*"" and
  registry.data.strings:""*.dll""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.003', 'name': 'Time Providers', 'reference': 'https://attack.mitre.org/techniques/T1547/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
459,2021/01/09,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,"['Elastic', 'Skoetting']","Identifies a user being added to a privileged group in Active Directory. Privileged accounts and groups in Active
Directory are those to which powerful rights, privileges, and permissions are granted that allow them to perform nearly
any action in Active Directory and on domain-joined systems.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,User Added to Privileged Group in Active Directory,['https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-b--privileged-accounts-and-groups-in-active-directory'],47,5cd8e1f7-0050-4afc-b2df-904e40b2f5ae,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"iam where event.action == ""added-member-to-group"" and
  group.name : (""Admin*"",
                ""Local Administrators"",
                ""Domain Admins"",
                ""Enterprise Admins"",
                ""Backup Admins"",
                ""Schema Admins"",
                ""DnsAdmins"",
                ""Exchange Organization Administrators"")
",now-9m,,"## Triage and analysis

### Investigating User Added to Privileged Group in Active Directory

Privileged accounts and groups in Active Directory are those to which powerful rights, privileges, and permissions are
granted that allow them to perform nearly any action in Active Directory and on domain-joined systems.

Attackers can add users to privileged groups to maintain a level of access if their other privileged accounts are
uncovered by the security team. This allows them to keep operating after the security team discovers abused accounts.

This rule monitors events related to a user being added to a privileged group.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should manage members of this group.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- This attack abuses a legitimate Active Directory mechanism, so it is important to determine whether the activity is
legitimate, if the administrator is authorized to perform this operation, and if there is a need to grant the account
this level of privilege.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- If the admin is not aware of the operation, activate your Active Directory incident response plan.
- If the user does not need the administrator privileges, remove the account from the privileged group.
- Review the privileges of the administrator account that performed the action.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'name': 'Account Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1098/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
460,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies attempts to create new users. This is sometimes done by attackers to increase access or establish persistence
on a system or domain.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,User Account Creation,,21,1aa9181a-492b-4c01-8b16-fa0735786b2b,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.name : (""net.exe"", ""net1.exe"") and
  not process.parent.name : ""net.exe"" and
  (process.args : ""user"" and process.args : (""/ad"", ""/add""))
",now-9m,,"## Triage and analysis

### Investigating User Account Creation

Attackers may create new accounts (both local and domain) to maintain access to victim systems.

This rule identifies the usage of `net.exe` to create new accounts.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Identify if the account was added to privileged groups or assigned special privileges after creation.
- Investigate other alerts associated with the user/host during the past 48 hours.

### False positive analysis

- Account creation is a common administrative task, so there is a high chance of the activity being legitimate. Before
investigating further, verify that this activity is not benign.

### Related rules

- Creation of a Hidden Local User Account - 2edc8076-291e-41e9-81e4-e3fcbc97ae5e

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Delete the created account.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1136', 'name': 'Create Account', 'reference': 'https://attack.mitre.org/techniques/T1136/', 'subtechnique': [{'id': 'T1136.001', 'name': 'Local Account', 'reference': 'https://attack.mitre.org/techniques/T1136/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
461,2021/01/04,development,,,2022/08/24,['Skoetting'],"Identifies attempts to create new local users. This is sometimes done by attackers to increase access to a system or
domain.
","['    Legitimate local user creations may be done by a system or network administrator. Verify whether this is known\n    behavior in your environment. Local user creations by unfamiliar users or hosts should be investigated. If known\n    behavior is causing false positives, it can be exempted from the rule.\n    ']","['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Creation of a local user account,,21,38e17753-f581-4644-84da-0d60a8318694,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,query,"event.module:security and event.code:4720
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1136', 'name': 'Create Account', 'reference': 'https://attack.mitre.org/techniques/T1136/', 'subtechnique': [{'id': 'T1136.001', 'name': 'Local Account', 'reference': 'https://attack.mitre.org/techniques/T1136/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
462,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"The Application Shim was created to allow for backward compatibility of software as the operating system codebase
changes over time. This Windows functionality has been abused by attackers to stealthily gain persistence and arbitrary
code execution in legitimate Windows processes.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Application Shimming via Sdbinst,,21,fd4a992d-6130-4802-9ff8-829b89ae801f,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and process.name : ""sdbinst.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.011', 'name': 'Application Shimming', 'reference': 'https://attack.mitre.org/techniques/T1546/011/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.011', 'name': 'Application Shimming', 'reference': 'https://attack.mitre.org/techniques/T1546/011/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
463,2021/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"An adversary can use the Background Intelligent Transfer Service (BITS) SetNotifyCmdLine method to execute a program
that runs after a job finishes transferring data or after a job enters a specified state in order to persist on a
system.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Persistence via BITS Job Notify Cmdline,"['https://pentestlab.blog/2019/10/30/persistence-bits-jobs/', 'https://docs.microsoft.com/en-us/windows/win32/api/bits1_5/nf-bits1_5-ibackgroundcopyjob2-setnotifycmdline', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bitsadmin-setnotifycmdline', 'https://www.elastic.co/blog/hunting-for-persistence-using-elastic-security-part-2']",47,c3b915e0-22f3-4bf7-991d-b643513c722f,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""svchost.exe"" and process.parent.args : ""BITS"" and
  not process.executable :
              (""?:\\Windows\\System32\\WerFaultSecure.exe"",
               ""?:\\Windows\\System32\\WerFault.exe"",
               ""?:\\Windows\\System32\\wermgr.exe"",
               ""?:\\WINDOWS\\system32\\directxdatabaseupdater.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1197', 'name': 'BITS Jobs', 'reference': 'https://attack.mitre.org/techniques/T1197/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
464,2020/11/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a persistence mechanism that utilizes the NtSetValueKey native API to create a hidden (null terminated)
registry key. An adversary may use this method to hide from system utilities such as the Registry Editor (regedit).
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Persistence via Hidden Run Key Detected,"['https://github.com/outflanknl/SharpHide', 'https://github.com/ewhitehats/InvisiblePersistence/blob/master/InvisibleRegValues_Whitepaper.pdf']",73,a9b05c3b-b304-4bf9-970d-acdfaef2944c,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"/* Registry Path ends with backslash */
registry where /* length(registry.data.strings) > 0 and */
 registry.path : (""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\"",
                  ""HKU\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\"",
                  ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\"",
                  ""HKLM\\Software\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\"",
                  ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\"",
                  ""HKU\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\"",
                  ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
465,2020/11/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies registry modifications related to the Windows Security Support Provider (SSP) configuration. Adversaries may
abuse this to establish persistence in an environment.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Installation of Security Support Provider,,47,e86da94d-e54b-4fb5-b96c-cecff87e8787,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where
   registry.path : (""HKLM\\SYSTEM\\*ControlSet*\\Control\\Lsa\\Security Packages*"",
                    ""HKLM\\SYSTEM\\*ControlSet*\\Control\\Lsa\\OSConfig\\Security Packages*"") and
   not process.executable : (""C:\\Windows\\System32\\msiexec.exe"", ""C:\\Windows\\SysWOW64\\msiexec.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.005', 'name': 'Security Support Provider', 'reference': 'https://attack.mitre.org/techniques/T1547/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
466,2020/08/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Detects the successful hijack of Microsoft Compatibility Appraiser scheduled task to establish persistence with an
integrity level of system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Persistence via TelemetryController Scheduled Task Hijack,['https://www.trustedsec.com/blog/abusing-windows-telemetry-for-persistence/?utm_content=131234033&utm_medium=social&utm_source=twitter&hss_channel=tw-403811306'],73,68921d85-d0dc-48b3-865f-43291ca2c4f2,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""CompatTelRunner.exe"" and process.args : ""-cv*"" and
  not process.name : (""conhost.exe"",
                      ""DeviceCensus.exe"",
                      ""CompatTelRunner.exe"",
                      ""DismHost.exe"",
                      ""rundll32.exe"",
                      ""powershell.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.005', 'name': 'Scheduled Task', 'reference': 'https://attack.mitre.org/techniques/T1053/005/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
467,2020/08/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies potential hijacking of the Microsoft Update Orchestrator Service to establish persistence with an integrity
level of SYSTEM.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Persistence via Update Orchestrator Service Hijack,['https://github.com/irsl/CVE-2020-1313'],73,265db8f5-fc73-4d0d-b434-6483b56372e2,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'CVE-2020-1313']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.executable : ""C:\\Windows\\System32\\svchost.exe"" and
  process.parent.args : ""UsoSvc"" and
  not process.executable :
          (""?:\\ProgramData\\Microsoft\\Windows\\UUS\\Packages\\*\\amd64\\MoUsoCoreWorker.exe"",
          ""?:\\Windows\\System32\\UsoClient.exe"",
          ""?:\\Windows\\System32\\MusNotification.exe"",
          ""?:\\Windows\\System32\\MusNotificationUx.exe"",
          ""?:\\Windows\\System32\\MusNotifyIcon.exe"",
          ""?:\\Windows\\System32\\WerFault.exe"",
          ""?:\\Windows\\System32\\WerMgr.exe"",
          ""?:\\Windows\\UUS\\amd64\\MoUsoCoreWorker.exe"",
          ""?:\\Windows\\System32\\MoUsoCoreWorker.exe"",
          ""?:\\Windows\\UUS\\amd64\\UsoCoreWorker.exe"",
          ""?:\\Windows\\System32\\UsoCoreWorker.exe"",
          ""?:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\OfficeC2RClient.exe"") and
  not process.name : (""MoUsoCoreWorker.exe"", ""OfficeC2RClient.exe"")
",now-9m,,"## Triage and analysis

### Investigating Persistence via Update Orchestrator Service Hijack

Windows Update Orchestrator Service is a DCOM service used by other components to install Windows updates that are
already downloaded. Windows Update Orchestrator Service was vulnerable to elevation of privileges (any user to local
system) due to an improper authorization of the callers. The vulnerability affected the Windows 10 and Windows Server
Core products. Fixed by Microsoft on Patch Tuesday June 2020.

This rule will detect uncommon processes spawned by `svchost.exe` with `UsoSvc` as the command line parameters.
Attackers can leverage this technique to elevate privileges or maintain persistence.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
468,2020/12/04,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"An adversary can use Windows Management Instrumentation (WMI) to install event filters, providers, consumers, and
bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an
event and execute arbitrary code when that event occurs, providing persistence on a system.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Persistence via WMI Event Subscription,,21,9b6813a1-daf1-457e-b0e6-0bb4e55b8a4c,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
  (process.name : ""wmic.exe"" or process.pe.original_file_name == ""wmic.exe"") and
  process.args : ""create"" and
  process.args : (""ActiveScriptEventConsumer"", ""CommandLineEventConsumer"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1546', 'name': 'Event Triggered Execution', 'reference': 'https://attack.mitre.org/techniques/T1546/', 'subtechnique': [{'id': 'T1546.003', 'name': 'Windows Management Instrumentation Event Subscription', 'reference': 'https://attack.mitre.org/techniques/T1546/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
469,2021/03/15,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies use of the Windows Management Instrumentation StdRegProv (registry provider) to modify commonly abused
registry locations for persistence.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Persistence via WMI Standard Registry Provider,['https://docs.microsoft.com/en-us/previous-versions/windows/desktop/regprov/stdregprov'],73,70d12c9c-0dbd-4a1a-bc44-1467502c9cf6,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"registry where
 registry.data.strings != null and process.name : ""WmiPrvSe.exe"" and
 registry.path : (
                  ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*"",
                  ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*"",
                  ""HKLM\\Software\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\*"",
                  ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*"",
                  ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*"",
                  ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*"",
                  ""HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*"",
                  ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*"",
                  ""HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*"",
                  ""HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\ServiceDLL"",
                  ""HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\ImagePath"",
                  ""HKEY_USERS\\*\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\\*"",
                  ""HKEY_USERS\\*\\Environment\\UserInitMprLogonScript"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\Shell"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logoff\\Script"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logon\\Script"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Shutdown\\Script"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Startup\\Script"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Ctf\\LangBarAddin\\*\\FilePath"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Exec"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Script"",
                  ""HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Command Processor\\Autorun""
                  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.001', 'name': 'Registry Run Keys / Startup Folder', 'reference': 'https://attack.mitre.org/techniques/T1547/001/'}]}, {'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1047', 'name': 'Windows Management Instrumentation', 'reference': 'https://attack.mitre.org/techniques/T1047/'}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,,,
470,2021/08/24,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies suspicious commands executed via a web server, which may suggest a vulnerability and remote shell access.","['    Security audits, maintenance, and network administrative scripts may trigger this alert when run under web\n    processes.\n    ']","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Web Shell Detection: Script Process Child of Common Web Processes,['https://www.microsoft.com/security/blog/2020/02/04/ghost-in-the-shell-investigating-web-shell-attacks/'],73,2917d495-59bd-4250-b395-c29409b76086,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : (""w3wp.exe"", ""httpd.exe"", ""nginx.exe"", ""php.exe"", ""php-cgi.exe"", ""tomcat.exe"") and
  process.name : (""cmd.exe"", ""cscript.exe"", ""powershell.exe"", ""pwsh.exe"", ""powershell_ise.exe"", ""wmic.exe"", ""wscript.exe"")
",now-9m,,"## Triage and analysis

### Investigating Web Shell Detection: Script Process Child of Common Web Processes

Adversaries may backdoor web servers with web shells to establish persistent access to systems. A web shell is a web
script that is placed on an openly accessible web server to allow an adversary to use the web server as a gateway into a
network. A web shell may provide a set of functions to execute or a command-line interface on the system that hosts the
web server.

This rule detects a web server process spawning script and command-line interface programs, potentially indicating
attackers executing commands using the web shell.

#### Possible investigation steps

- Investigate abnormal behaviors observed by the subject process such as network connections, registry or file
modifications, and any other spawned child processes.
- Examine the command line to determine which commands or scripts were executed.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- If scripts or executables were dropped, retrieve the files and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently
malicious must be monitored by the security team.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1505', 'name': 'Server Software Component', 'reference': 'https://attack.mitre.org/techniques/T1505/', 'subtechnique': [{'id': 'T1505.003', 'name': 'Web Shell', 'reference': 'https://attack.mitre.org/techniques/T1505/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,,,
471,2022/08/30,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/30,['Elastic'],"Identifies process creation with alternate credentials. Adversaries may create a new process with a different token to
escalate privileges and bypass access controls.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Process Creation via Secondary Logon,['https://attack.mitre.org/techniques/T1134/002/'],47,42eeee3d-947f-46d3-a14d-7036b962c266,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",,eql,"sequence by host.id with maxspan=1m

[authentication where event.action:""logged-in"" and
 event.outcome == ""success"" and user.id:""S-1-5-21-*"" and

 /* seclogon service */
 process.name == ""svchost.exe"" and 
 winlog.event_data.LogonProcessName : ""seclogo*"" and source.ip == ""::1"" ] by winlog.event_data.TargetLogonId

[process where event.type == ""start""] by winlog.event_data.TargetLogonId
",now-9m,,"## Setup

Audit events 4624 and 4688 are needed to trigger this rule.

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.

","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'name': 'Access Token Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1134/', 'subtechnique': [{'id': 'T1134.002', 'name': 'Create Process with Token', 'reference': 'https://attack.mitre.org/techniques/T1134/002/'}, {'id': 'T1134.003', 'name': 'Make and Impersonate Token', 'reference': 'https://attack.mitre.org/techniques/T1134/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
472,2021/01/20,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"User Account Control (UAC) can help mitigate the impact of malware on Windows hosts. With UAC, apps and tasks always run
in the security context of a non-administrator account, unless an administrator specifically authorizes
administrator-level access to the system. This rule identifies registry value changes to bypass User Access Control
(UAC) protection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Disabling User Account Control via Registry Modification,"['https://www.greyhathacker.net/?p=796', 'https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/user-account-control-group-policy-and-registry-key-settings', 'https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/user-account-control-overview']",47,d31f183a-e5b1-451b-8534-ba62bca0b404,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"registry where event.type == ""change"" and
  registry.path :
    (
      ""HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\ConsentPromptBehaviorAdmin"",
      ""HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\PromptOnSecureDesktop""
    ) and
  registry.data.strings : (""0"", ""0x00000000"")
",now-9m,,"## Triage and analysis

### Investigating Disabling User Account Control via Registry Modification

Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as low to high integrity levels)
to perform a task under administrator-level permissions, possibly by prompting the user for confirmation.
UAC can deny an operation under high-integrity enforcement, or allow the user to perform the action if they are in the
local administrators group and enter an administrator password when prompted.

For more information about the UAC and how it works, check the [official Microsoft docs page](https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works).

Attackers may disable UAC to execute code directly in high integrity. This rule identifies registry value changes to
bypass the UAC protection.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behaviors in the alert timeframe.
- Investigate abnormal behaviors observed by the subject process such as network connections, registry or file
modifications, and any spawned child processes.
- Analyze non-system processes executed with high integrity after UAC was disabled for unknown or suspicious processes.
- Retrieve the suspicious processes' executables and determine if they are malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled tasks creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Restore UAC settings to the desired state.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
473,2021/11/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects the modification of Group Policy Objects (GPO) to add a startup/logon script to users or computer objects.
",['Legitimate Administrative Activity'],"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Startup/Logon Script added to Group Policy Object,"['https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0025_windows_audit_directory_service_changes.md', 'https://github.com/atc-project/atc-data/blob/f2bbb51ecf68e2c9f488e3c70dcdd3df51d2a46b/docs/Logging_Policies/LP_0029_windows_audit_detailed_file_share.md', 'https://labs.f-secure.com/tools/sharpgpoabuse']",47,16fac1a1-21ee-4ca6-b720-458e3855d046,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'Active Directory', 'has_guide']",event.ingested,query,"(
 event.code:5136 and winlog.event_data.AttributeLDAPDisplayName:(gPCMachineExtensionNames or gPCUserExtensionNames) and
   winlog.event_data.AttributeValue:(*42B5FAAE-6536-11D2-AE5A-0000F87571E3* and
                                      (*40B66650-4972-11D1-A7CA-0000F87571E3* or *40B6664F-4972-11D1-A7CA-0000F87571E3*))
)
or
(
 event.code:5145 and winlog.event_data.ShareName:\\\\*\\SYSVOL and
   winlog.event_data.RelativeTargetName:(*\\scripts.ini or *\\psscripts.ini) and
   (message:WriteData or winlog.event_data.AccessList:*%%4417*)
)
",,,"## Triage and analysis

### Investigating Scheduled Task Execution at Scale via GPO

Group Policy Objects (GPOs) can be used by attackers to instruct arbitrarily large groups of
clients to execute specified commands at startup, logon, shutdown, and logoff. This is done by creating or modifying the
`scripts.ini` or `psscripts.ini` files. The scripts are stored in the following path: `<GPOPath>\Machine\Scripts\`,
`<GPOPath>\User\Scripts\`

#### Possible investigation steps

- This attack abuses a legitimate mechanism of Active Directory, so it is important to determine whether the activity
is legitimate and the administrator is authorized to perform this operation.
- Retrieve the contents of the `ScheduledTasks.xml` file, and check the `<Command>` and `<Arguments>` XML tags for any
potentially malicious commands or binaries.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Scope which objects may be compromised by retrieving information about which objects are controlled by the GPO.

### False positive analysis

- Verify if the execution is legitimately authorized and executed under a change management process.

### Related rules

- Group Policy Abuse for Privilege Addition - b9554892-5e0e-424b-83a0-5aef95aa43bf
- Scheduled Task Execution at Scale via GPO - 15a8ba77-1c13-4274-88fe-6bd14133861e

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- The investigation and containment must be performed in every computer controlled by the GPO, where necessary.
- Remove the script from the GPO.
- Check if other GPOs have suspicious scripts attached.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Detailed File Share' audit policy must be configured (Success Failure).
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Object Access >
Audit Detailed File Share (Success,Failure)
```

The 'Audit Directory Service Changes' audit policy must be configured (Success Failure).
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1547/', 'id': 'T1547', 'name': 'Boot or Logon Autostart Execution'}, {'reference': 'https://attack.mitre.org/techniques/T1484/', 'id': 'T1484', 'name': 'Domain Policy Modification', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1484/001/', 'id': 'T1484.001', 'name': 'Group Policy Modification'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0004/', 'id': 'TA0004', 'name': 'Privilege Escalation'}}]",,,,,,,,,,,,,,,,,,,
474,2021/11/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects the first occurrence of a modification to Group Policy Object Attributes to add privileges to user accounts or
use them to add users as local admins.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Group Policy Abuse for Privilege Addition,"['https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0025_windows_audit_directory_service_changes.md', 'https://labs.f-secure.com/tools/sharpgpoabuse']",73,b9554892-5e0e-424b-83a0-5aef95aa43bf,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'Active Directory', 'has_guide']",event.ingested,query,"event.code: ""5136"" and winlog.event_data.AttributeLDAPDisplayName:""gPCMachineExtensionNames"" and
winlog.event_data.AttributeValue:(*827D319E-6EAC-11D2-A4EA-00C04F79F83A* and *803E14A0-B4FB-11D0-A0D0-00A0C90F574B*)
",,,"## Triage and analysis

### Investigating Group Policy Abuse for Privilege Addition

Group Policy Objects (GPOs) can be used to add rights and/or modify Group Membership on GPOs by changing the contents of an INF
file named GptTmpl.inf, which is responsible for storing every setting under the Security Settings container in the GPO.
This file is unique for each GPO, and only exists if the GPO contains security settings.
Example Path: ""\\DC.com\SysVol\DC.com\Policies\{PolicyGUID}\Machine\Microsoft\Windows NT\SecEdit\GptTmpl.inf""

#### Possible investigation steps

- This attack abuses a legitimate mechanism of Active Directory, so it is important to determine whether the activity
is legitimate and the administrator is authorized to perform this operation.
- Retrieve the contents of the `GptTmpl.inf` file, and under the `Privilege Rights` section, look for potentially
dangerous high privileges, for example: SeTakeOwnershipPrivilege, SeEnableDelegationPrivilege, etc.
- Inspect the user security identifiers (SIDs) associated with these privileges, and if they should have these privileges.

### False positive analysis

- Inspect whether the user that has done the modifications should be allowed to. The user name can be found in the
`winlog.event_data.SubjectUserName` field.

### Related rules

- Scheduled Task Execution at Scale via GPO - 15a8ba77-1c13-4274-88fe-6bd14133861e
- Startup/Logon Script added to Group Policy Object - 16fac1a1-21ee-4ca6-b720-458e3855d046

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- The investigation and containment must be performed in every computer controlled by the GPO, where necessary.
- Remove the script from the GPO.
- Check if other GPOs have suspicious scripts attached.

## Setup

The 'Audit Directory Service Changes' audit policy must be configured (Success Failure).
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1484/', 'id': 'T1484', 'name': 'Domain Policy Modification', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1484/001/', 'id': 'T1484.001', 'name': 'Group Policy Modification'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0004/', 'id': 'TA0004', 'name': 'Privilege Escalation'}}]",,,,,,,,,,,,,,,,,,,
475,2021/11/08,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],"Detects the modification of Group Policy Object attributes to execute a scheduled task in the objects controlled by the GPO.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Scheduled Task Execution at Scale via GPO,"['https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0025_windows_audit_directory_service_changes.md', 'https://github.com/atc-project/atc-data/blob/f2bbb51ecf68e2c9f488e3c70dcdd3df51d2a46b/docs/Logging_Policies/LP_0029_windows_audit_detailed_file_share.md', 'https://labs.f-secure.com/tools/sharpgpoabuse', 'https://twitter.com/menasec1/status/1106899890377052160', 'https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/security/win_gpo_scheduledtasks.yml']",47,15a8ba77-1c13-4274-88fe-6bd14133861e,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'Active Directory', 'has_guide']",event.ingested,query,"(event.code: ""5136"" and winlog.event_data.AttributeLDAPDisplayName:(""gPCMachineExtensionNames"" or ""gPCUserExtensionNames"") and
   winlog.event_data.AttributeValue:(*CAB54552-DEEA-4691-817E-ED4A4D1AFC72* and *AADCED64-746C-4633-A97C-D61349046527*))
or
(event.code: ""5145"" and winlog.event_data.ShareName: ""\\\\*\\SYSVOL"" and winlog.event_data.RelativeTargetName: *ScheduledTasks.xml and
  (message: WriteData or winlog.event_data.AccessList: *%%4417*))
",,,"## Triage and analysis

### Investigating Scheduled Task Execution at Scale via GPO

Group Policy Objects (GPOs) can be used by attackers to execute scheduled tasks at scale to compromise objects controlled
by a given GPO. This is done by changing the contents of the `<GPOPath>\Machine\Preferences\ScheduledTasks\ScheduledTasks.xml`
file.

#### Possible investigation steps

- This attack abuses a legitimate mechanism of Active Directory, so it is important to determine whether the activity
is legitimate and the administrator is authorized to perform this operation.
- Retrieve the contents of the `ScheduledTasks.xml` file, and check the `<Command>` and `<Arguments>` XML tags for any
potentially malicious commands or binaries.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Scope which objects may be compromised by retrieving information about which objects are controlled by the GPO.

### False positive analysis

- Verify if the execution is allowed and done under change management, and if the execution is legitimate.

### Related rules

- Group Policy Abuse for Privilege Addition - b9554892-5e0e-424b-83a0-5aef95aa43bf
- Startup/Logon Script added to Group Policy Object - 16fac1a1-21ee-4ca6-b720-458e3855d046

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- The investigation and containment must be performed in every computer controlled by the GPO, where necessary.
- Remove the script from the GPO.
- Check if other GPOs have suspicious scheduled tasks attached.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

The 'Audit Detailed File Share' audit policy must be configured (Success Failure).
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
Object Access >
Audit Detailed File Share (Success,Failure)
```

The 'Audit Directory Service Changes' audit policy must be configured (Success Failure).
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1053/', 'id': 'T1053', 'name': 'Scheduled Task/Job', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1053/005/', 'id': 'T1053.005', 'name': 'Scheduled Task'}]}, {'reference': 'https://attack.mitre.org/techniques/T1484/', 'id': 'T1484', 'name': 'Domain Policy Modification', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1484/001/', 'id': 'T1484.001', 'name': 'Group Policy Modification'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0004/', 'id': 'TA0004', 'name': 'Privilege Escalation'}}]",,,,,,,,,,,,,,,,,,,
476,2021/11/25,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies a potential exploitation of InstallerTakeOver (CVE-2021-41379) default PoC execution. Successful exploitation
allows an unprivileged user to escalate privileges to SYSTEM.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential Privilege Escalation via InstallerFileTakeOver,['https://github.com/klinix5/InstallerFileTakeOver'],73,58c6d58b-a0d3-412d-b3b8-0981a9400607,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'has_guide']",event.ingested,eql,"/* This rule is compatible with both Sysmon and Elastic Endpoint */

process where event.type == ""start"" and
    (?process.Ext.token.integrity_level_name : ""System"" or
    ?winlog.event_data.IntegrityLevel : ""System"") and
    (
      (process.name : ""elevation_service.exe"" and
       not process.pe.original_file_name == ""elevation_service.exe"") or

      (process.parent.name : ""elevation_service.exe"" and
       process.name : (""rundll32.exe"", ""cmd.exe"", ""powershell.exe""))
    )
",now-9m,,"## Triage and analysis

### Investigating Potential Privilege Escalation via InstallerFileTakeOver

InstallerFileTakeOver is a weaponized escalation of privilege proof of concept (EoP PoC) to the CVE-2021-41379 vulnerability. Upon successful exploitation, an
unprivileged user will escalate privileges to SYSTEM/NT AUTHORITY.

This rule detects the default execution of the PoC, which overwrites the `elevation_service.exe` DACL and copies itself
to the location to escalate privileges. An attacker is able to still take over any file that is not in use (locked),
which is outside the scope of this rule.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Look for additional processes spawned by the process, command lines, and network communications.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- Verify whether a digital signature exists in the executable, and if it is valid.

### Related rules

- Suspicious DLL Loaded for Persistence or Privilege Escalation - bfeaf89b-a2a7-48a3-817f-e41829dc61ee

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
477,2022/04/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a suspicious local successful logon event where the Logon Package is Kerberos, the remote address is set to
localhost, followed by a sevice creation from the same LogonId. This may indicate an attempt to leverage a Kerberos
relay attack variant that can be used to elevate privilege locally from a domain joined user to local System privileges.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Service Creation via Local Kerberos Authentication,"['https://github.com/Dec0ne/KrbRelayUp', 'https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html', 'https://github.com/cube0x0/KrbRelay', 'https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82']",73,e4e31051-ee01-4307-a6ee-b21b186958f4,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'Credential Access']",,eql,"sequence by host.id with maxspan=5m
 [authentication where

  /* event 4624 need to be logged */
  event.action == ""logged-in"" and event.outcome == ""success"" and

  /* authenticate locally using relayed kerberos Ticket */
  winlog.event_data.AuthenticationPackageName :""Kerberos"" and winlog.logon.type == ""Network"" and
  cidrmatch(source.ip, ""127.0.0.0/8"", ""::1"") and source.port > 0] by winlog.event_data.TargetLogonId

  [any where
   /* event 4697 need to be logged */
   event.action : ""service-installed""] by winlog.event_data.SubjectLogonId
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1543', 'name': 'Create or Modify System Process', 'reference': 'https://attack.mitre.org/techniques/T1543/', 'subtechnique': [{'id': 'T1543.003', 'name': 'Windows Service', 'reference': 'https://attack.mitre.org/techniques/T1543/003/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,,,
478,2021/01/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Adversaries can use the autostart mechanism provided by the Local Security Authority (LSA) authentication packages for
privilege escalation or persistence by placing a reference to a binary in the Windows registry. The binary will then be
executed by SYSTEM when the authentication packages are loaded.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Potential LSA Authentication Package Abuse,,47,e9abe69b-1deb-4e19-ac4a-5d5ac00f72eb,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"registry where event.type == ""change"" and
  registry.path : ""HKLM\\SYSTEM\\*ControlSet*\\Control\\Lsa\\Authentication Packages"" and
  /* exclude SYSTEM SID - look for changes by non-SYSTEM user */
  not user.id : ""S-1-5-18""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.002', 'name': 'Authentication Package', 'reference': 'https://attack.mitre.org/techniques/T1547/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.002', 'name': 'Authentication Package', 'reference': 'https://attack.mitre.org/techniques/T1547/002/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
479,2020/11/23,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies a privilege escalation attempt via named pipe impersonation. An adversary may abuse this technique by
utilizing a framework such Metasploit's meterpreter getsystem command.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Privilege Escalation via Named Pipe Impersonation,['https://www.ired.team/offensive-security/privilege-escalation/windows-namedpipes-privilege-escalation'],73,3ecbdc9e-e4f2-43fa-8cca-63802125e582,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and
 process.pe.original_file_name in (""Cmd.Exe"", ""PowerShell.EXE"") and
 process.args : ""echo"" and process.args : "">"" and process.args : ""\\\\.\\pipe\\*""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'name': 'Access Token Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1134/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
480,2020/01/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies the loading of a non Microsoft signed DLL that is missing on a default Windows install (phantom DLL) or one
that can be loaded from a different location by a native Windows process. This may be abused to persist or elevate
privileges via privileged file write vulnerabilities.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious DLL Loaded for Persistence or Privilege Escalation,"['https://itm4n.github.io/windows-dll-hijacking-clarified/', 'http://remoteawesomethoughts.blogspot.com/2019/05/windows-10-task-schedulerservice.html', 'https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html', 'https://shellz.club/2020/10/16/edgegdi-dll-for-persistence-and-lateral-movement.html', 'https://windows-internals.com/faxing-your-way-to-system/', 'http://waleedassar.blogspot.com/2013/01/wow64logdll.html']",73,bfeaf89b-a2a7-48a3-817f-e41829dc61ee,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Privilege Escalation']",event.ingested,eql,"any where
 (event.category == ""library"" or (event.category == ""process"" and event.action : ""Image loaded*"")) and
 (
  /* compatible with Elastic Endpoint Library Events */
  (dll.name : (""wlbsctrl.dll"", ""wbemcomn.dll"", ""WptsExtensions.dll"", ""Tsmsisrv.dll"", ""TSVIPSrv.dll"", ""Msfte.dll"",
               ""wow64log.dll"", ""WindowsCoreDeviceInfo.dll"", ""Ualapi.dll"", ""wlanhlp.dll"", ""phoneinfo.dll"", ""EdgeGdi.dll"",
               ""cdpsgshims.dll"", ""windowsperformancerecordercontrol.dll"", ""diagtrack_win.dll"")
   and (dll.code_signature.trusted == false or dll.code_signature.exists == false)) or

  /* compatible with Sysmon EventID 7 - Image Load */
  (file.name : (""wlbsctrl.dll"", ""wbemcomn.dll"", ""WptsExtensions.dll"", ""Tsmsisrv.dll"", ""TSVIPSrv.dll"", ""Msfte.dll"",
               ""wow64log.dll"", ""WindowsCoreDeviceInfo.dll"", ""Ualapi.dll"", ""wlanhlp.dll"", ""phoneinfo.dll"", ""EdgeGdi.dll"",
               ""cdpsgshims.dll"", ""windowsperformancerecordercontrol.dll"", ""diagtrack_win.dll"")
   and not file.code_signature.status == ""Valid"")
  )
",now-9m,,"## Triage and analysis

### Investigating Suspicious DLL Loaded for Persistence or Privilege Escalation

Attackers can execute malicious code by abusing missing modules that processes try to load, enabling them to escalate
privileges or gain persistence. This rule identifies the loading of a non-Microsoft-signed DLL that is missing on a
default Windows installation or one that can be loaded from a different location by a native Windows process.

#### Possible investigation steps

- Examine the DLL signature and identify the process that created it.
  - Investigate any abnormal behaviors by the process such as network connections, registry or file modifications, and
  any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Retrieve the DLL and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently
malicious must be monitored by the security team.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.002', 'name': 'DLL Side-Loading', 'reference': 'https://attack.mitre.org/techniques/T1574/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.001', 'name': 'DLL Search Order Hijacking', 'reference': 'https://attack.mitre.org/techniques/T1574/001/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
481,2021/01/21,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies port monitor and print processor registry modifications. Adversaries may abuse port monitor and print
processors to run malicious DLLs during system boot that will be executed as SYSTEM for privilege escalation and/or
persistence, if permissions allow writing a fully-qualified pathname for that DLL.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Potential Port Monitor or Print Processor Registration Abuse,['https://www.welivesecurity.com/2020/05/21/no-game-over-winnti-group/'],47,8f3e91c7-d791-4704-80a1-42c160d7aa27,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"registry where event.type in (""creation"", ""change"") and
  registry.path : (""HKLM\\SYSTEM\\*ControlSet*\\Control\\Print\\Monitors\\*"",
    ""HKLM\\SYSTEM\\*ControlSet*\\Control\\Print\\Environments\\Windows*\\Print Processors\\*"") and
  registry.data.strings : ""*.dll"" and
  /* exclude SYSTEM SID - look for changes by non-SYSTEM user */
  not user.id : ""S-1-5-18""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.010', 'name': 'Port Monitors', 'reference': 'https://attack.mitre.org/techniques/T1547/010/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.010', 'name': 'Port Monitors', 'reference': 'https://attack.mitre.org/techniques/T1547/010/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
482,2022/08/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/17,['Elastic'],"Detects scripts that contain PowerShell functions, structures, or Windows API functions related to token
impersonation/theft. Attackers may duplicate then impersonate another user's token to escalate privileges and bypass
access controls.
",,"['winlogbeat-*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell Script with Token Impersonation Capabilities,"['https://github.com/decoder-it/psgetsystem', 'https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/Get-System.ps1', 'https://github.com/EmpireProject/Empire/blob/master/data/module_source/privesc/Invoke-MS16032.ps1', 'https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md']",47,11dd9713-0ec6-4110-9707-32daae1ee68c,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:process and
  powershell.file.script_block_text:(
    ""Invoke-TokenManipulation"" or
    ""ImpersonateNamedPipeClient"" or
    ""NtImpersonateThread"" or
    (
      ""STARTUPINFOEX"" and
      ""UpdateProcThreadAttribute""
    ) or
    (
      ""AdjustTokenPrivileges"" and
      ""SeDebugPrivilege""
    ) or
    (
      (""DuplicateToken"" or
      ""DuplicateTokenEx"") and
      (""SetThreadToken"" or
      ""ImpersonateLoggedOnUser"" or 
	  ""CreateProcessWithTokenW"" or 
	  ""CreatePRocessAsUserW"" or 
	  ""CreateProcessAsUserA"")
    ) 
  )
",now-9m,,"## Setup

The 'PowerShell Script Block Logging' logging policy must be configured (Enable).

Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add ""hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Access Token Manipulation', 'id': 'T1134', 'reference': 'https://attack.mitre.org/techniques/T1134/', 'subtechnique': [{'name': 'Token Impersonation/Theft', 'id': 'T1134.001', 'reference': 'https://attack.mitre.org/techniques/T1134/001/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'id': 'T1059', 'subtechnique': [{'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/', 'id': 'T1059.001'}]}, {'name': 'Native API', 'reference': 'https://attack.mitre.org/techniques/T1106/', 'id': 'T1106'}], 'tactic': {'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/', 'id': 'TA0002'}}]",,,,,,,,,,,,,,,,,,,
483,2020/11/26,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects attempts to exploit a privilege escalation vulnerability (CVE-2020-1030) related to the print spooler service.
Exploitation involves chaining multiple primitives to load an arbitrary DLL into the print spooler process running as
SYSTEM.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Suspicious Print Spooler Point and Print DLL,"['https://www.accenture.com/us-en/blogs/cyber-defense/discovering-exploiting-shutting-down-dangerous-windows-print-spooler-vulnerability', 'https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Privilege%20Escalation/privesc_sysmon_cve_20201030_spooler.evtx', 'https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2020-1030']",73,bd7eefee-f671-494e-98df-f01daf9e5f17,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",,eql,"sequence by host.id with maxspan=30s
[registry where
 registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\Printers\\*\\SpoolDirectory"" and
 registry.data.strings : ""C:\\Windows\\System32\\spool\\drivers\\x64\\4""]
[registry where
 registry.path : ""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\Printers\\*\\CopyFiles\\Payload\\Module"" and
 registry.data.strings : ""C:\\Windows\\System32\\spool\\drivers\\x64\\4\\*""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
484,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service. For more
information refer to the following CVE's - CVE-2020-1048, CVE-2020-1337 and CVE-2020-1300 and verify that the impacted
system is patched.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious PrintSpooler Service Executable File Creation,"['https://voidsec.com/cve-2020-1337-printdemon-is-dead-long-live-printdemon/', 'https://www.thezdi.com/blog/2020/7/8/cve-2020-1300-remote-code-execution-through-microsoft-windows-cab-files']",73,5bb4a95d-5a08-48eb-80db-4c3a63ec78a8,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"file where event.type != ""deletion"" and process.name : ""spoolsv.exe"" and
  file.extension : (""exe"", ""dll"") and
  not file.path : (""?:\\Windows\\System32\\spool\\*"", ""?:\\Windows\\Temp\\*"", ""?:\\Users\\*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
485,2021/07/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects deletion of print driver files by an unusual process. This may indicate a clean up attempt post successful
privilege escalation via Print Spooler service related vulnerabilities.
",['    Uninstall or manual deletion of a legitimate printing driver files. Verify the printer file metadata such as\n    manufacturer and signature information.\n    '],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Print Spooler File Deletion,['https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527'],47,c4818812-d44f-47be-aaef-4cfb2f9cc799,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"file where event.type : ""deletion"" and
 not process.name : (""spoolsv.exe"", ""dllhost.exe"", ""explorer.exe"") and
 file.path : ""?:\\Windows\\System32\\spool\\drivers\\x64\\3\\*.dll""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
486,2020/08/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service including
CVE-2020-1048 and CVE-2020-1337.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Print Spooler SPL File Created,['https://safebreach.com/Post/How-we-bypassed-CVE-2020-1048-Patch-and-got-CVE-2020-1337'],73,a7ccae7b-9d2c-44b2-a061-98e5946971fa,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"file where event.type != ""deletion"" and
  file.extension : ""spl"" and
  file.path : ""?:\\Windows\\System32\\spool\\PRINTERS\\*"" and
  not process.name : (""spoolsv.exe"",
                      ""printfilterpipelinesvc.exe"",
                      ""PrintIsolationHost.exe"",
                      ""splwow64.exe"",
                      ""msiexec.exe"",
                      ""poqexec.exe"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious Print Spooler SPL File Created

Print Spooler is a Windows service enabled by default in all Windows clients and servers. The service manages print jobs
by loading printer drivers, receiving files to be printed, queuing them, scheduling, etc.

The Print Spooler service has some known vulnerabilities that attackers can abuse to escalate privileges to SYSTEM, like
CVE-2020-1048 and CVE-2020-1337. This rule looks for unusual processes writing SPL files to the location
`?:\Windows\System32\spool\PRINTERS\`, which is an essential step in exploiting these vulnerabilities.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- If this activity is expected and noisy in your environment, consider adding exceptions — preferably with a combination
of process executable and file conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Ensure that the machine has the latest security updates and is not running legacy Windows versions.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
487,2020/11/26,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a privilege escalation attempt via a rogue Windows directory (Windir) environment variable. This is a known
primitive that is often combined with other vulnerabilities to elevate privileges.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Privilege Escalation via Windir Environment Variable,['https://www.tiraniddo.dev/2017/05/exploiting-environment-variables-in.html'],73,d563aaba-2e72-462b-8658-3e5ea22db3a6,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"registry where registry.path : (""HKEY_USERS\\*\\Environment\\windir"", ""HKEY_USERS\\*\\Environment\\systemroot"") and
 not registry.data.strings : (""C:\\windows"", ""%SystemRoot%"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1574', 'name': 'Hijack Execution Flow', 'reference': 'https://attack.mitre.org/techniques/T1574/', 'subtechnique': [{'id': 'T1574.007', 'name': 'Path Interception by PATH Environment Variable', 'reference': 'https://attack.mitre.org/techniques/T1574/007/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
488,2021/12/12,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a suspicious computer account name rename event, which may indicate an attempt to exploit CVE-2021-42278 to
elevate privileges from a standard domain user to a user with domain admin privileges. CVE-2021-42278 is a security
vulnerability that allows potential attackers to impersonate a domain controller via samAccountName attribute spoofing.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Potential Privileged Escalation via SamAccountName Spoofing,"['https://support.microsoft.com/en-us/topic/kb5008102-active-directory-security-accounts-manager-hardening-changes-cve-2021-42278-5975b463-4c95-45e1-831a-d120004e258e', 'https://cloudbrothers.info/en/exploit-kerberos-samaccountname-spoofing/', 'https://github.com/cube0x0/noPac', 'https://twitter.com/exploitph/status/1469157138928914432', 'https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html']",73,bdcf646b-08d4-492c-870a-6c04e3700034,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Persistence', 'Privilege Escalation']",event.ingested,eql,"iam where event.action == ""renamed-user-account"" and
  /* machine account name renamed to user like account name */
  winlog.event_data.OldTargetUserName : ""*$"" and not winlog.event_data.NewTargetUserName : ""*$""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/', 'subtechnique': [{'id': 'T1078.002', 'name': 'Domain Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1098', 'name': 'Account Manipulation', 'reference': 'https://attack.mitre.org/techniques/T1098/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,,,
489,2022/05/11,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the remote update to a computer account's DnsHostName attribute. If the new value set is a valid domain
controller DNS hostname and the subject computer name is not a domain controller, then it's highly likely a preparation
step to exploit CVE-2022-26923 in an attempt to elevate privileges from a standard domain user to domain admin privileges.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Remote Computer Account DnsHostName Update,"['https://research.ifcr.dk/certifried-active-directory-domain-privilege-escalation-cve-2022-26923-9e098fe298f4', 'https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2022-26923']",73,6bed021a-0afb-461c-acbe-ffdb9574d3f3,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'Active Directory']",,eql,"sequence by host.id with maxspan=5m

  [authentication where event.action == ""logged-in"" and
   winlog.logon.type == ""Network"" and event.outcome == ""success"" and
   not user.name == ""ANONYMOUS LOGON"" and not winlog.event_data.SubjectUserName : ""*$"" and
   not user.domain == ""NT AUTHORITY"" and source.ip != ""127.0.0.1"" and source.ip !=""::1""] by winlog.event_data.TargetLogonId

  [iam where event.action == ""changed-computer-account"" and

   /* if DnsHostName value equal a DC DNS hostname then it's highly suspicious */
    winlog.event_data.DnsHostName : ""??*""] by winlog.event_data.SubjectLogonId
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}, {'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/', 'subtechnique': [{'id': 'T1078.002', 'name': 'Domain Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
490,2020/10/28,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies attempts to bypass User Account Control (UAC) by abusing an elevated COM Interface to launch a rogue Windows
ClipUp program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface,['https://github.com/hfiref0x/UACME'],73,b90cdde7-7e0d-4359-8bf0-2c112ce2008a,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and process.name : ""Clipup.exe"" and
  not process.executable : ""C:\\Windows\\System32\\ClipUp.exe"" and process.parent.name : ""dllhost.exe"" and
  /* CLSID of the Elevated COM Interface IEditionUpgradeManager */
  process.parent.args : ""/Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
491,2020/11/03,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies User Account Control (UAC) bypass attempts by abusing an elevated COM Interface to launch a malicious
program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer,['https://swapcontext.blogspot.com/2020/11/uac-bypasses-from-comautoapprovallist.html'],47,fc7c0fa4-8f03-4b3e-8336-c5feab0be022,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and
 process.executable : ""C:\\*\\AppData\\*\\Temp\\IDC*.tmp\\*.exe"" and
 process.parent.name : ""ieinstal.exe"" and process.parent.args : ""-Embedding""

 /* uncomment once in winlogbeat */
 /* and not (process.code_signature.subject_name == ""Microsoft Corporation"" and process.code_signature.trusted == true) */
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
492,2020/10/19,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies User Account Control (UAC) bypass attempts via the ICMLuaUtil Elevated COM interface. Attackers may attempt
to bypass UAC to stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass via ICMLuaUtil Elevated COM Interface,,73,68d56fdc-7ffa-4419-8e95-81641bd6f845,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name == ""dllhost.exe"" and
 process.parent.args in (""/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}"", ""/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}"") and
 process.pe.original_file_name != ""WerFault.exe""
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
493,2020/08/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies User Account Control (UAC) bypass via hijacking DiskCleanup Scheduled Task. Attackers bypass UAC to
stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass via DiskCleanup Scheduled Task Hijack,,47,1dcc51f6-ba26-49e7-9ef4-2655abb2361e,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and
 process.args : ""/autoclean"" and process.args : ""/d"" and
 not process.executable : (""C:\\Windows\\System32\\cleanmgr.exe"",
                           ""C:\\Windows\\SysWOW64\\cleanmgr.exe"",
                           ""C:\\Windows\\System32\\taskhostw.exe"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
494,2020/10/27,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies attempts to bypass User Account Control (UAC) via DLL side-loading. Attackers may attempt to bypass UAC to
stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass Attempt via Privileged IFileOperation COM Interface,['https://github.com/hfiref0x/UACME'],73,5a14d01d-7ac8-4545-914c-b687c2cf66b3,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"file where event.type : ""change"" and process.name : ""dllhost.exe"" and
  /* Known modules names side loaded into process running with high or system integrity level for UAC Bypass, update here for new modules */
  file.name : (""wow64log.dll"", ""comctl32.dll"", ""DismCore.dll"", ""OskSupport.dll"", ""duser.dll"", ""Accessibility.ni.dll"") and
  /* has no impact on rule logic just to avoid OS install related FPs */
  not file.path : (""C:\\Windows\\SoftwareDistribution\\*"", ""C:\\Windows\\WinSxS\\*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
495,2020/03/17,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies User Account Control (UAC) bypass via eventvwr.exe. Attackers bypass UAC to stealthily execute code with
elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Bypass UAC via Event Viewer,,73,31b4c719-f2b4-41f6-a9bd-fce93c2eaf62,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.parent.name : ""eventvwr.exe"" and
  not process.executable :
            (""?:\\Windows\\SysWOW64\\mmc.exe"",
             ""?:\\Windows\\System32\\mmc.exe"",
             ""?:\\Windows\\SysWOW64\\WerFault.exe"",
             ""?:\\Windows\\System32\\WerFault.exe"")
",now-9m,,"## Triage and analysis

### Investigating Bypass UAC via Event Viewer

Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as low to high integrity levels)
to perform a task under administrator-level permissions, possibly by prompting the user for confirmation.
UAC can deny an operation under high-integrity enforcement, or allow the user to perform the action if they are in the
local administrators group and enter an administrator password when prompted.

For more information about the UAC and how it works, check the [official Microsoft docs page](https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works).

During startup, `eventvwr.exe` checks the registry value of the `HKCU\Software\Classes\mscfile\shell\open\command`
registry key for the location of `mmc.exe`, which is used to open the `eventvwr.msc` saved console file. If the location
of another binary or script is added to this registry value, it will be executed as a high-integrity process without a
UAC prompt being displayed to the user. This rule detects this UAC bypass by monitoring processes spawned by
`eventvwr.exe` other than `mmc.exe` and `werfault.exe`.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
496,2020/10/26,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies an attempt to bypass User Account Control (UAC) by masquerading as a Microsoft trusted Windows directory.
Attackers may bypass UAC to stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass Attempt via Windows Directory Masquerading,['https://medium.com/tenable-techblog/uac-bypass-by-mocking-trusted-directories-24a96675f6e'],73,290aca65-e94d-403b-ba0f-62f320e63f51,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
  process.args : (""C:\\Windows \\system32\\*.exe"", ""C:\\Windows \\SysWOW64\\*.exe"")
",now-9m,,"## Triage and analysis

### Investigating UAC Bypass Attempt via Windows Directory Masquerading

Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as low to high integrity levels)
to perform a task under administrator-level permissions, possibly by prompting the user for confirmation.
UAC can deny an operation under high-integrity enforcement, or allow the user to perform the action if they are in the
local administrators group and enter an administrator password when prompted.

For more information about the UAC and how it works, check the [official Microsoft docs page](https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works).

This rule identifies an attempt to bypass User Account Control (UAC) by masquerading as a Microsoft trusted Windows
directory. Attackers may bypass UAC to stealthily execute code with elevated permissions.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- If any of the spawned processes are suspicious, retrieve them and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
497,2020/10/14,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies attempts to bypass User Account Control (UAC) by hijacking the Microsoft Management Console (MMC) Windows
Firewall snap-in. Attackers bypass UAC to stealthily execute code with elevated permissions.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,UAC Bypass via Windows Firewall Snap-In Hijack,['https://github.com/AzAgarampur/byeintegrity-uac'],47,1178ae09-5aff-460a-9f2f-455cd0ac4d8e,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name == ""mmc.exe"" and
 /* process.Ext.token.integrity_level_name == ""high"" can be added in future for tuning */
 /* args of the Windows Firewall SnapIn */
  process.parent.args == ""WF.msc"" and process.name != ""WerFault.exe""
",now-9m,,"## Triage and analysis

### Investigating UAC Bypass via Windows Firewall Snap-In Hijack

Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as low to high integrity levels)
to perform a task under administrator-level permissions, possibly by prompting the user for confirmation.
UAC can deny an operation under high-integrity enforcement, or allow the user to perform the action if they are in the
local administrators group and enter an administrator password when prompted.

For more information about the UAC and how it works, check the [official Microsoft docs page](https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works).

This rule identifies attempts to bypass User Account Control (UAC) by hijacking the Microsoft Management Console (MMC)
Windows Firewall snap-in. Attackers bypass UAC to stealthily execute code with elevated permissions.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- If any of the spawned processes are suspicious, retrieve them and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
498,2020/09/02,development,,,2022/09/15,['Elastic'],"Identifies User Account Control (UAC) bypass via sdclt.exe. Attackers bypass UAC to stealthily execute code with
elevated permissions.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Bypass UAC via Sdclt,,73,9b54e002-034a-47ac-9307-ad12c03fa900,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",,eql,"/* add winlogbeat-* when process.code_signature.* fields are populated */
/* still needs testing, applicable binary was not available on test machine */

sequence with maxspan=1m
  [process where event.type == ""start"" and process.name : ""sdclt.exe"" and
     /* uncomment once in winlogbeat */
     /* process.code_signature.subject_name == ""Microsoft Corporation"" and process.code_signature.trusted == true and */
     process.args : ""/kickoffelev""
  ] by process.entity_id
  [process where event.type == ""start"" and process.parent.name : ""sdclt.exe"" and
     not (process.executable : ""C:\\Windows\\System32\\sdclt.exe"" or
          process.executable : ""C:\\Windows\\System32\\control.exe"" or
          process.executable : ""C:\\Windows\\SysWOW64\\sdclt.exe"" or
          process.executable : ""C:\\Windows\\SysWOW64\\control.exe"")
  ] by process.parent.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
499,2020/02/18,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/20,['Elastic'],"Identifies Windows programs run from unexpected parent processes. This could indicate masquerading or other strange
activity on a system.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Parent-Child Relationship,"['https://github.com/sbousseaden/Slides/blob/master/Hunting%20MindMaps/PNG/Windows%20Processes%20TH.map.png', 'https://www.andreafortuna.org/2017/06/15/standard-windows-processes-a-brief-reference/']",47,35df0dd8-092d-4a83-88c1-5151a804f31b,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'has_guide']",event.ingested,eql,"process where event.type == ""start"" and
process.parent.name != null and
 (
   /* suspicious parent processes */
   (process.name:""autochk.exe"" and not process.parent.name:""smss.exe"") or
   (process.name:(""fontdrvhost.exe"", ""dwm.exe"") and not process.parent.name:(""wininit.exe"", ""winlogon.exe"")) or
   (process.name:(""consent.exe"", ""RuntimeBroker.exe"", ""TiWorker.exe"") and not process.parent.name:""svchost.exe"") or
   (process.name:""SearchIndexer.exe"" and not process.parent.name:""services.exe"") or
   (process.name:""SearchProtocolHost.exe"" and not process.parent.name:(""SearchIndexer.exe"", ""dllhost.exe"")) or
   (process.name:""dllhost.exe"" and not process.parent.name:(""services.exe"", ""svchost.exe"")) or
   (process.name:""smss.exe"" and not process.parent.name:(""System"", ""smss.exe"")) or
   (process.name:""csrss.exe"" and not process.parent.name:(""smss.exe"", ""svchost.exe"")) or
   (process.name:""wininit.exe"" and not process.parent.name:""smss.exe"") or
   (process.name:""winlogon.exe"" and not process.parent.name:""smss.exe"") or
   (process.name:(""lsass.exe"", ""LsaIso.exe"") and not process.parent.name:""wininit.exe"") or
   (process.name:""LogonUI.exe"" and not process.parent.name:(""wininit.exe"", ""winlogon.exe"")) or
   (process.name:""services.exe"" and not process.parent.name:""wininit.exe"") or
   (process.name:""svchost.exe"" and not process.parent.name:(""MsMpEng.exe"", ""services.exe"")) or
   (process.name:""spoolsv.exe"" and not process.parent.name:""services.exe"") or
   (process.name:""taskhost.exe"" and not process.parent.name:(""services.exe"", ""svchost.exe"")) or
   (process.name:""taskhostw.exe"" and not process.parent.name:(""services.exe"", ""svchost.exe"")) or
   (process.name:""userinit.exe"" and not process.parent.name:(""dwm.exe"", ""winlogon.exe"")) or
   (process.name:(""wmiprvse.exe"", ""wsmprovhost.exe"", ""winrshost.exe"") and not process.parent.name:""svchost.exe"") or
   /* suspicious child processes */
   (process.parent.name:(""SearchProtocolHost.exe"", ""taskhost.exe"", ""csrss.exe"") and not process.name:(""werfault.exe"", ""wermgr.exe"", ""WerFaultSecure.exe"")) or
   (process.parent.name:""autochk.exe"" and not process.name:(""chkdsk.exe"", ""doskey.exe"", ""WerFault.exe"")) or
   (process.parent.name:""smss.exe"" and not process.name:(""autochk.exe"", ""smss.exe"", ""csrss.exe"", ""wininit.exe"", ""winlogon.exe"", ""setupcl.exe"", ""WerFault.exe"")) or
   (process.parent.name:""wermgr.exe"" and not process.name:(""WerFaultSecure.exe"", ""wermgr.exe"", ""WerFault.exe"")) or
   (process.parent.name:""conhost.exe"" and not process.name:(""mscorsvw.exe"", ""wermgr.exe"", ""WerFault.exe"", ""WerFaultSecure.exe""))
  )
",now-9m,,"## Triage and analysis

### Investigating Unusual Parent-Child Relationship

Windows internal/system processes have some characteristics that can be used to spot suspicious activities. One of these
characteristics is parent-child relationships. These relationships can be used to baseline the typical behavior of the
system and then alert on occurrences that don't comply with the baseline.

This rule uses this information to spot suspicious parent and child processes.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/', 'subtechnique': [{'id': 'T1055.012', 'name': 'Process Hollowing', 'reference': 'https://attack.mitre.org/techniques/T1055/012/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
500,2021/07/06,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Detects unusual Print Spooler service (spoolsv.exe) child processes. This may indicate an attempt to exploit privilege
escalation vulnerabilities related to the Printing Service on Windows.
",['    Install or update of a legitimate printing driver. Verify the printer driver file metadata such as manufacturer and\n    signature information.\n    '],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Unusual Print Spooler Child Process,['https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527'],47,ee5300a7-7e31-4a72-a258-250abb8b3aa1,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and
 process.parent.name : ""spoolsv.exe"" and
 (?process.Ext.token.integrity_level_name : ""System"" or
 ?winlog.event_data.IntegrityLevel : ""System"") and

 /* exclusions for FP control below */
 not process.name : (""splwow64.exe"", ""PDFCreator.exe"", ""acrodist.exe"", ""spoolsv.exe"", ""msiexec.exe"", ""route.exe"", ""WerFault.exe"") and
 not process.command_line : ""*\\WINDOWS\\system32\\spool\\DRIVERS*"" and
 not (process.name : ""net.exe"" and process.command_line : (""*stop*"", ""*start*"")) and
 not (process.name : (""cmd.exe"", ""powershell.exe"") and process.command_line : (""*.spl*"", ""*\\program files*"", ""*route add*"")) and
 not (process.name : ""netsh.exe"" and process.command_line : (""*add portopening*"", ""*rule name*"")) and
 not (process.name : ""regsvr32.exe"" and process.command_line : ""*PrintConfig.dll*"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
501,2020/10/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/15,['Elastic'],"Identifies unusual child processes of Service Host (svchost.exe) that traditionally do not spawn any child processes.
This may indicate a code injection or an equivalent form of exploitation.
",['Changes to Windows services or a rarely executed child process.'],"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Unusual Service Host Child Process - Childless Service,,47,6a8ab9cc-4023-4d17-b5df-1a3e16882ce7,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion', 'Privilege Escalation']",event.ingested,eql,"process where event.type == ""start"" and
     process.parent.name : ""svchost.exe"" and

     /* based on svchost service arguments -s svcname where the service is known to be childless */

    process.parent.args : (""WdiSystemHost"",""LicenseManager"",
      ""StorSvc"",""CDPSvc"",""cdbhsvc"",""BthAvctpSvc"",""SstpSvc"",""WdiServiceHost"",
      ""imgsvc"",""TrkWks"",""WpnService"",""IKEEXT"",""PolicyAgent"",""CryptSvc"",
      ""netprofm"",""ProfSvc"",""StateRepository"",""camsvc"",""LanmanWorkstation"",
      ""NlaSvc"",""EventLog"",""hidserv"",""DisplayEnhancementService"",""ShellHWDetection"",
      ""AppHostSvc"",""fhsvc"",""CscService"",""PushToInstall"") and

      /* unknown FPs can be added here */

     not process.name : (""WerFault.exe"",""WerFaultSecure.exe"",""wermgr.exe"") and
     not (process.executable : ""?:\\Windows\\System32\\RelPost.exe"" and process.parent.args : ""WdiSystemHost"") and
     not (process.name : ""rundll32.exe"" and
          process.args : ""?:\\WINDOWS\\System32\\winethc.dll,ForceProxyDetectionOnNextRun"" and process.parent.args : ""WdiServiceHost"") and
     not (process.executable : (""?:\\Program Files\\*"", ""?:\\Program Files (x86)\\*"", ""?:\\Windows\\System32\\Kodak\\kds_i4x50\\lib\\lexexe.exe"") and
          process.parent.args : ""imgsvc"")
",now-9m,,"## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/', 'subtechnique': [{'id': 'T1055.012', 'name': 'Process Hollowing', 'reference': 'https://attack.mitre.org/techniques/T1055/012/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,,,
502,2021/10/13,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies a privilege escalation attempt via rogue named pipe impersonation. An adversary may abuse this technique by
masquerading as a known named pipe and manipulating a privileged process to connect to it.
",,"['winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Privilege Escalation via Rogue Named Pipe Impersonation,"['https://itm4n.github.io/printspoofer-abusing-impersonate-privileges/', 'https://github.com/zcgonvh/EfsPotato', 'https://twitter.com/SBousseaden/status/1429530155291193354']",73,76ddb638-abf7-42d5-be22-4a70b0bf7241,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"file where event.action : ""Pipe Created*"" and
 /* normal sysmon named pipe creation events truncate the pipe keyword */
  file.name : ""\\*\\Pipe\\*""
",now-9m,,"## Setup

Named Pipe Creation Events need to be enabled within the Sysmon configuration by including the following settings:
`condition equal ""contains"" and keyword equal ""pipe""`

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.

","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1134', 'reference': 'https://attack.mitre.org/techniques/T1134/', 'name': 'Access Token Manipulation'}], 'tactic': {'id': 'TA0004', 'reference': 'https://attack.mitre.org/tactics/TA0004/', 'name': 'Privilege Escalation'}}]",,,,,,,,,,,,,,,,,,,
503,2022/02/07,production,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/08/24,['Elastic'],"Identifies the creation of a Windows service by an unusual client process. Services may be created with administrator
privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from
administrator to SYSTEM.
",,"['winlogbeat-*', 'logs-system.*']",kuery,Elastic License v2,Windows Service Installed via an Unusual Client,"['https://www.x86matthew.com/view_post?id=create_svc_rpc', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4697', 'https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0100_windows_audit_security_system_extension.md']",73,55c2bf58-2a39-4c58-a384-c8b1978153c2,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.action:""service-installed""  and (winlog.event_data.ClientProcessId:""0"" or winlog.event_data.ParentProcessId:""0"")
",now-9m,,"## Setup

The 'Audit Security System Extension' logging policy must be configured for (Success)
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
System >
Audit Security System Extension (Success)
```
","[{'framework': 'MITRE ATT&CK', 'technique': [{'reference': 'https://attack.mitre.org/techniques/T1543/', 'id': 'T1543', 'name': 'Create or Modify System Process', 'subtechnique': [{'reference': 'https://attack.mitre.org/techniques/T1543/003/', 'id': 'T1543.003', 'name': 'Windows Service'}]}], 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0004/', 'id': 'TA0004', 'name': 'Privilege Escalation'}}]",,,,,,,,,,,,,,,,,,,
504,2020/09/02,development,,,2022/09/15,['Elastic'],"Identifies probable exploitation of the Web Proxy Auto-Discovery Protocol (WPAD) service. Attackers who have access to
the local network or upstream DNS traffic can inject malicious JavaScript to the WPAD service which can lead to a full
system compromise.
",,['logs-endpoint.events.*'],eql,Elastic License v2,WPAD Service Exploit,,73,ec328da1-d5df-482b-866c-4a435692b1f3,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",,eql,"/* preference would be to use user.sid rather than domain+name, once it is available in ECS + datasources */
/* didn't trigger successfully during testing */

sequence with maxspan=5s
  [process where event.type == ""start"" and process.name : ""svchost.exe"" and
     user.domain : ""NT AUTHORITY"" and user.name : ""LOCAL SERVICE""] by process.entity_id
  [network where network.protocol : ""dns"" and process.name : ""svchost.exe"" and
     dns.question.name : ""wpad"" and process.name : ""svchost.exe""] by process.entity_id
  [network where process.name : ""svchost.exe""
     and network.direction : (""outgoing"", ""egress"") and destination.port == 80] by process.entity_id
  [library where event.type : ""start"" and process.name : ""svchost.exe"" and
     dll.name : ""jscript.dll"" and process.name : ""svchost.exe""] by process.entity_id
  [process where event.type == ""start"" and
     process.parent.name : ""svchost.exe""] by process.parent.entity_id
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,,,
505,2020/02/18,deprecated,"New fields added: required_fields, related_integrations, setup",8.3.0,2022/09/13,['Elastic'],A request to a web application server contained no identifying user agent string.,"['    Some normal applications and scripts may contain no user agent. Most legitimate web requests from the Internet\n    contain a user agent string. Requests from web browsers almost always contain a user agent string. If the source is\n    unexpected, the user unauthorized, or the request unusual, these may indicate suspicious or malicious activity.\n    ']","['apm-*-transaction*', 'traces-apm*']",kuery,Elastic License v2,Web Application Suspicious Activity: No User Agent,['https://en.wikipedia.org/wiki/User_agent'],47,43303fd4-4839-4e48-b2b2-803ab060758d,medium,"['Elastic', 'APM']",event.ingested,query,"url.path:*
",,,,,,,,,,,,,,,,,,,,,2022/09/13,"[{'$state': {'store': 'appState'}, 'exists': {'field': 'user_agent.original'}, 'meta': {'disabled': False, 'indexRefName': 'kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index', 'key': 'user_agent.original', 'negate': True, 'type': 'exists', 'value': 'exists'}}]",
506,2020/02/18,deprecated,,,2022/08/02,['Elastic'],"This rule detects when an internal network client sends DNS traffic directly to the Internet. This is atypical behavior
for a managed network and can be indicative of malware, exfiltration, command and control, or simply
misconfiguration. This DNS activity also impacts your organization's ability to provide enterprise monitoring and
logging of DNS, and it opens your network to a variety of abuses and malicious communications.
","['    Exclude DNS servers from this rule as this is expected behavior. Endpoints usually query local DNS servers defined\n    in their DHCP scopes, but this may be overridden if a user configures their endpoint to use a remote DNS server.\n    This is uncommon in managed enterprise networks because it could break intranet name resolution when split horizon\n    DNS is utilized. Some consumer VPN services and browser plug-ins may send DNS traffic to remote Internet\n    destinations. In that case, such devices or networks can be excluded from this rule when this is expected behavior.\n    ']","['auditbeat-*', 'filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,DNS Activity to the Internet,"['https://www.us-cert.gov/ncas/alerts/TA15-240A', 'https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-81-2.pdf', 'https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml']",47,6ea71ff0-9e95-475b-9506-2580d1ce6154,medium,"['Elastic', 'Network', 'Threat Detection', 'Command and Control', 'Host']",event.ingested,query,"event.category:(network or network_traffic) and (event.type:connection or type:dns) and (destination.port:53 or event.dataset:zeek.dns)
  and source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.0.0.0/24 or
    192.0.0.0/29 or
    192.0.0.8/32 or
    192.0.0.9/32 or
    192.0.0.10/32 or
    192.0.0.170/32 or
    192.0.0.171/32 or
    192.0.2.0/24 or
    192.31.196.0/24 or
    192.52.193.0/24 or
    192.168.0.0/16 or
    192.88.99.0/24 or
    224.0.0.0/4 or
    100.64.0.0/10 or
    192.175.48.0/24 or
    198.18.0.0/15 or
    198.51.100.0/24 or
    203.0.113.0/24 or
    240.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'reference': 'https://attack.mitre.org/tactics/TA0011/', 'id': 'TA0011', 'name': 'Command and Control'}}]",,,,,,,,,,,,,,,,,2022/08/02,,
507,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects events that may indicate the use of FTP network connections to the Internet. The File Transfer
Protocol (FTP) has been around in its current form since the 1980s. It can be a common and efficient procedure on your
network to send and receive files. Because of this, adversaries will also often use this protocol to exfiltrate data
from your network or download new tools. Additionally, FTP is a plain-text protocol which, if intercepted, may expose
usernames and passwords. FTP activity involving servers subject to regulations or compliance standards may be
unauthorized.
","['    FTP servers should be excluded from this rule as this is expected behavior. Some business workflows may use FTP for\n    data exchange. These workflows often have expected characteristics such as users, sources, and destinations. FTP\n    activity involving an unusual source or destination may be more suspicious. FTP activity involving a production\n    server that has no known associated FTP workflow or business requirement is often suspicious.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,FTP (File Transfer Protocol) Activity to the Internet,,21,87ec6396-9ac4-4706-bcf0-2ebb22002f43,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:(20 or 21) or event.dataset:zeek.ftp) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1048', 'name': 'Exfiltration Over Alternative Protocol', 'reference': 'https://attack.mitre.org/techniques/T1048/'}], 'tactic': {'id': 'TA0010', 'name': 'Exfiltration', 'reference': 'https://attack.mitre.org/tactics/TA0010/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
508,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects events that use common ports for Internet Relay Chat (IRC) to the Internet. IRC is a common protocol
that can be used for chat and file transfers. This protocol is also a good candidate for remote control of malware and
data transfers to and from a network.
","[""    IRC activity may be normal behavior for developers and engineers but is unusual for non-engineering end users. IRC\n    activity involving an unusual source or destination may be more suspicious. IRC activity involving a production\n    server is often suspicious. Because these ports are in the ephemeral range, this rule may false under certain\n    conditions, such as when a NAT-ed web server replies to a client which has used a port in the range by coincidence.\n    In this case, these servers can be excluded. Some legacy applications may use these ports, but this is very uncommon\n    and usually only appears in local traffic using private IPs, which does not match this rule's conditions.\n    ""]","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,IRC (Internet Relay Chat) Protocol Activity to the Internet,,47,c6474c34-4953-447a-903e-9fcb7b6661aa,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:(6667 or 6697) or event.dataset:zeek.irc) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1048', 'name': 'Exfiltration Over Alternative Protocol', 'reference': 'https://attack.mitre.org/techniques/T1048/'}], 'tactic': {'id': 'TA0010', 'name': 'Exfiltration', 'reference': 'https://attack.mitre.org/tactics/TA0010/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
509,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"TCP Port 8000 is commonly used for development environments of web server software. It generally should not be exposed
directly to the Internet. If you are running software like this on the Internet, you should consider placing it behind a
reverse proxy.
","['    Because this port is in the ephemeral range, this rule may false under certain conditions, such as when a NATed web\n    server replies to a client which has used a port in the range by coincidence. In this case, such servers can be\n    excluded. Some applications may use this port but this is very uncommon and usually appears in local traffic using\n    private IPs, which this rule does not match. Some cloud environments, particularly development environments, may use\n    this port when VPNs or direct connects are not in use and cloud instances are accessed across the Internet.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,TCP Port 8000 Activity to the Internet,,21,08d5d7e2-740f-44d8-aeda-e41f4263efaf,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and destination.port:8000 and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
510,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects events that may indicate use of a PPTP VPN connection. Some threat actors use these types of
connections to tunnel their traffic while avoiding detection.
","['    Some networks may utilize PPTP protocols but this is uncommon as more modern VPN technologies are available. Usage\n    that is unfamiliar to local network administrators can be unexpected and suspicious. Torrenting applications may use\n    this port. Because this port is in the ephemeral range, this rule may false under certain conditions, such as when\n    an application server replies to a client that used this port by coincidence. This is uncommon but such servers can\n    be excluded.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,PPTP (Point to Point Tunneling Protocol) Activity,,21,d2053495-8fe7-4168-b3df-dad844046be3,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and destination.port:1723
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
511,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects events that may describe network events of proxy use to the Internet. It includes popular HTTP proxy
ports and SOCKS proxy ports. Typically, environments will use an internal IP address for a proxy server. It can also be
used to circumvent network controls and detection mechanisms.
","['    Some proxied applications may use these ports but this usually occurs in local traffic using private IPs which this\n    rule does not match. Proxies are widely used as a security technology but in enterprise environments this is usually\n    local traffic which this rule does not match. If desired, internet proxy services using these ports can be added to\n    allowlists. Some screen recording applications may use these ports. Proxy port activity involving an unusual source\n    or destination may be more suspicious. Some cloud environments may use this port when VPNs or direct connects are\n    not in use and cloud instances are accessed across the Internet. Because these ports are in the ephemeral range,\n    this rule may false under certain conditions such as when a NATed web server replies to a client which has used a\n    port in the range by coincidence. In this case, such servers can be excluded if desired.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Proxy Port Activity to the Internet,,47,ad0e5e75-dd89-4875-8d0a-dfdc1828b5f3,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:(1080 or 3128 or 8080) or event.dataset:zeek.socks) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
512,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects events that may describe SMTP traffic from internal hosts to a host across the Internet. In an
enterprise network, there is typically a dedicated internal host that performs this function. It is also frequently
abused by threat actors for command and control, or data exfiltration.
","['    NATed servers that process email traffic may false and should be excluded from this rule as this is expected\n    behavior for them. Consumer and personal devices may send email traffic to remote Internet destinations. In this\n    case, such devices or networks can be excluded from this rule if this is expected behavior.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SMTP to the Internet,,21,67a9beba-830d-4035-bfe8-40b7e28f8ac4,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:(25 or 465 or 587) or event.dataset:zeek.smtp) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1048', 'name': 'Exfiltration Over Alternative Protocol', 'reference': 'https://attack.mitre.org/techniques/T1048/'}], 'tactic': {'id': 'TA0010', 'name': 'Exfiltration', 'reference': 'https://attack.mitre.org/tactics/TA0010/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
513,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects events that may describe database traffic (MS SQL, Oracle, MySQL, and Postgresql) across the Internet.
Databases should almost never be directly exposed to the Internet, as they are frequently targeted by threat actors to
gain initial access to network resources.
","['    Because these ports are in the ephemeral range, this rule may false under certain conditions such as when a NATed\n    web server replies to a client which has used a port in the range by coincidence. In this case, such servers can be\n    excluded if desired. Some cloud environments may use this port when VPNs or direct connects are not in use and\n    database instances are accessed directly across the Internet.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SQL Traffic to the Internet,,47,139c7458-566a-410c-a5cd-f80238d6a5cd,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:(1433 or 1521 or 3306 or 5432) or event.dataset:zeek.mysql) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
514,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects network events that may indicate the use of SSH traffic from the Internet. SSH is commonly used by
system administrators to remotely control a system using the command line shell. If it is exposed to the Internet, it
should be done with strong security controls as it is frequently targeted and exploited by threat actors as an initial
access or backdoor vector.
","['    Some network security policies allow SSH directly from the Internet but usage that is unfamiliar to server or\n    network owners can be unexpected and suspicious. SSH services may be exposed directly to the Internet in some\n    networks such as cloud environments. In such cases, only SSH gateways, bastions or jump servers may be expected\n    expose SSH directly to the Internet and can be exempted from this rule. SSH may be required by some work-flows such\n    as remote access and support for specialized software products and servers. Such work-flows are usually known and\n    not unexpected.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SSH (Secure Shell) from the Internet,,47,ea0784f0-a4d7-4fea-ae86-4baaf27a6f17,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:22 or event.dataset:zeek.ssh) and
  not source.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  ) and
  destination.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1021', 'name': 'Remote Services', 'reference': 'https://attack.mitre.org/techniques/T1021/'}], 'tactic': {'id': 'TA0008', 'name': 'Lateral Movement', 'reference': 'https://attack.mitre.org/tactics/TA0008/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
515,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects network events that may indicate the use of SSH traffic from the Internet. SSH is commonly used by
system administrators to remotely control a system using the command line shell. If it is exposed to the Internet, it
should be done with strong security controls as it is frequently targeted and exploited by threat actors as an initial
access or backdoor vector.
","['    SSH connections may be made directly to Internet destinations in order to access Linux cloud server instances but\n    such connections are usually made only by engineers. In such cases, only SSH gateways, bastions or jump servers may\n    be expected Internet destinations and can be exempted from this rule. SSH may be required by some work-flows such as\n    remote access and support for specialized software products and servers. Such work-flows are usually known and not\n    unexpected. Usage that is unfamiliar to server or network owners can be unexpected and suspicious.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,SSH (Secure Shell) to the Internet,,21,6f1500bc-62d7-4eb9-8601-7485e87da2f4,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:22 or event.dataset:zeek.ssh) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
516,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects network events that may indicate the use of Tor traffic to the Internet. Tor is a network protocol
that sends traffic through a series of encrypted tunnels used to conceal a user's location and usage. Tor may be used by
threat actors as an alternate communication pathway to conceal the actor's identity and avoid detection.
","['    Tor client activity is uncommon in managed enterprise networks but may be common in unmanaged or public networks\n    where few security policies apply. Because these ports are in the ephemeral range, this rule may false under certain\n    conditions such as when a NATed web server replies to a client which has used one of these ports by coincidence. In\n    this case, such servers can be excluded if desired.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Tor Activity to the Internet,,47,7d2c38d7-ede7-4bdf-b140-445906e6c540,medium,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Command and Control']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and destination.port:(9001 or 9030) and
  source.ip:(10.0.0.0/8 or
             172.16.0.0/12 or
             192.168.0.0/16) and

  not destination.ip:(10.0.0.0/8 or
                      127.0.0.0/8 or
                      169.254.0.0/16 or
                      172.16.0.0/12 or
                      192.168.0.0/16 or
                      224.0.0.0/4 or
                      ""::1"" or
                      ""FE80::/10"" or
                      ""FF00::/8"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1090', 'name': 'Proxy', 'reference': 'https://attack.mitre.org/techniques/T1090/', 'subtechnique': [{'id': 'T1090.003', 'name': 'Multi-hop Proxy', 'reference': 'https://attack.mitre.org/techniques/T1090/003/'}]}], 'tactic': {'id': 'TA0011', 'name': 'Command and Control', 'reference': 'https://attack.mitre.org/tactics/TA0011/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
517,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"The Tcpdump program ran on a Linux host. Tcpdump is a network monitoring or packet sniffing tool that can be used to
capture insecure credentials or data in motion. Sniffing can also be used to discover details of network services as a
prelude to lateral movement or defense evasion.
",['    Some normal use of this command may originate from server or network administrators engaged in network\n    troubleshooting.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Network Sniffing via Tcpdump,,21,7a137d76-ce3d-48e2-947d-2747796a78c0,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Credential Access']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:tcpdump
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1040', 'name': 'Network Sniffing', 'reference': 'https://attack.mitre.org/techniques/T1040/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1040', 'name': 'Network Sniffing', 'reference': 'https://attack.mitre.org/techniques/T1040/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
518,2020/04/24,deprecated,,,2022/07/25,['Elastic'],"Adversaries may attempt to disable the iptables or firewall service in an attempt to affect how a host is allowed to
receive or send network traffic.
",,"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Attempt to Disable IPTables or Firewall,,47,125417b8-d3df-479f-8418-12d7e034fee3,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:ufw and process.args:(allow or disable or reset) or

  (((process.name:service and process.args:stop) or
     (process.name:chkconfig and process.args:off) or
     (process.name:systemctl and process.args:(disable or stop or kill))) and
   process.args:(firewalld or ip6tables or iptables))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1562', 'name': 'Impair Defenses', 'reference': 'https://attack.mitre.org/techniques/T1562/', 'subtechnique': [{'id': 'T1562.001', 'name': 'Disable or Modify Tools', 'reference': 'https://attack.mitre.org/techniques/T1562/001/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2022/07/25,,
519,2020/04/17,deprecated,,,2021/04/15,['Elastic'],Adversaries may encode/decode data in an attempt to evade detection by host- or network-based security controls.,['    Automated tools such as Jenkins may encode or decode files as part of their normal behavior. These events can be\n    filtered by the process executable or username values.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Base64 Encoding/Decoding Activity,,21,97f22dab-84e8-409d-955e-dacd1d31670b,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.name:(base64 or base64plain or base64url or base64mime or base64pem)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1140', 'name': 'Deobfuscate/Decode Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1140/'}, {'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
520,2020/08/31,deprecated,,,2022/08/03,['Elastic'],Identifies a suspicious Conhost child process which may be an indication of code injection activity.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Suspicious Process from Conhost,"['https://modexp.wordpress.com/2018/09/12/process-injection-user-data/', 'https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Defense%20Evasion/evasion_codeinj_odzhan_conhost_sysmon_10_1.evtx']",73,28896382-7d4f-4d50-9b72-67091901fd26,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.parent.name : ""conhost.exe"" and
  not process.executable : (""?:\\Windows\\splwow64.exe"", ""?:\\Windows\\System32\\WerFault.exe"", ""?:\\Windows\\System32\\conhost.exe"")
",now-9m,,"## Triage and analysis

### Investigating Suspicious Process from Conhost

The Windows Console Host, or `conhost.exe`, is both the server application for all of the Windows Console APIs as well as
the classic Windows user interface for working with command-line applications.

The `conhost.exe` process doesn't normally have child processes. Any processes spawned by the `conhost.exe` process can indicate code
injection activity or a suspicious process masquerading as the `conhost.exe` process.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file
modifications, and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behaviors in the alert timeframe.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled tasks creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### Related rules

- Conhost Spawned By Suspicious Parent Process - 05b358de-aa6d-4f6c-89e6-78f74018b43b
- Suspicious PowerShell Engine ImageLoad - 852c1f19-68e8-43a6-9dce-340771fe1be3

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1055', 'name': 'Process Injection', 'reference': 'https://attack.mitre.org/techniques/T1055/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2022/08/03,,
521,2020/02/18,deprecated,,,2021/04/15,['Elastic'],Identifies possibly suspicious activity using trusted Windows developer activity.,['These programs may be used by Windows developers but use by non-engineers is unusual.'],"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",kuery,Elastic License v2,Trusted Developer Application Usage,,21,9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae1,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:(MSBuild.exe or msxsl.exe)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1127', 'name': 'Trusted Developer Utilities Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1127/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
522,2020/04/17,deprecated,,,2021/04/15,['Elastic'],Adversaries may encode/decode data in an attempt to evade detection by host- or network-based security controls.,['    Automated tools such as Jenkins may encode or decode files as part of their normal behavior. These events can be\n    filtered by the process executable or username values.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Hex Encoding/Decoding Activity,,21,a9198571-b135-4a76-b055-e3e5a476fd83,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Defense Evasion']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:(hexdump or od or xxd)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1140', 'name': 'Deobfuscate/Decode Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1140/'}, {'id': 'T1027', 'name': 'Obfuscated Files or Information', 'reference': 'https://attack.mitre.org/techniques/T1027/'}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
523,2020/02/18,deprecated,,,2020/10/30,['Elastic'],"Identifies mshta.exe making a network connection. This may indicate adversarial activity, as mshta.exe is often
leveraged by adversaries to execute malicious scripts and evade detection.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Network Connection via Mshta,['https://www.fireeye.com/blog/threat-research/2017/05/cyber-espionage-apt32.html'],47,a4ec1382-4557-452b-89ba-e413b22ed4b8,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",,eql,"/* duplicate of Mshta Making Network Connections - c2d90150-0133-451c-a783-533e736c12d7 */

sequence by process.entity_id
  [process where process.name : ""mshta.exe"" and event.type == ""start""]
  [network where process.name : ""mshta.exe""]
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'Signed Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.005', 'name': 'Mshta', 'reference': 'https://attack.mitre.org/techniques/T1218/005/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2020/10/30,,
524,2021/07/30,deprecated,EQL regex had a bug when dealing with wildcard fields that was fixed in 7.16 (elastic/elasticsearch/issues/78391),7.16.0,2022/08/02,['Elastic'],"Identifies process execution events where the command line value contains a long sequence of whitespace characters or
multiple occurrences of contiguous whitespace. Attackers may attempt to evade signature-based detections by padding
their malicious command with unnecessary whitespace characters. These observations should be investigated for malicious
behavior.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Whitespace Padding in Process Command Line,['https://twitter.com/JohnLaTwC/status/1419251082736201737'],47,e0dacebe-4311-4d50-9387-b17e89c2e7fd,medium,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Defense Evasion']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  process.command_line regex "".*[ ]{20,}.*"" or

  /* this will match on 3 or more separate occurrences of 3+ contiguous whitespace characters */
  process.command_line regex ""([^ ]+[ ]{3,}[^ ]*){3,}.*""
",now-9m,,"## Triage and analysis

### Investigating Whitespace Padding in Process Command Line

This rule identifies process execution events where the command line value contains a long sequence of whitespace
characters or multiple occurrences of contiguous whitespace. Attackers may attempt to evade signature-based detections
by padding their malicious command with unnecessary whitespace characters.

#### Possible investigation steps

- Analyze the command line of the process in question for evidence of malicious code execution.
- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate abnormal behaviors observed by the subject process such as network connections, registry or file
modifications, and any spawned child processes.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled tasks creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- Alerts derived from this rule are not inherently malicious. Analysts can dismiss the alert if they don't find enough
evidence of further suspicious activity.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove the malicious certificate from the root certificate store.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).

## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
","[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2022/08/02,,
525,2020/12/04,deprecated,,,2022/08/02,['Elastic'],"Enumeration of files and directories using built-in tools. Adversaries may use the information discovered to plan
follow-on activity.
","[""    Enumeration of files and directories may not be inherently malicious and noise may come from scripts, automation\n    tools, or normal command line usage. It's important to baseline your environment to determine the amount of expected\n    noise and exclude any known FP's from the rule.\n    ""]","['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,File and Directory Discovery,,21,7b08314d-47a0-4b71-ae4e-16544176924f,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery']",,eql,"sequence by agent.id, user.name with maxspan=1m
[process where event.type in (""start"", ""process_started"") and
  ((process.name : ""cmd.exe"" or process.pe.original_file_name == ""Cmd.Exe"") and process.args : ""dir"") or
    process.name : ""tree.com""]
[process where event.type in (""start"", ""process_started"") and
  ((process.name : ""cmd.exe"" or process.pe.original_file_name == ""Cmd.Exe"") and process.args : ""dir"") or
    process.name : ""tree.com""]
[process where event.type in (""start"", ""process_started"") and
  ((process.name : ""cmd.exe"" or process.pe.original_file_name == ""Cmd.Exe"") and process.args : ""dir"") or
    process.name : ""tree.com""]
",now-9m,,"## Triage and analysis

### Investigating File and Directory Discovery

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for three directory-listing commands in one minute, which can indicate attempts to locate valuable files,
specific file types or installed programs.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate abnormal behaviors observed using the account, such as commands executed, files created or modified, and
network connections.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection via the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
","[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1083', 'name': 'File and Directory Discovery', 'reference': 'https://attack.mitre.org/techniques/T1083/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,2022/08/02,,
526,2020/02/18,deprecated,,,2021/04/15,['Elastic'],Adversaries may attempt to get information about running processes on a system.,"[""    Administrators may use the tasklist command to display a list of currently running processes. By itself, it does not\n    indicate malicious activity. After obtaining a foothold, it's possible adversaries may use discovery commands like\n    tasklist to get information about running processes.\n    ""]","['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",kuery,Elastic License v2,Process Discovery via Tasklist,,21,cc16f774-59f9-462d-8b98-d27ccd4519ec,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:tasklist.exe
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1057', 'name': 'Process Discovery', 'reference': 'https://attack.mitre.org/techniques/T1057/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
527,2020/12/04,deprecated,,,2021/04/15,['Elastic'],"Enumeration or discovery of the Windows registry using reg.exe. This information can be used to perform follow-on
activities.
",,"['logs-endpoint.events.*', 'winlogbeat-*', 'logs-windows.*']",eql,Elastic License v2,Query Registry via reg.exe,,21,68113fdc-3105-4cdd-85bb-e643c416ef0b,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Discovery']",event.ingested,eql,"process where event.type in (""start"", ""process_started"") and
  (process.name : ""reg.exe"" or process.pe.original_file_name == ""reg.exe"") and
  process.args == ""query""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1012', 'name': 'Query Registry', 'reference': 'https://attack.mitre.org/techniques/T1012/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
528,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"The whoami application was executed on a Linux host. This is often used by tools and persistence mechanisms to test for
privileged access.
",['    Security testing tools and frameworks may run this command. Some normal use of this command may originate from\n    automation tools and frameworks.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,User Discovery via Whoami,,21,120559c6-5e24-49f4-9e30-8ffe697df6b9,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Discovery']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:whoami
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1033', 'name': 'System Owner/User Discovery', 'reference': 'https://attack.mitre.org/techniques/T1033/'}], 'tactic': {'id': 'TA0007', 'name': 'Discovery', 'reference': 'https://attack.mitre.org/tactics/TA0007/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
529,2022/02/24,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary apt/apt-get abuse to breakout out of restricted shells or environments by spawning an
interactive system shell. The apt utility allows us to manage installation and removal of softwares on Debian based
Linux distributions and the activity of spawning shell is not a standard use of this binary for a user or system
administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their
access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via  apt/apt-get Changelog Escape,"['https://gtfobins.github.io/gtfobins/apt/', 'https://gtfobins.github.io/gtfobins/apt-get/']",47,8fed8450-847e-43bd-874c-3bbf0cd425f3,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name == ""sensible-pager"" and
  process.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""sh"", ""bash"", ""dash"") and
  process.parent.name in (""apt"", ""apt-get"") and process.parent.args == ""changelog""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
530,2022/02/24,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary awk abuse to breakout out of restricted shells or environments by spawning an interactive system
shell. The awk utility is a text processing language used for data extraction and reporting tools and the activity of
spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially
malicious actor attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via awk Commands,"['https://gtfobins.github.io/gtfobins/nawk/', 'https://gtfobins.github.io/gtfobins/mawk/']",47,10754992-28c7-4472-be5b-f3770fd04f2d,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""sh"", ""bash"", ""dash"") and
  process.parent.name in (""nawk"", ""mawk"", ""awk"", ""gawk"") and process.parent.args : ""BEGIN {system(*)}""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
531,2022/03/15,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary busybox abuse to break out from restricted environments by spawning an interactive system
shell.The busybox is software utility suite that provides several Unix utilities in a single executable file and the
activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a
potentially malicious actor attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via busybox Shell Evasion,['https://gtfobins.github.io/gtfobins/busybox/'],47,e9b4a3c7-24fc-49fd-a00f-9c938031eef1,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name == ""busybox"" and process.args_count == 2 and process.args in (""/bin/sh"", ""/bin/ash"", ""sh"", ""ash"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
532,2022/03/15,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary c89/c99 abuse to break out from restricted environments by spawning an interactive system
shell.The c89/c99 utility is an interface to the standard C compilation system and the activity of spawing a shell is
not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor
attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via c89/c99 Shell evasion,"['https://gtfobins.github.io/gtfobins/c89/', 'https://gtfobins.github.io/gtfobins/c99/']",47,1859ce38-6a50-422b-a5e8-636e231ea0cd,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""sh"", ""dash"", ""bash"") and
  process.parent.name in (""c89"",""c99"") and process.parent.args == ""-wrapper"" and
  process.parent.args in (""sh,-s"", ""bash,-s"", ""dash,-s"", ""/bin/sh,-s"", ""/bin/bash,-s"", ""/bin/dash,-s"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
533,2020/02/18,deprecated,,,2021/04/15,['Elastic'],Identifies a suspicious parent child process relationship with cmd.exe descending from PowerShell.exe.,,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",kuery,Elastic License v2,PowerShell spawning Cmd,,21,0f616aee-8161-4120-857e-742366f5eeb3,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and
  process.parent.name:powershell.exe and process.name:cmd.exe
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.001', 'name': 'PowerShell', 'reference': 'https://attack.mitre.org/techniques/T1059/001/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
534,2022/03/17,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary cpulimit abuse to break out from restricted environments by spawning an interactive system
shell. The cpulimit utility is used to restrict the CPU usage of a process in cases of CPU or system load exceeding the
defined threshold and the activity of spawning a shell is not a standard use of this binary by a user or system
administrator. This can potentially indicate a malicious actor attempting to improve the capabilities or stability of
their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via cpulimit Shell Evasion,['https://gtfobins.github.io/gtfobins/cpulimit/'],47,0968cfbd-40f0-4b1c-b7b1-a60736c7b241,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""bash"", ""sh"", ""dash"") and
  process.parent.name == ""cpulimit"" and process.parent.args == ""-f"" and
  process.parent.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""sh"", ""bash"", ""dash"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
535,2022/03/21,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary crash abuse to break out from restricted environments by spawning an interactive system shell.
The crash utility helps analyze Linux crash dump data or a live system and the activity of spawning a shell is not a
standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to
improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via crash Shell evasion,['https://gtfobins.github.io/gtfobins/crash/'],47,ee619805-54d7-4c56-ba6f-7717282ddd73,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.parent.name == ""crash"" and process.parent.args == ""-h"" and process.name == ""sh""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
536,2022/02/24,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary env abuse to break out from restricted environments by spawning an interactive system shell. The
env utility is a shell command for Unix-like operating systems and is used to print a list of environment variables. The
activity of spawning a shell is not a standard use of this binary for a user or system administrator. It indicates a
potentially malicious actor attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via env Shell Evasion,['https://gtfobins.github.io/gtfobins/env/'],47,72d33577-f155-457d-aad3-379f9b750c97,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name : ""env"" and process.args_count == 2 and process.args : (""/bin/sh"", ""/bin/bash"", ""sh"", ""bash"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
537,2022/03/07,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary expect command abuse to break out from restricted environments by spawning an interactive system
shell. The expect utility allows us to automate control of interactive applications such as Telnet, FTP, SSH and others.
The activity of spawning shell is not a standard use of this binary for a user or system administrator and could
potentially indicate malicious actor attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via the expect command,['https://gtfobins.github.io/gtfobins/expect/'],47,fd3fc25e-7c7c-4613-8209-97942ac609f6,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""bash"", ""sh"", ""dash"") and
  process.parent.name == ""expect"" and process.parent.args == ""-c"" and
  process.parent.args in (""spawn /bin/sh;interact"", ""spawn /bin/bash;interact"", ""spawn /bin/dash;interact"", ""spawn sh;interact"", ""spawn bash;interact"", ""spawn dash;interact"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
538,2022/02/28,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary find abuse to break out from restricted environments by spawning an interactive system shell.
The find command in Unix is a command line utility for walking a file hierarchy. The activity of spawning shell is not a
standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to
improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via the find command,['https://gtfobins.github.io/gtfobins/find/'],47,6f683345-bb10-47a7-86a7-71e9c24fb358,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""bash"", ""sh"") and
  process.parent.name == ""find"" and process.parent.args == ""-exec"" and
  process.parent.args == "";"" and process.parent.args in (""/bin/bash"", ""/bin/sh"", ""bash"", ""sh"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
539,2022/03/22,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary flock abuse to break out from restricted environments by spawning an interactive system shell.
The flock utility allows users to manage advisory file locks in shell scripts or on the command line. The activity of
spawning a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially
malicious actor attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via flock Shell evasion,['https://gtfobins.github.io/gtfobins/flock/'],47,f52362cd-baf1-4b6d-84be-064efc826461,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.parent.name == ""flock"" and process.parent.args == ""-u"" and process.parent.args == ""/"" and process.parent.args in (""/bin/sh"", ""/bin/bash"", ""/bin/dash"", ""sh"", ""bash"", ""dash"") and process.name in (""bash"", ""dash"", ""sh"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
540,2022/03/09,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary gcc abuse to break out from restricted environments by spawning an interactive system shell. The
gcc utility is a complier system for various languages and mainly used to compile C and C++ programs. The activity of
spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially
malicious actor attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via the gcc command,['https://gtfobins.github.io/gtfobins/gcc/'],47,da986d2c-ffbf-4fd6-af96-a88dbf68f386,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""sh"", ""dash"", ""bash"")  and
  process.parent.name == ""gcc"" and process.parent.args == ""-wrapper"" and
  process.parent.args in (""sh,-s"", ""bash,-s"", ""dash,-s"", ""/bin/sh,-s"", ""/bin/bash,-s"", ""/bin/dash,-s"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
541,2020/02/18,deprecated,,,2022/07/25,['Elastic'],Identifies processes running in a temporary folder. This is sometimes done by adversaries to hide malware.,"['    Build systems, like Jenkins, may start processes in the `/tmp` directory. These can be exempted by name or by\n    username.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Unusual Process Execution - Temp,,47,df959768-b0c9-4d45-988c-5606a2be8e5a,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.working_directory:/tmp and
  not process.parent.name:(update-motd-updates-available or
                           apt or apt-* or
                           cnf-update-db or
                           appstreamcli or
                           unattended-upgrade or
                           packagekitd) and
  not process.args:(/usr/lib/update-notifier/update-motd-updates-available or
                    /var/lib/command-not-found/)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/07/25,,
542,2022/03/09,deprecated,,,2022/05/09,['Elastic'],"Identifies MySQL server abuse to break out from restricted environments by spawning an interactive system shell. The
MySQL server is an open source relational database management system. The activity of spawning shell is not a standard
use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve
the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via the mysql command,['https://gtfobins.github.io/gtfobins/mysql/'],47,83b2c6e5-e0b2-42d7-8542-8f3af86a1acb,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name in (""bash"", ""sh"", ""dash"") and
  process.parent.name == ""mysql"" and process.parent.args == ""-e"" and
  process.parent.args : (""\\!*sh"", ""\\!*bash"", ""\\!*dash"", ""\\!*/bin/sh"", ""\\!*/bin/bash"", ""\\!*/bin/dash"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
543,2022/03/10,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary SSH abuse to break out from restricted environments by spawning an interactive system shell. The
SSH protocol is a network protocol that gives users, particularly system administrators, a secure way to access a
computer over a network. The activity of spawning shell is not a standard use of this binary for a user or system
administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their
access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via the SSH command,['https://gtfobins.github.io/gtfobins/ssh/'],47,97da359b-2b61-4a40-b2e4-8fc48cf7a294,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.name : (""bash"", ""sh"", ""dash"") and
  process.parent.name == ""ssh"" and process.parent.args == ""-o"" and
  process.parent.args in (""ProxyCommand=;sh 0<&2 1>&2"", ""ProxyCommand=;bash 0<&2 1>&2"", ""ProxyCommand=;dash 0<&2 1>&2"", ""ProxyCommand=;/bin/sh 0<&2 1>&2"", ""ProxyCommand=;/bin/bash 0<&2 1>&2"", ""ProxyCommand=;/bin/dash 0<&2 1>&2"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
544,2020/03/25,deprecated,,,2021/03/17,['Elastic'],"RegSvcs.exe and RegAsm.exe are Windows command line utilities that are used to register .NET Component Object Model
(COM) assemblies. Adversaries can use RegSvcs.exe and RegAsm.exe to proxy execution of code through a trusted Windows
utility.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",kuery,Elastic License v2,Execution via Regsvcs/Regasm,,21,47f09343-8d1f-4bb5-8bb0-00c9d18f5010,low,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Execution']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:(RegAsm.exe or RegSvcs.exe)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1218', 'name': 'Signed Binary Proxy Execution', 'reference': 'https://attack.mitre.org/techniques/T1218/', 'subtechnique': [{'id': 'T1218.009', 'name': 'Regsvcs/Regasm', 'reference': 'https://attack.mitre.org/techniques/T1218/009/'}]}], 'tactic': {'id': 'TA0005', 'name': 'Defense Evasion', 'reference': 'https://attack.mitre.org/tactics/TA0005/'}}]",,,,,,,,,,,,,,,,,2021/03/17,,
545,2022/03/03,deprecated,,,2022/05/09,['Elastic'],"Identifies Linux binary find abuse to break out from restricted environments by spawning an interactive system shell.
The vi/vim editor is the standard text editor in Linux distributions, and the activity of spawning a shell is not a
standard use of this binary by a user or system administrator. This could potentially indicate a malicious actor
attempting to improve the capabilities or stability of their access.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Linux Restricted Shell Breakout via the vi command,['https://gtfobins.github.io/gtfobins/vi/'],47,89583d1b-3c2e-4606-8b74-0a9fd2248e88,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Execution', 'GTFOBins']",event.ingested,eql,"process where event.type == ""start"" and process.parent.name in (""vi"", ""vim"") and process.parent.args == ""-c"" and process.parent.args in ("":!/bin/bash"", "":!/bin/sh"", "":!bash"", "":!sh"") and process.name in (""bash"", ""sh"")
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1059', 'name': 'Command and Scripting Interpreter', 'reference': 'https://attack.mitre.org/techniques/T1059/', 'subtechnique': [{'id': 'T1059.004', 'name': 'Unix Shell', 'reference': 'https://attack.mitre.org/techniques/T1059/004/'}]}], 'tactic': {'id': 'TA0002', 'name': 'Execution', 'reference': 'https://attack.mitre.org/tactics/TA0002/'}}]",,,,,,,,,,,,,,,,,2022/05/09,,
546,2021/06/06,deprecated,,,2021/08/02,['Elastic'],Identifies the export of an Amazon Relational Database Service (RDS) Aurora database snapshot.,"['    Exporting snapshots may be done by a system or network administrator. Verify whether the user identity, user agent,\n    and/or hostname should be making changes in your environment. Snapshot exports from unfamiliar users or hosts should\n    be investigated. If known behavior is causing false positives, it can be exempted from the rule.\n    ']","['filebeat-*', 'logs-aws*']",kuery,Elastic License v2,AWS RDS Snapshot Export,['https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_StartExportTask.html'],21,119c8877-8613-416d-a98a-96b6664ee73a5,low,"['Elastic', 'Cloud', 'AWS', 'Continuous Monitoring', 'SecOps', 'Asset Visibility']",event.ingested,query,"event.dataset:aws.cloudtrail and event.provider:rds.amazonaws.com and event.action:StartExportTask and event.outcome:success
",now-60m,,"## Config

The AWS Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.","[{'framework': 'MITRE ATT&CK', 'tactic': {'name': 'Exfiltration', 'id': 'TA0010', 'reference': 'https://attack.mitre.org/tactics/TA0010/'}}]",,,,10m,,,,,,,,,,,,,2021/08/02,,aws
547,2020/07/08,deprecated,,,2022/07/25,['Elastic'],Identifies that the maximum number of failed login attempts has been reached for a user.,,['auditbeat-*'],kuery,Elastic License v2,Auditd Max Failed Login Attempts,['https://github.com/linux-pam/linux-pam/blob/0adbaeb273da1d45213134aa271e95987103281c/modules/pam_faillock/pam_faillock.c#L574'],47,fb9937ce-7e21-46bf-831d-1ad96eac674d,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Initial Access']",event.ingested,query,"event.module:auditd and event.action:""failed-log-in-too-many-times-to""
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2022/07/25,,
548,2020/07/08,deprecated,,,2022/07/25,['Elastic'],Identifies that a login attempt has happened from a forbidden location.,,['auditbeat-*'],kuery,Elastic License v2,Auditd Login from Forbidden Location,['https://github.com/linux-pam/linux-pam/blob/aac5a8fdc4aa3f7e56335a6343774cc1b63b408d/modules/pam_access/pam_access.c#L412'],73,cab4f01c-793f-4a54-a03e-e5d85b96d7af,high,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Initial Access']",event.ingested,query,"event.module:auditd and event.action:""attempted-log-in-from-unusual-place-to""
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2022/07/25,,
549,2020/07/08,deprecated,,,2022/07/25,['Elastic'],Identifies that the maximum number login sessions has been reached for a user.,,['auditbeat-*'],kuery,Elastic License v2,Auditd Max Login Sessions,['https://github.com/linux-pam/linux-pam/blob/70c32cc6fca51338f92afa58eb75b1107a5c2430/modules/pam_limits/pam_limits.c#L1007'],47,20dc4620-3b68-4269-8124-ca5091e00ea8,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Initial Access']",event.ingested,query,"event.module:auditd and event.action:""opened-too-many-sessions-to""
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2022/07/25,,
550,2020/07/08,deprecated,,,2022/07/25,['Elastic'],Identifies that a login attempt occurred at a forbidden time.,,['auditbeat-*'],kuery,Elastic License v2,Auditd Login Attempt at Forbidden Time,['https://github.com/linux-pam/linux-pam/blob/aac5a8fdc4aa3f7e56335a6343774cc1b63b408d/modules/pam_time/pam_time.c#L666'],47,90e28af7-1d96-4582-bf11-9a1eff21d0e5,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Initial Access']",event.ingested,query,"event.module:auditd and event.action:""attempted-log-in-during-unusual-hour-to""
",,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1078', 'name': 'Valid Accounts', 'reference': 'https://attack.mitre.org/techniques/T1078/'}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2022/07/25,,
551,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"This rule detects network events that may indicate the use of RDP traffic to the Internet. RDP is commonly used by
system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be
directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or
backdoor vector.
","['    RDP connections may be made directly to Internet destinations in order to access Windows cloud server instances but\n    such connections are usually made only by engineers. In such cases, only RDP gateways, bastions or jump servers may\n    be expected Internet destinations and can be exempted from this rule. RDP may be required by some work-flows such as\n    remote access and support for specialized software products and servers. Such work-flows are usually known and not\n    unexpected. Usage that is unfamiliar to server or network owners can be unexpected and suspicious.\n    ']","['filebeat-*', 'packetbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,RDP (Remote Desktop Protocol) to the Internet,,21,e56993d2-759c-4120-984c-9ec9bb940fd5,low,"['Elastic', 'Host', 'Network', 'Threat Detection', 'Initial Access']",event.ingested,query,"event.category:(network or network_traffic) and network.transport:tcp and (destination.port:3389 or event.dataset:zeek.rdp) and
  source.ip:(
    10.0.0.0/8 or
    172.16.0.0/12 or
    192.168.0.0/16
  ) and
  not destination.ip:(
    10.0.0.0/8 or
    127.0.0.0/8 or
    169.254.0.0/16 or
    172.16.0.0/12 or
    192.168.0.0/16 or
    224.0.0.0/4 or
    ""::1"" or
    ""FE80::/10"" or
    ""FF00::/8""
  )
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1190', 'name': 'Exploit Public-Facing Application', 'reference': 'https://attack.mitre.org/techniques/T1190/'}], 'tactic': {'id': 'TA0001', 'name': 'Initial Access', 'reference': 'https://attack.mitre.org/tactics/TA0001/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1048', 'name': 'Exfiltration Over Alternative Protocol', 'reference': 'https://attack.mitre.org/techniques/T1048/'}], 'tactic': {'id': 'TA0010', 'name': 'Exfiltration', 'reference': 'https://attack.mitre.org/tactics/TA0010/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
552,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"The Linux mknod program is sometimes used in the command payload of a remote command injection (RCI) and other exploits.
It is used to export a command shell when the traditional version of netcat is not available to the payload.
","['    Mknod is a Linux system program. Some normal use of this program, at varying levels of frequency, may originate from\n    scripts, automation tools, and frameworks. Usage by web servers is more likely to be suspicious.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Mknod Process Activity,['https://web.archive.org/web/20191218024607/https://pen-testing.sans.org/blog/2013/05/06/netcat-without-e-no-problem/'],21,61c31c14-507f-4627-8c31-072556b89a9c,low,"['Elastic', 'Host', 'Linux', 'Threat Detection']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:mknod
",now-9m,,,,,,,,,,,,,,,,,,,,2021/04/15,,
553,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"Nmap was executed on a Linux host. Nmap is a FOSS tool for network scanning and security testing. It can map and
discover networks, and identify listening services and operating systems. It is sometimes used to gather information in
support of exploitation, execution or lateral movement.
",['    Security testing tools and frameworks may run `Nmap` in the course of security auditing. Some normal use of this\n    command may originate from security engineers and network or server administrators. Use of nmap by ordinary users is\n    uncommon.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Nmap Process Activity,['https://en.wikipedia.org/wiki/Nmap'],21,c87fca17-b3a9-4e83-b545-f30746c53920,low,"['Elastic', 'Host', 'Linux', 'Threat Detection']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:nmap
",now-9m,,,,,,,,,,,,,,,,,,,,2021/04/15,,
554,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"A Socat process is running on a Linux host. Socat is often used as a persistence mechanism by exporting a reverse shell,
or by serving a shell on a listening port. Socat is also sometimes used for lateral movement.
","['    Socat is a dual-use tool that can be used for benign or malicious activity. Some normal use of this program, at\n    varying levels of frequency, may originate from scripts, automation tools, and frameworks. Usage by web servers is\n    more likely to be suspicious.\n    ']","['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Socat Process Activity,['https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/#method-2-using-socat'],47,cd4d5754-07e1-41d4-b9a5-ef4ea6a0a126,medium,"['Elastic', 'Host', 'Linux', 'Threat Detection']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:socat and not process.args:-V
",now-9m,,,,,,,,,,,,,,,,,,,,2021/04/15,,
555,2021/01/15,deprecated,,,2021/04/15,['Elastic'],"Identifies the creation or execution of a cron job. Adversaries may abuse cron jobs to perform task scheduling for
initial or recurring execution of malicious code.
",['Legitimate software or scripts using cron jobs for recurring tasks.'],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Potential Persistence via Cron Job,"['https://archive.f-secure.com/weblog/archives/00002576.html', 'https://ss64.com/osx/crontab.html']",21,b1c14366-f4f8-49a0-bcbb-51d2de8b0bb8,low,"['Elastic', 'Host', 'Linux', 'macOS', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:process and event.type:(start or process_started or info) and
  not user.name:root and
  ((process.name:crontab and not process.args:(""-l"" or ""-r"" or ""-e"" or ""-help"" or ""-h"")) or
    (process.parent.name:cron and not process.name:""running job"" and
       not process.executable:(/Applications/Docker.app/Contents/Resources/bin/docker or
                               /usr/bin/killall or
                               /usr/sbin/sendmail or
                               /usr/bin/env or
                               /usr/bin/timeshift or
                               /bin/rm)))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1053', 'name': 'Scheduled Task/Job', 'reference': 'https://attack.mitre.org/techniques/T1053/', 'subtechnique': [{'id': 'T1053.003', 'name': 'Cron', 'reference': 'https://attack.mitre.org/techniques/T1053/003/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
556,2020/02/18,deprecated,,,2021/04/15,['Elastic'],"Identifies loadable kernel module errors, which are often indicative of potential persistence attempts.",['    Security tools and device drivers may run these programs in order to load legitimate kernel modules. Use of these\n    programs by ordinary users is uncommon.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Persistence via Kernel Module Modification,['https://www.hackers-arise.com/single-post/2017/11/03/Linux-for-Hackers-Part-10-Loadable-Kernel-Modules-LKM'],21,81cc58f5-8062-49a2-ba84-5cc4b4d31c40,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Persistence']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:(insmod or kmod or modprobe or rmod)
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1547', 'name': 'Boot or Logon Autostart Execution', 'reference': 'https://attack.mitre.org/techniques/T1547/', 'subtechnique': [{'id': 'T1547.006', 'name': 'Kernel Modules and Extensions', 'reference': 'https://attack.mitre.org/techniques/T1547/006/'}]}], 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2021/04/15,,
557,2022/04/26,deprecated,,,2022/08/01,['Elastic'],"Identifies a suspicious local successful logon event where the Logon Package is Kerberos, the remote address is set to
localhost, and the target user SID is the built-in local Administrator account. This may indicate an attempt to leverage
a Kerberos relay attack variant that can be used to elevate privilege locally from a domain joined limited user to local
System privileges.
",,"['winlogbeat-*', 'logs-system.*']",eql,Elastic License v2,Potential Privilege Escalation via Local Kerberos Relay over LDAP,"['https://github.com/Dec0ne/KrbRelayUp', 'https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html', 'https://github.com/cube0x0/KrbRelay']",73,3605a013-6f0c-4f7d-88a5-326f5be262ec,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation', 'Credential Access']",,eql,"authentication where

 /* event 4624 need to be logged */
 event.action == ""logged-in"" and event.outcome == ""success"" and

 /* authenticate locally via relayed kerberos ticket */
 winlog.event_data.AuthenticationPackageName : ""Kerberos"" and winlog.logon.type == ""Network"" and
 source.ip == ""127.0.0.1"" and source.port > 0 and

 /* Impersonate Administrator user via S4U2Self service ticket */
 winlog.event_data.TargetUserSid : ""S-1-5-21-*-500""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.002', 'name': 'Bypass User Account Control', 'reference': 'https://attack.mitre.org/techniques/T1548/002/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1558', 'name': 'Steal or Forge Kerberos Tickets', 'reference': 'https://attack.mitre.org/techniques/T1558/'}], 'tactic': {'id': 'TA0006', 'name': 'Credential Access', 'reference': 'https://attack.mitre.org/tactics/TA0006/'}}]",,,,,,,,,,,,,,,,,2022/08/01,,
558,2020/02/18,deprecated,,,2022/07/28,['Elastic'],"Strace is a useful diagnostic, instructional, and debugging tool. This rule identifies a privileged context execution of
strace which can be used to escape restrictive environments by instantiating a shell in order to elevate privileges or
move laterally.
",['    Strace is a dual-use tool that can be used for benign or malicious activity. Some normal use of this command may\n    originate from developers or SREs engaged in debugging or system call tracing.\n    '],"['auditbeat-*', 'logs-endpoint.events.*']",kuery,Elastic License v2,Strace Process Activity,['https://en.wikipedia.org/wiki/Strace'],21,d6450d4e-81c6-46a3-bd94-079886318ed5,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:process and event.type:(start or process_started) and process.name:strace
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'name': 'Exploitation for Privilege Escalation', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,2022/07/28,,
559,2021/07/06,deprecated,,,2022/03/16,['Elastic'],"Detects the creation or modification of a print driver with an unusual file name. This may indicate attempts to exploit
privilege escalation vulnerabilities related to the Print Spooler service. For more information refer to CVE-2021-34527
and verify that the impacted system is investigated.
",,"['winlogbeat-*', 'logs-endpoint.events.*', 'logs-windows.*']",eql,Elastic License v2,Potential PrintNightmare File Modification,"['https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527', 'https://github.com/afwu/PrintNightmare']",73,5e87f165-45c2-4b80-bfa5-52822552c997,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"/* This rule is compatible with both Sysmon and Elastic Endpoint */

file where process.name : ""spoolsv.exe"" and 
 file.name : (""kernelbase.dll"", ""ntdll.dll"", ""kernel32.dll"", ""winhttp.dll"", ""user32.dll"") and
 file.path : ""?:\\Windows\\System32\\spool\\drivers\\x64\\3\\*""
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1068', 'reference': 'https://attack.mitre.org/techniques/T1068/', 'name': 'Exploitation for Privilege Escalation'}], 'tactic': {'id': 'TA0004', 'reference': 'https://attack.mitre.org/tactics/TA0004/', 'name': 'Privilege Escalation'}}]",,,,,,,,,,,,,,,,,2022/03/16,,
560,2021/07/06,deprecated,,,2022/03/16,['Elastic'],"Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service. For more
information refer to CVE-2021-34527 and verify that the impacted system is investigated.
",,['logs-endpoint.events.*'],eql,Elastic License v2,Potential PrintNightmare Exploit Registry Modification,"['https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527', 'https://github.com/afwu/PrintNightmare']",73,6506c9fd-229e-4722-8f0f-69be759afd2a,high,"['Elastic', 'Host', 'Windows', 'Threat Detection', 'Privilege Escalation']",event.ingested,eql,"/* This rule is not compatible with Sysmon due to schema issues */

registry where process.name : ""spoolsv.exe"" and
  (registry.path : ""HKLM\\SYSTEM\\ControlSet*\\Control\\Print\\Environments\\Windows*\\Drivers\\Version-3\\mimikatz*\\Data File"" or
  (registry.path : ""HKLM\\SYSTEM\\ControlSet*\\Control\\Print\\Environments\\Windows*\\Drivers\\Version-3\\*\\Configuration File"" and
   registry.data.strings : (""kernelbase.dll"", ""ntdll.dll"", ""kernel32.dll"", ""winhttp.dll"", ""user32.dll"")))
",now-9m,,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'name': 'Exploitation for Privilege Escalation', 'id': 'T1068', 'reference': 'https://attack.mitre.org/techniques/T1068/'}], 'tactic': {'name': 'Privilege Escalation', 'id': 'TA0004', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}]",,,,,,,,,,,,,,,,,2022/03/16,,
561,2020/04/23,deprecated,,,2021/03/16,['Elastic'],"An adversary may add the setgid bit to a file or directory in order to run a file with the privileges of the owning
group. An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application
with the setgid bit to get code running in a different user’s context. Additionally, adversaries can use this mechanism
on their own malware to make sure they're able to execute in elevated contexts in the future.
",,"['auditbeat-*', 'logs-endpoint.events.*']",lucene,Elastic License,Setgid Bit Set via chmod,,21,3a86e085-094c-412d-97ff-2439731e59cb,low,"['Elastic', 'Host', 'Linux', 'Threat Detection', 'Privilege Escalation']",event.ingested,query,"event.category:process AND event.type:(start or process_started) AND process.name:chmod AND process.args:(g+s OR /2[0-9]{3}/) AND NOT user.name:root
",now-9m,33.0,,"[{'framework': 'MITRE ATT&CK', 'technique': [{'id': 'T1548', 'name': 'Abuse Elevation Control Mechanism', 'reference': 'https://attack.mitre.org/techniques/T1548/', 'subtechnique': [{'id': 'T1548.001', 'name': 'Setuid and Setgid', 'reference': 'https://attack.mitre.org/techniques/T1548/001/'}]}], 'tactic': {'id': 'TA0004', 'name': 'Privilege Escalation', 'reference': 'https://attack.mitre.org/tactics/TA0004/'}}, {'framework': 'MITRE ATT&CK', 'tactic': {'id': 'TA0003', 'name': 'Persistence', 'reference': 'https://attack.mitre.org/tactics/TA0003/'}}]",,,,,,,,,,,,,,,,,2021/03/16,,
562,2021/04/21,deprecated,,,2022/01/12,['Elastic'],"This rule is triggered when indicators from the Threat Intel Filebeat module (v7.x) has a match against local file or
network observations.
",,"['auditbeat-*', 'endgame-*', 'filebeat-*', 'logs-*', 'packetbeat-*', 'winlogbeat-*']",kuery,Elastic License v2,Threat Intel Filebeat Module (v7.x) Indicator Match,['https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html'],99,dc672cb7-d5df-4d1f-a6d7-0841b1caafb9,critical,"['Elastic', 'Windows', 'Elastic Endgame', 'Network', 'Continuous Monitoring', 'SecOps', 'Monitoring']",,threat_match,"file.hash.*:* or file.pe.imphash:* or source.ip:* or destination.ip:* or url.full:* or registry.path:*
",now-65m,,"## Triage and Analysis

### Investigating Threat Intel Indicator Matches

Threat Intel indicator match rules allow matching from a local observation such as an endpoint event that records a file
hash with an entry of a file hash stored within the Threat Intel Filebeat module. Other examples of matches can occur on
an IP address, registry path, URL and imphash.

The matches will be based on the incoming feed data so it's important to validate the data and review the results by
investigating the associated activity to determine if it requires further investigation.

If an indicator matches a local observation, the following enriched fields will be generated to identify the indicator, field, and type matched.

- `threatintel.indicator.matched.atomic` - this identifies the atomic indicator that matched the local observation
- `threatintel.indicator.matched.field` - this identifies the indicator field that matched the local observation
- `threatintel.indicator.matched.type` - this identifies the indicator type that matched the local observation

#### Possible investigation steps:
- Investigation should be validated and reviewed based on the data (file hash, registry path, URL, imphash) that was matched
and viewing the source of that activity.
- Consider the history of the indicator that was matched. Has it happened before? Is it happening on multiple machines?
These kinds of questions can help understand if the activity is related to legitimate behavior.
- Consider the user and their role within the company, is this something related to their job or work function?

### False Positive Analysis
- For any matches found, it's important to consider the initial release date of that indicator. Threat intelligence can
be a great tool for augmenting existing security processes, while at the same time it should be understood that threat
intelligence can represent a specific set of activity observed at a point in time. For example, an IP address
may have hosted malware observed in a Dridex campaign six months ago, but it's possible that IP has been remediated and
no longer represents any threat.
- Adversaries often use legitimate tools as network administrators such as `PsExec` or `AdFind`, these tools often find their
way into indicator lists creating the potential for false positives.
- It's possible after large and publicly written campaigns, curious employees might end up going directly to attacker infrastructure and generating these rules

### Response and Remediation
- If suspicious or malicious behavior is observed, immediate response should be taken to isolate activity to prevent further
post-compromise behavior.
- One example of a response if a machine matched a command and control IP address would be to add an entry to a network
device such as a firewall or proxy appliance to prevent any outbound activity from leaving that machine.
- Another example of a response with a malicious file hash match would involve validating if the file was properly quarantined,
review current running processes looking for any abnormal activity, and investigating for any other follow-up actions such as persistence or lateral movement
",,,495ad7a7-316e-4544-8a0f-9c098daee76e,Generic Threat Match Timeline,1h,['filebeat-*'],threatintel.indicator,kuery,"@timestamp >= ""now-30d"" and event.module:threatintel and (threatintel.indicator.file.hash.*:* or
threatintel.indicator.file.pe.imphash:* or threatintel.indicator.ip:* or threatintel.indicator.registry.path:* or
threatintel.indicator.url.full:*)
","[{'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.module', 'params': {'query': 'threatintel'}}, 'query': {'match_phrase': {'event.module': 'threatintel'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.category', 'params': {'query': 'threat'}}, 'query': {'match_phrase': {'event.category': 'threat'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.kind', 'params': {'query': 'enrichment'}}, 'query': {'match_phrase': {'event.kind': 'enrichment'}}}, {'$state': {'store': 'appState'}, 'meta': {'negate': False, 'disabled': False, 'type': 'phrase', 'key': 'event.type', 'params': {'query': 'indicator'}}, 'query': {'match_phrase': {'event.type': 'indicator'}}}]","[{'entries': [{'value': 'threatintel.indicator.file.hash.md5', 'field': 'file.hash.md5', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.file.hash.sha1', 'field': 'file.hash.sha1', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.file.hash.sha256', 'field': 'file.hash.sha256', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.file.pe.imphash', 'field': 'file.pe.imphash', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.ip', 'field': 'source.ip', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.ip', 'field': 'destination.ip', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.url.full', 'field': 'url.full', 'type': 'mapping'}]}, {'entries': [{'value': 'threatintel.indicator.registry.path', 'field': 'registry.path', 'type': 'mapping'}]}]",,,,,,,2022/01/12,,
